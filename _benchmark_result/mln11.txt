*** logfile: env11-dqn-CH-MLN-seed7051975-00.1-40.train.log ***
RESULTS:: 16:11:56: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.0->env11-dqn-CH-MLN-00.1: iter=0, error-rate=0, num-dialogs=100 ***
RESULTS:: 16:11:56: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.0->env11-dqn-CH-MLN-00.1: iter=0, error-rate=0, num-dialogs=100 ***
2020-11-18 16:11:57.862376: I tensorflow/core/platform/cpu_feature_guard.cc:145] This TensorFlow binary is optimized with Intel(R) MKL-DNN to use the following CPU instructions in performance critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA
To enable them in non-MKL-DNN operations, rebuild TensorFlow with the appropriate compiler flags.
2020-11-18 16:11:57.892672: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2300020000 Hz
2020-11-18 16:11:57.898249: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x558f39c4f580 executing computations on platform Host. Devices:
2020-11-18 16:11:57.898312: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>
OMP: Info #212: KMP_AFFINITY: decoding x2APIC ids.
OMP: Info #210: KMP_AFFINITY: Affinity capable, using global cpuid leaf 11 info
OMP: Info #154: KMP_AFFINITY: Initial OS proc set respected: 0-71
OMP: Info #156: KMP_AFFINITY: 72 available OS procs
OMP: Info #157: KMP_AFFINITY: Uniform topology
OMP: Info #179: KMP_AFFINITY: 2 packages x 18 cores/pkg x 2 threads/core (36 total cores)
OMP: Info #214: KMP_AFFINITY: OS proc to physical thread map:
OMP: Info #171: KMP_AFFINITY: OS proc 0 maps to package 0 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 36 maps to package 0 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 1 maps to package 0 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 37 maps to package 0 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 2 maps to package 0 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 38 maps to package 0 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 3 maps to package 0 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 39 maps to package 0 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 4 maps to package 0 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 40 maps to package 0 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 5 maps to package 0 core 8 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 41 maps to package 0 core 8 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 6 maps to package 0 core 9 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 42 maps to package 0 core 9 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 7 maps to package 0 core 10 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 43 maps to package 0 core 10 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 8 maps to package 0 core 11 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 44 maps to package 0 core 11 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 9 maps to package 0 core 16 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 45 maps to package 0 core 16 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 10 maps to package 0 core 17 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 46 maps to package 0 core 17 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 11 maps to package 0 core 18 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 47 maps to package 0 core 18 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 12 maps to package 0 core 19 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 48 maps to package 0 core 19 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 13 maps to package 0 core 20 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 49 maps to package 0 core 20 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 14 maps to package 0 core 24 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 50 maps to package 0 core 24 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 15 maps to package 0 core 25 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 51 maps to package 0 core 25 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 16 maps to package 0 core 26 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 52 maps to package 0 core 26 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 17 maps to package 0 core 27 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 53 maps to package 0 core 27 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 18 maps to package 1 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 54 maps to package 1 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 19 maps to package 1 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 55 maps to package 1 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 20 maps to package 1 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 56 maps to package 1 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 21 maps to package 1 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 57 maps to package 1 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 22 maps to package 1 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 58 maps to package 1 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 23 maps to package 1 core 8 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 59 maps to package 1 core 8 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 24 maps to package 1 core 9 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 60 maps to package 1 core 9 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 25 maps to package 1 core 10 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 61 maps to package 1 core 10 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 26 maps to package 1 core 11 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 62 maps to package 1 core 11 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 27 maps to package 1 core 16 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 63 maps to package 1 core 16 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 28 maps to package 1 core 17 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 64 maps to package 1 core 17 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 29 maps to package 1 core 18 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 65 maps to package 1 core 18 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 30 maps to package 1 core 19 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 66 maps to package 1 core 19 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 31 maps to package 1 core 20 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 67 maps to package 1 core 20 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 32 maps to package 1 core 24 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 68 maps to package 1 core 24 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 33 maps to package 1 core 25 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 69 maps to package 1 core 25 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 34 maps to package 1 core 26 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 70 maps to package 1 core 26 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 35 maps to package 1 core 27 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 71 maps to package 1 core 27 thread 1 
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080018 thread 0 bound to OS proc set 0
2020-11-18 16:11:57.923429: I tensorflow/core/common_runtime/process_util.cc:115] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance.
2020-11-18 16:11:59.841592: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080173 thread 1 bound to OS proc set 1
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080319 thread 2 bound to OS proc set 2
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080320 thread 3 bound to OS proc set 3
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080321 thread 4 bound to OS proc set 4
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080322 thread 5 bound to OS proc set 5
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080323 thread 6 bound to OS proc set 6
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080324 thread 7 bound to OS proc set 7
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080325 thread 8 bound to OS proc set 8
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080326 thread 9 bound to OS proc set 9
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080327 thread 10 bound to OS proc set 10
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080328 thread 11 bound to OS proc set 11
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080330 thread 13 bound to OS proc set 13
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080329 thread 12 bound to OS proc set 12
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080331 thread 14 bound to OS proc set 14
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080332 thread 15 bound to OS proc set 15
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080333 thread 16 bound to OS proc set 16
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080334 thread 17 bound to OS proc set 17
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080335 thread 18 bound to OS proc set 18
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080336 thread 19 bound to OS proc set 19
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080337 thread 20 bound to OS proc set 20
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080338 thread 21 bound to OS proc set 21
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080339 thread 22 bound to OS proc set 22
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080340 thread 23 bound to OS proc set 23
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080341 thread 24 bound to OS proc set 24
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080342 thread 25 bound to OS proc set 25
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080343 thread 26 bound to OS proc set 26
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080344 thread 27 bound to OS proc set 27
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080345 thread 28 bound to OS proc set 28
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080346 thread 29 bound to OS proc set 29
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080347 thread 30 bound to OS proc set 30
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080348 thread 31 bound to OS proc set 31
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080349 thread 32 bound to OS proc set 32
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080350 thread 33 bound to OS proc set 33
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080351 thread 34 bound to OS proc set 34
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080352 thread 35 bound to OS proc set 35
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080353 thread 36 bound to OS proc set 36
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080354 thread 37 bound to OS proc set 37
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080355 thread 38 bound to OS proc set 38
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080356 thread 39 bound to OS proc set 39
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080357 thread 40 bound to OS proc set 40
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080358 thread 41 bound to OS proc set 41
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080359 thread 42 bound to OS proc set 42
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080360 thread 43 bound to OS proc set 43
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080361 thread 44 bound to OS proc set 44
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080362 thread 45 bound to OS proc set 45
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080363 thread 46 bound to OS proc set 46
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080364 thread 47 bound to OS proc set 47
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080365 thread 48 bound to OS proc set 48
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080366 thread 49 bound to OS proc set 49
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080367 thread 50 bound to OS proc set 50
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080368 thread 51 bound to OS proc set 51
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080369 thread 52 bound to OS proc set 52
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080370 thread 53 bound to OS proc set 53
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080371 thread 54 bound to OS proc set 54
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080372 thread 55 bound to OS proc set 55
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080373 thread 56 bound to OS proc set 56
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080374 thread 57 bound to OS proc set 57
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080375 thread 58 bound to OS proc set 58
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080377 thread 60 bound to OS proc set 60
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080376 thread 59 bound to OS proc set 59
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080378 thread 61 bound to OS proc set 61
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080379 thread 62 bound to OS proc set 62
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080380 thread 63 bound to OS proc set 63
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080382 thread 65 bound to OS proc set 65
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080381 thread 64 bound to OS proc set 64
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080383 thread 66 bound to OS proc set 66
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080384 thread 67 bound to OS proc set 67
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080386 thread 69 bound to OS proc set 69
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080385 thread 68 bound to OS proc set 68
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080387 thread 70 bound to OS proc set 70
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080389 thread 72 bound to OS proc set 0
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080388 thread 71 bound to OS proc set 71
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080172 thread 73 bound to OS proc set 1
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080390 thread 74 bound to OS proc set 2
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080391 thread 75 bound to OS proc set 3
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080392 thread 76 bound to OS proc set 4
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080393 thread 77 bound to OS proc set 5
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080394 thread 78 bound to OS proc set 6
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080395 thread 79 bound to OS proc set 7
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080396 thread 80 bound to OS proc set 8
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080397 thread 81 bound to OS proc set 9
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080398 thread 82 bound to OS proc set 10
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080399 thread 83 bound to OS proc set 11
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080400 thread 84 bound to OS proc set 12
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080401 thread 85 bound to OS proc set 13
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080402 thread 86 bound to OS proc set 14
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080403 thread 87 bound to OS proc set 15
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080404 thread 88 bound to OS proc set 16
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080405 thread 89 bound to OS proc set 17
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080406 thread 90 bound to OS proc set 18
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080407 thread 91 bound to OS proc set 19
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080408 thread 92 bound to OS proc set 20
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080409 thread 93 bound to OS proc set 21
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080410 thread 94 bound to OS proc set 22
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080411 thread 95 bound to OS proc set 23
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080412 thread 96 bound to OS proc set 24
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080413 thread 97 bound to OS proc set 25
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080414 thread 98 bound to OS proc set 26
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080415 thread 99 bound to OS proc set 27
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080416 thread 100 bound to OS proc set 28
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080417 thread 101 bound to OS proc set 29
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080418 thread 102 bound to OS proc set 30
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080419 thread 103 bound to OS proc set 31
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080421 thread 105 bound to OS proc set 33
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080422 thread 106 bound to OS proc set 34
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080423 thread 107 bound to OS proc set 35
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080424 thread 108 bound to OS proc set 36
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080420 thread 104 bound to OS proc set 32
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080425 thread 109 bound to OS proc set 37
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080426 thread 110 bound to OS proc set 38
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080427 thread 111 bound to OS proc set 39
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080428 thread 112 bound to OS proc set 40
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080429 thread 113 bound to OS proc set 41
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080430 thread 114 bound to OS proc set 42
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080431 thread 115 bound to OS proc set 43
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080432 thread 116 bound to OS proc set 44
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080433 thread 117 bound to OS proc set 45
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080434 thread 118 bound to OS proc set 46
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080435 thread 119 bound to OS proc set 47
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080436 thread 120 bound to OS proc set 48
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080438 thread 122 bound to OS proc set 50
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080437 thread 121 bound to OS proc set 49
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080440 thread 124 bound to OS proc set 52
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080439 thread 123 bound to OS proc set 51
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080442 thread 126 bound to OS proc set 54
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080441 thread 125 bound to OS proc set 53
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080443 thread 127 bound to OS proc set 55
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080444 thread 128 bound to OS proc set 56
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080445 thread 129 bound to OS proc set 57
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080446 thread 130 bound to OS proc set 58
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080447 thread 131 bound to OS proc set 59
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080448 thread 132 bound to OS proc set 60
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080449 thread 133 bound to OS proc set 61
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080450 thread 134 bound to OS proc set 62
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080451 thread 135 bound to OS proc set 63
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080452 thread 136 bound to OS proc set 64
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080453 thread 137 bound to OS proc set 65
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080454 thread 138 bound to OS proc set 66
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080455 thread 139 bound to OS proc set 67
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080457 thread 141 bound to OS proc set 69
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080456 thread 140 bound to OS proc set 68
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080459 thread 143 bound to OS proc set 71
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080458 thread 142 bound to OS proc set 70
OMP: Info #250: KMP_AFFINITY: pid 1080018 tid 1080460 thread 144 bound to OS proc set 0
nothing loaded in first iteration
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.0
loaded replay size:  0
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 3
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 6
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay",stars="2") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="2")
   Turn 4
   Usr > [(u'inform(="dontcare",type="placetostay",stars="2")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",kind="hotel") [1.000000]
   User > inform(="dontcare",kind="hotel")
   Turn 5
   Usr > [('inform(="dontcare",kind="hotel")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 7
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",stars="3") [1.000000]
   User > inform(="dontcare",stars="3")
   Turn 4
   Usr > [('inform(="dontcare",stars="3")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare",pricerange="expensive") [1.000000]
   User > inform(area="dontcare",pricerange="expensive")
   Turn 9
   Usr > [('inform(area="dontcare",pricerange="expensive")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 2
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 3
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 4
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 5
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay",stars="2") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="2")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay",stars="2")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",pricerange="cheap") [1.000000]
   User > inform(kind="hotel",pricerange="cheap")
   Turn 3
   Usr > [('inform(kind="hotel",pricerange="cheap")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="guesthouse223",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 7
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 10
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 12
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 13
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 4
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap",stars="4",kind="hotel") [1.000000]
   User > negate(pricerange="cheap",stars="4",kind="hotel")
   Turn 6
   Usr > [('negate(pricerange="cheap",stars="4",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 8
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 10
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 11
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="the cambridge belfry",price) [1.000000]
   User > request(name="the cambridge belfry",price)
   Turn 12
   Usr > [(u'request(name="the cambridge belfry",price)', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 14
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 15
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 2
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",kind="hotel") [1.000000]
   User > inform(="dontcare",kind="hotel")
   Turn 3
   Usr > [('inform(="dontcare",kind="hotel")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4",pricerange="cheap") [1.000000]
   User > inform(stars="4",pricerange="cheap")
   Turn 4
   Usr > [('inform(stars="4",pricerange="cheap")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 2
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare",type="placetostay",stars="4",kind="hotel") [1.000000]
   User > inform(area="dontcare",type="placetostay",stars="4",kind="hotel")
   Turn 5
   Usr > [(u'inform(area="dontcare",type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare",pricerange="expensive") [1.000000]
   User > inform(="dontcare",pricerange="expensive")
   Turn 6
   Usr > [('inform(="dontcare",pricerange="expensive")', 1.0)]
   Sys > request(area)
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 7
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 13
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 14
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(hasparking="1",name="huntingdon marriott hotel",area="west",kind="hotel",pricerange="expensive",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 16
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 17
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 18
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 19
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 20
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 21
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 22
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -22, suc = 0, turn = 22
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",stars="0") [1.000000]
   User > inform(pricerange="moderate",stars="0")
   Turn 3
   Usr > [('inform(pricerange="moderate",stars="0")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 6
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",kind="guesthouse") [1.000000]
   User > inform(="dontcare",kind="guesthouse")
   Turn 7
   Usr > [('inform(="dontcare",kind="guesthouse")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",stars="3") [1.000000]
   User > inform(="dontcare",stars="3")
   Turn 4
   Usr > [('inform(="dontcare",stars="3")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",pricerange="expensive") [1.000000]
   User > inform(="dontcare",pricerange="expensive")
   Turn 2
   Usr > [('inform(="dontcare",pricerange="expensive")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 6
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 7
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare",type="placetostay") [1.000000]
   User > inform(area="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(area="dontcare",type="placetostay")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 7
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 8
   Usr > [('inform(stars="0")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 9
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0",area="centre")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 11
   Usr > [('inform(stars="0")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 14
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 15
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 16
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 17
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 18
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 19
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 20
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -20, suc = 0, turn = 20
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",pricerange="cheap") [1.000000]
   User > inform(="dontcare",pricerange="cheap")
   Turn 5
   Usr > [('inform(="dontcare",pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay",stars="3",kind="guesthouse",pricerange="moderate") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [('affirm()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(area="north")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="guesthouse202",price="guesthouse202price")
   Semi > ack() [1.000000]
   User > ack()
   Turn 12
   Usr > [('ack()', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 13
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 16
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse202",phone) [1.000000]
   User > request(name="guesthouse202",phone)
   Turn 17
   Usr > [(u'request(name="guesthouse202",phone)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 18
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 19
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 20
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 21
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 22
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 23
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 24
   Usr > [(u'request(phone)', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 25
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare",pricerange="cheap") [1.000000]
   User > inform(hasparking="dontcare",pricerange="cheap")
   Turn 3
   Usr > [('inform(hasparking="dontcare",pricerange="cheap")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 2
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay",stars="3") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="3")
   Turn 3
   Usr > [(u'inform(="dontcare",type="placetostay",stars="3")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare",kind="hotel") [1.000000]
   User > inform(area="dontcare",kind="hotel")
   Turn 4
   Usr > [('inform(area="dontcare",kind="hotel")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 5
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare",pricerange="expensive") [1.000000]
   User > inform(="dontcare",pricerange="expensive")
   Turn 7
   Usr > [('inform(="dontcare",pricerange="expensive")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 8
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 9
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="0",kind="guesthouse")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",pricerange="moderate") [1.000000]
   User > inform(="dontcare",pricerange="moderate")
   Turn 3
   Usr > [('inform(="dontcare",pricerange="moderate")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 5
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 7
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 8
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive",stars="2",kind="guesthouse") [1.000000]
   User > inform(pricerange="expensive",stars="2",kind="guesthouse")
   Turn 2
   Usr > [('inform(pricerange="expensive",stars="2",kind="guesthouse")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 5
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse49",stars="2",area="west")
   Semi > request(hasinternet,name="guesthouse49") [1.000000]
   User > request(hasinternet,name="guesthouse49")
   Turn 7
   Usr > [(u'request(hasinternet,name="guesthouse49")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 8
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 11
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare",type="placetostay",stars="4",kind="hotel",pricerange="cheap") [1.000000]
   User > inform(area="dontcare",type="placetostay",stars="4",kind="hotel",pricerange="cheap")
   Turn 2
   Usr > [(u'inform(area="dontcare",type="placetostay",stars="4",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 13
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 14
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 15
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",stars="4") [1.000000]
   User > inform(="dontcare",stars="4")
   Turn 4
   Usr > [('inform(="dontcare",stars="4")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 6
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 8
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 3
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare",type="placetostay") [1.000000]
   User > inform(area="dontcare",type="placetostay")
   Turn 4
   Usr > [(u'inform(area="dontcare",type="placetostay")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare",stars="3") [1.000000]
   User > inform(="dontcare",stars="3")
   Turn 5
   Usr > [('inform(="dontcare",stars="3")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 6
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="hotel235",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(pricerange="expensive") [1.000000]
   User > affirm(pricerange="expensive")
   Turn 12
   Usr > [('affirm(pricerange="expensive")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 13
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 14
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 15
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 16
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 17
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 18
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 19
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -19, suc = 0, turn = 19
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare",type="placetostay") [1.000000]
   User > inform(area="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(area="dontcare",type="placetostay")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm(stars="3") [1.000000]
   User > affirm(stars="3")
   Turn 3
   Usr > [('affirm(stars="3")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare",kind="hotel") [1.000000]
   User > inform(="dontcare",kind="hotel")
   Turn 7
   Usr > [('inform(="dontcare",kind="hotel")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 4
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 6
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive",stars="0",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",stars="0",kind="hotel")
   Turn 7
   Usr > [('inform(pricerange="expensive",stars="0",kind="hotel")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 9
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 10
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 3
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse179",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",stars="0",kind="hotel",pricerange="cheap") [1.000000]
   User > inform(="dontcare",stars="0",kind="hotel",pricerange="cheap")
   Turn 4
   Usr > [('inform(="dontcare",stars="0",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 8
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 10
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 12
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 13
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 14
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 15
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",pricerange="expensive") [1.000000]
   User > inform(="dontcare",pricerange="expensive")
   Turn 3
   Usr > [('inform(="dontcare",pricerange="expensive")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(area="north")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 8
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 6
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",stars="3") [1.000000]
   User > inform(kind="hotel",stars="3")
   Turn 7
   Usr > [('inform(kind="hotel",stars="3")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare",pricerange="expensive") [1.000000]
   User > inform(="dontcare",pricerange="expensive")
   Turn 9
   Usr > [('inform(="dontcare",pricerange="expensive")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 12
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",stars="3",kind="guesthouse",pricerange="expensive") [1.000000]
   User > inform(="dontcare",stars="3",kind="guesthouse",pricerange="expensive")
   Turn 4
   Usr > [('inform(="dontcare",stars="3",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 6
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="warkworth house",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",stars="0") [1.000000]
   User > inform(="dontcare",stars="0")
   Turn 4
   Usr > [('inform(="dontcare",stars="0")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 5
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > inform(stars="4",kind="hotel",pricerange="moderate")
   Turn 2
   Usr > [('inform(stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 4
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare",type="placetostay",stars="3") [1.000000]
   User > inform(area="dontcare",type="placetostay",stars="3")
   Turn 5
   Usr > [(u'inform(area="dontcare",type="placetostay",stars="3")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",kind="guesthouse")
   Turn 7
   Usr > [('inform(pricerange="moderate",kind="guesthouse")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",stars="0",kind="guesthouse") [1.000000]
   User > inform(="dontcare",stars="0",kind="guesthouse")
   Turn 2
   Usr > [('inform(="dontcare",stars="0",kind="guesthouse")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",pricerange="moderate") [1.000000]
   User > inform(="dontcare",pricerange="moderate")
   Turn 3
   Usr > [('inform(="dontcare",pricerange="moderate")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 6
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 7
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 9
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay",stars="4") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="4")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay",stars="4")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare",kind="guesthouse",pricerange="cheap") [1.000000]
   User > inform(area="dontcare",kind="guesthouse",pricerange="cheap")
   Turn 4
   Usr > [('inform(area="dontcare",kind="guesthouse",pricerange="cheap")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 6
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",stars="4") [1.000000]
   User > inform(="dontcare",stars="4")
   Turn 6
   Usr > [('inform(="dontcare",stars="4")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 3
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 5
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive",stars="2",kind="guesthouse") [1.000000]
   User > inform(pricerange="expensive",stars="2",kind="guesthouse")
   Turn 6
   Usr > [('inform(pricerange="expensive",stars="2",kind="guesthouse")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 5
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",stars="4") [1.000000]
   User > inform(="dontcare",stars="4")
   Turn 6
   Usr > [('inform(="dontcare",stars="4")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare",type="placetostay") [1.000000]
   User > inform(area="dontcare",type="placetostay")
   Turn 6
   Usr > [(u'inform(area="dontcare",type="placetostay")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",stars="3") [1.000000]
   User > inform(="dontcare",stars="3")
   Turn 8
   Usr > [('inform(="dontcare",stars="3")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 10
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > reqmore()
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 11
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",kind="hotel") [1.000000]
   User > inform(="dontcare",kind="hotel")
   Turn 4
   Usr > [('inform(="dontcare",kind="hotel")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",pricerange="moderate") [1.000000]
   User > inform(="dontcare",pricerange="moderate")
   Turn 6
   Usr > [('inform(="dontcare",pricerange="moderate")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 8
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare",stars="4") [1.000000]
   User > inform(area="dontcare",stars="4")
   Turn 2
   Usr > [('inform(area="dontcare",stars="4")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare",kind="guesthouse",pricerange="cheap") [1.000000]
   User > inform(="dontcare",kind="guesthouse",pricerange="cheap")
   Turn 3
   Usr > [('inform(="dontcare",kind="guesthouse",pricerange="cheap")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 4
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 5
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 8
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",kind="hotel") [1.000000]
   User > inform(="dontcare",kind="hotel")
   Turn 6
   Usr > [('inform(="dontcare",kind="hotel")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",pricerange="expensive") [1.000000]
   User > inform(="dontcare",pricerange="expensive")
   Turn 7
   Usr > [('inform(="dontcare",pricerange="expensive")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",stars="0") [1.000000]
   User > inform(="dontcare",stars="0")
   Turn 7
   Usr > [('inform(="dontcare",stars="0")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay",stars="4") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="4")
   Turn 3
   Usr > [(u'inform(="dontcare",type="placetostay",stars="4")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > negate(kind="guesthouse") [1.000000]
   User > negate(kind="guesthouse")
   Turn 4
   Usr > [('negate(kind="guesthouse")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 5
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 8
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 9
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 10
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 12
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse36",stars="4",area="north")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 13
   Usr > [('thankyou()', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 14
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 15
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -16, suc = 0, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 2
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare",stars="4") [1.000000]
   User > inform(="dontcare",stars="4")
   Turn 4
   Usr > [('inform(="dontcare",stars="4")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 7
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 8
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 9
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 11
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 12
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 13
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 14
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 15
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",stars="4") [1.000000]
   User > inform(="dontcare",stars="4")
   Turn 3
   Usr > [('inform(="dontcare",stars="4")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",kind="hotel") [1.000000]
   User > inform(="dontcare",kind="hotel")
   Turn 4
   Usr > [('inform(="dontcare",kind="hotel")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare",pricerange="expensive") [1.000000]
   User > inform(hasparking="dontcare",pricerange="expensive")
   Turn 5
   Usr > [('inform(hasparking="dontcare",pricerange="expensive")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare",type="placetostay") [1.000000]
   User > inform(area="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(area="dontcare",type="placetostay")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare",stars="2",kind="hotel",pricerange="cheap") [1.000000]
   User > inform(="dontcare",stars="2",kind="hotel",pricerange="cheap")
   Turn 3
   Usr > [('inform(="dontcare",stars="2",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 4
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare",kind="hotel",pricerange="moderate") [1.000000]
   User > inform(area="dontcare",kind="hotel",pricerange="moderate")
   Turn 2
   Usr > [('inform(area="dontcare",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4",area="north")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > reqmore()
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 7
   Usr > [(u'request(phone)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="hotel82",phone) [1.000000]
   User > request(name="hotel82",phone)
   Turn 11
   Usr > [(u'request(name="hotel82",phone)', 1.0)]
   Sys > reqmore()
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 12
   Usr > [(u'request(phone)', 1.0)]
   Sys > reqmore()
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 13
   Usr > [(u'request(phone)', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 14
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 15
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 16
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 17
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 18
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 19
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 20
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -20, suc = 0, turn = 20
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",stars="3") [1.000000]
   User > inform(="dontcare",stars="3")
   Turn 6
   Usr > [('inform(="dontcare",stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="guesthouse",pricerange="moderate") [1.000000]
   User > affirm(kind="guesthouse",pricerange="moderate")
   Turn 7
   Usr > [('affirm(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 8
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 9
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 12
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 13
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 14
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 15
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -16, suc = 0, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",kind="guesthouse",pricerange="expensive") [1.000000]
   User > inform(="dontcare",kind="guesthouse",pricerange="expensive")
   Turn 2
   Usr > [('inform(="dontcare",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > confirm(area="north")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(area="north")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse57",stars="2",area="north")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > request(stars)
   Semi > request(name="guesthouse57",phone) [1.000000]
   User > request(name="guesthouse57",phone)
   Turn 7
   Usr > [(u'request(name="guesthouse57",phone)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse57",phone) [1.000000]
   User > request(name="guesthouse57",phone)
   Turn 8
   Usr > [(u'request(name="guesthouse57",phone)', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 10
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse49",stars="2",area="west")
   Semi > confirm(name="guesthouse57") [1.000000]
   User > confirm(name="guesthouse57")
   Turn 13
   Usr > [('confirm(name="guesthouse57")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 14
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 15
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",pricerange="moderate") [1.000000]
   User > inform(="dontcare",pricerange="moderate")
   Turn 3
   Usr > [('inform(="dontcare",pricerange="moderate")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 4
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 8
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 9
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 11
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 12
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 13
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 14
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 15
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 2
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",kind="hotel")
   Turn 3
   Usr > [('inform(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 4
   Usr > [('inform(stars="0")', 1.0)]
   Sys > select(stars="0",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 5
   Usr > [('inform(stars="0")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 7
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 13
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 15
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 16
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 17
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 18
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -18, suc = 0, turn = 18
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="guesthouse83",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 2
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare",type="placetostay") [1.000000]
   User > inform(area="dontcare",type="placetostay")
   Turn 4
   Usr > [(u'inform(area="dontcare",type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",pricerange="moderate") [1.000000]
   User > inform(="dontcare",pricerange="moderate")
   Turn 6
   Usr > [('inform(="dontcare",pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="hobsons house",stars="3",area="west")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 9
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 13
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 7, suc = 1, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 2
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare",stars="4") [1.000000]
   User > inform(="dontcare",stars="4")
   Turn 3
   Usr > [('inform(="dontcare",stars="4")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > request(area)
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 5
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > negate(pricerange="cheap",kind="hotel") [1.000000]
   User > negate(pricerange="cheap",kind="hotel")
   Turn 7
   Usr > [('negate(pricerange="cheap",kind="hotel")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 8
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 5
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 7
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 8
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 9
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",type="placetostay",stars="4") [1.000000]
   User > inform(kind="hotel",type="placetostay",stars="4")
   Turn 5
   Usr > [(u'inform(kind="hotel",type="placetostay",stars="4")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",pricerange="moderate") [1.000000]
   User > inform(kind="hotel",pricerange="moderate")
   Turn 6
   Usr > [('inform(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 4
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > negate(pricerange="moderate") [1.000000]
   User > negate(pricerange="moderate")
   Turn 6
   Usr > [('negate(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 7
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm(stars="2") [1.000000]
   User > affirm(stars="2")
   Turn 8
   Usr > [('affirm(stars="2")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > confirm(stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",type="placetostay",stars="3",kind="hotel") [1.000000]
   User > negate(pricerange="expensive",type="placetostay",stars="3",kind="hotel")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 3
   Usr > [('negate(stars="0")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > inform(kind="guesthouse",pricerange="moderate") [1.000000]
   User > inform(kind="guesthouse",pricerange="moderate")
   Turn 4
   Usr > [('inform(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(hasinternet,postcode) [1.000000]
   User > request(hasinternet,postcode)
   Turn 6
   Usr > [(u'request(hasinternet,postcode)', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(hasinternet,postcode) [1.000000]
   User > request(hasinternet,postcode)
   Turn 7
   Usr > [(u'request(hasinternet,postcode)', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 8
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 2
   Usr > [('negate(stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 3
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="hobsons house",stars="3")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="hobsons house",stars="3")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 7
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > request(kind)
   Semi > request(name="hobsons house",hasinternet) [1.000000]
   User > request(name="hobsons house",hasinternet)
   Turn 8
   Usr > [(u'request(name="hobsons house",hasinternet)', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="hobsons house",stars="3")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 10
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > request(kind)
   Semi > request(name="hobsons house",hasinternet) [1.000000]
   User > request(name="hobsons house",hasinternet)
   Turn 11
   Usr > [(u'request(name="hobsons house",hasinternet)', 1.0)]
   Sys > request(kind)
   Semi > request(name="hobsons house",hasinternet) [1.000000]
   User > request(name="hobsons house",hasinternet)
   Turn 12
   Usr > [(u'request(name="hobsons house",hasinternet)', 1.0)]
   Sys > request(kind)
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 3
   Usr > [('negate(stars="3")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="hobsons house",stars="3")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="hobsons house",stars="3")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="hobsons house",stars="3")
   Semi > request(addr,name="hobsons house") [1.000000]
   User > request(addr,name="hobsons house")
   Turn 6
   Usr > [(u'request(addr,name="hobsons house")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3",pricerange="moderate") [1.000000]
   User > inform(stars="3",pricerange="moderate")
   Turn 3
   Usr > [('inform(stars="3",pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
Saving deepq-network...
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:15:58: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:15:58: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -7.28 +- 1.21
RESULTS:: 16:15:58: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -7.28 +- 1.21
Average success = 0.00 +- 0.00
RESULTS:: 16:15:58: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 7.48 +- 1.18
RESULTS:: 16:15:58: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 7.48 +- 1.18
*** Evaluating env11-dqn-CH-MLN-00.1: error-rate=0 num-dialogs=100 ***
RESULTS:: 16:15:58: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.1: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.1.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.1
loaded replay size:  648
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:17:19: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:17:19: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.00 +- 0.00
RESULTS:: 16:17:19: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.00 +- 0.00
Average success = 0.00 +- 0.00
RESULTS:: 16:17:19: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.00 +- 0.00
RESULTS:: 16:17:19: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.00 +- 0.00
RESULTS:: 16:17:19: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.1->env11-dqn-CH-MLN-00.2: iter=1, error-rate=0, num-dialogs=100 ***
RESULTS:: 16:17:19: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.1->env11-dqn-CH-MLN-00.2: iter=1, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.1.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.1
loaded replay size:  648
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(type="placetostay",stars="3") [1.000000]
   User > affirm(type="placetostay",stars="3")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 2
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4",type="placetostay",kind="hotel",pricerange="cheap") [1.000000]
   User > inform(stars="4",type="placetostay",kind="hotel",pricerange="cheap")
   Turn 2
   Usr > [(u'inform(stars="4",type="placetostay",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [('affirm()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap",type="placetostay",stars="4") [1.000000]
   User > inform(pricerange="cheap",type="placetostay",stars="4")
   Turn 2
   Usr > [(u'inform(pricerange="cheap",type="placetostay",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",stars="0") [1.000000]
   User > inform(pricerange="moderate",stars="0")
   Turn 2
   Usr > [('inform(pricerange="moderate",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="2",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",pricerange="moderate") [1.000000]
   User > inform(="dontcare",pricerange="moderate")
   Turn 2
   Usr > [('inform(="dontcare",pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",kind="hotel") [1.000000]
   User > inform(="dontcare",kind="hotel")
   Turn 2
   Usr > [('inform(="dontcare",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 2
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay",stars="0") [1.000000]
   User > negate(area="dontcare",type="placetostay",stars="0")
   Turn 3
   Usr > [(u'negate(area="dontcare",type="placetostay",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",pricerange="expensive") [1.000000]
   User > inform(kind="hotel",pricerange="expensive")
   Turn 2
   Usr > [('inform(kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",type="placetostay",stars="4",kind="guesthouse",pricerange="expensive") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="4",kind="guesthouse",pricerange="expensive")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay",stars="4",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 3
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",kind="hotel",pricerange="cheap") [1.000000]
   User > inform(="dontcare",kind="hotel",pricerange="cheap")
   Turn 2
   Usr > [('inform(="dontcare",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > confirm(area="north")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(area="north")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
Saving deepq-network...
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:19:30: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:19:30: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.32 +- 0.12
RESULTS:: 16:19:30: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.32 +- 0.12
Average success = 0.00 +- 0.00
RESULTS:: 16:19:30: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.32 +- 0.12
RESULTS:: 16:19:30: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.32 +- 0.12
*** Evaluating env11-dqn-CH-MLN-00.2: error-rate=0 num-dialogs=100 ***
RESULTS:: 16:19:30: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.2: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.2.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.2
loaded replay size:  680
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:20:48: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:20:48: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.00 +- 0.00
RESULTS:: 16:20:48: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.00 +- 0.00
Average success = 0.00 +- 0.00
RESULTS:: 16:20:48: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.00 +- 0.00
RESULTS:: 16:20:48: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.00 +- 0.00
RESULTS:: 16:20:48: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.2->env11-dqn-CH-MLN-00.3: iter=2, error-rate=0, num-dialogs=100 ***
RESULTS:: 16:20:48: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.2->env11-dqn-CH-MLN-00.3: iter=2, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.2.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.2
loaded replay size:  680
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > inform(="dontcare",stars="4",kind="hotel",pricerange="expensive")
   Turn 2
   Usr > [('inform(="dontcare",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > request(area)
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 3
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 2
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > inform(stars="4",kind="hotel",pricerange="expensive")
   Turn 2
   Usr > [('inform(stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",stars="3",pricerange="expensive") [1.000000]
   User > inform(kind="hotel",stars="3",pricerange="expensive")
   Turn 2
   Usr > [('inform(kind="hotel",stars="3",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay",stars="0") [1.000000]
   User > negate(area="dontcare",type="placetostay",stars="0")
   Turn 2
   Usr > [(u'negate(area="dontcare",type="placetostay",stars="0")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 3
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare",stars="2",kind="guesthouse") [1.000000]
   User > inform(area="dontcare",stars="2",kind="guesthouse")
   Turn 3
   Usr > [('inform(area="dontcare",stars="2",kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > negate(kind="guesthouse",type="placetostay") [1.000000]
   User > negate(kind="guesthouse",type="placetostay")
   Turn 2
   Usr > [(u'negate(kind="guesthouse",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > negate(kind="guesthouse",type="placetostay") [1.000000]
   User > negate(kind="guesthouse",type="placetostay")
   Turn 2
   Usr > [(u'negate(kind="guesthouse",type="placetostay")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [('affirm()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="2",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",stars="3",pricerange="moderate") [1.000000]
   User > inform(kind="hotel",stars="3",pricerange="moderate")
   Turn 2
   Usr > [('inform(kind="hotel",stars="3",pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",pricerange="expensive") [1.000000]
   User > inform(="dontcare",pricerange="expensive")
   Turn 2
   Usr > [('inform(="dontcare",pricerange="expensive")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 3
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",kind="hotel") [1.000000]
   User > inform(pricerange="moderate",kind="hotel")
   Turn 3
   Usr > [('inform(pricerange="moderate",kind="hotel")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 3
   Usr > [('deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 4
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",pricerange="moderate") [1.000000]
   User > negate(hasparking="dontcare",pricerange="moderate")
   Turn 2
   Usr > [('negate(hasparking="dontcare",pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
Saving deepq-network...
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:23:05: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:23:05: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.43 +- 0.20
RESULTS:: 16:23:05: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.43 +- 0.20
Average success = 0.00 +- 0.00
RESULTS:: 16:23:05: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.43 +- 0.20
RESULTS:: 16:23:05: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.43 +- 0.20
*** Evaluating env11-dqn-CH-MLN-00.3: error-rate=0 num-dialogs=100 ***
RESULTS:: 16:23:05: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.3: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.3.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.3
loaded replay size:  723
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:24:24: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:24:25: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.00 +- 0.00
RESULTS:: 16:24:25: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.00 +- 0.00
Average success = 0.00 +- 0.00
RESULTS:: 16:24:25: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.00 +- 0.00
RESULTS:: 16:24:25: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.00 +- 0.00
RESULTS:: 16:24:25: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.3->env11-dqn-CH-MLN-00.4: iter=3, error-rate=0, num-dialogs=100 ***
RESULTS:: 16:24:25: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.3->env11-dqn-CH-MLN-00.4: iter=3, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.3.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.3
loaded replay size:  723
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="hotel233",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="3",type="placetostay") [1.000000]
   User > inform(stars="3",type="placetostay")
   Turn 2
   Usr > [(u'inform(stars="3",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",stars="0",kind="hotel") [1.000000]
   User > inform(pricerange="moderate",stars="0",kind="hotel")
   Turn 3
   Usr > [('inform(pricerange="moderate",stars="0",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="cityroomz",stars="0",area="centre")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 4
   Usr > [(u'request(price)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 2
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="hotel82",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 2
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 3
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="1")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3",pricerange="moderate") [1.000000]
   User > inform(stars="3",pricerange="moderate")
   Turn 2
   Usr > [('inform(stars="3",pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(name="archway house",phone="01223575314")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 3
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(area)
   Semi > request(name="archway house",hasinternet) [1.000000]
   User > request(name="archway house",hasinternet)
   Turn 5
   Usr > [(u'request(name="archway house",hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="2") [1.000000]
   User > negate(stars="2")
   Turn 2
   Usr > [('negate(stars="2")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > inform(type="placetostay",stars="4",kind="hotel")
   Turn 2
   Usr > [(u'inform(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > bye()
Saving deepq-network...
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:26:35: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:26:35: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.34 +- 0.14
RESULTS:: 16:26:35: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.34 +- 0.14
Average success = 0.00 +- 0.00
RESULTS:: 16:26:35: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.34 +- 0.14
RESULTS:: 16:26:35: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.34 +- 0.14
*** Evaluating env11-dqn-CH-MLN-00.4: error-rate=0 num-dialogs=100 ***
RESULTS:: 16:26:35: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.4: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.4.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.4
loaded replay size:  757
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:27:56: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:27:56: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.00 +- 0.00
RESULTS:: 16:27:56: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.00 +- 0.00
Average success = 0.00 +- 0.00
RESULTS:: 16:27:56: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.00 +- 0.00
RESULTS:: 16:27:56: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.00 +- 0.00
RESULTS:: 16:27:56: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.4->env11-dqn-CH-MLN-00.5: iter=4, error-rate=0, num-dialogs=100 ***
RESULTS:: 16:27:56: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.4->env11-dqn-CH-MLN-00.5: iter=4, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.4.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.4
loaded replay size:  757
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare",type="placetostay") [1.000000]
   User > inform(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="guesthouse41",hasinternet="1")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 2
   Usr > [(u'request(phone)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse111",postcode="guesthouse111postcode")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 2
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > inform(name="hotel52",hasparking="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",type="placetostay",stars="0") [1.000000]
   User > inform(kind="hotel",type="placetostay",stars="0")
   Turn 2
   Usr > [(u'inform(kind="hotel",type="placetostay",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="4") [1.000000]
   User > negate(hasparking="dontcare",stars="4")
   Turn 2
   Usr > [('negate(hasparking="dontcare",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="0",kind="hotel") [1.000000]
   User > inform(stars="0",kind="hotel")
   Turn 2
   Usr > [('inform(stars="0",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 2
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts(pricerange="dontcare") [1.000000]
   User > reqalts(pricerange="dontcare")
   Turn 2
   Usr > [('reqalts(pricerange="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",stars="3") [1.000000]
   User > inform(pricerange="moderate",stars="3")
   Turn 3
   Usr > [('inform(pricerange="moderate",stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive",type="placetostay",stars="0") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="0")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="3",kind="guesthouse")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="2") [1.000000]
   User > negate(stars="2")
   Turn 2
   Usr > [('negate(stars="2")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 3
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 2
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",pricerange="cheap") [1.000000]
   User > inform(="dontcare",pricerange="cheap")
   Turn 3
   Usr > [('inform(="dontcare",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 2
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
Saving deepq-network...
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:30:08: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:30:08: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.35 +- 0.13
RESULTS:: 16:30:08: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.35 +- 0.13
Average success = 0.00 +- 0.00
RESULTS:: 16:30:08: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.35 +- 0.13
RESULTS:: 16:30:08: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.35 +- 0.13
*** Evaluating env11-dqn-CH-MLN-00.5: error-rate=0 num-dialogs=100 ***
RESULTS:: 16:30:08: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.5: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.5.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.5
loaded replay size:  792
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:31:29: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:31:29: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.00 +- 0.00
RESULTS:: 16:31:29: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.00 +- 0.00
Average success = 0.00 +- 0.00
RESULTS:: 16:31:29: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.00 +- 0.00
RESULTS:: 16:31:29: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.00 +- 0.00
RESULTS:: 16:31:29: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.5->env11-dqn-CH-MLN-00.6: iter=5, error-rate=0, num-dialogs=100 ***
RESULTS:: 16:31:29: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.5->env11-dqn-CH-MLN-00.6: iter=5, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.5.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.5
loaded replay size:  792
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 3
   Usr > [('inform(stars="0")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > inform(name="hotel148",addr="hotel148addr")
   Semi > request(phone,price) [1.000000]
   User > request(phone,price)
   Turn 2
   Usr > [(u'request(phone,price)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse",stars="2") [1.000000]
   User > inform(kind="guesthouse",stars="2")
   Turn 2
   Usr > [('inform(kind="guesthouse",stars="2")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 3
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(name="guesthouse85",hasparking="0")
   Semi > confirm(stars="2") [1.000000]
   User > confirm(stars="2")
   Turn 4
   Usr > [('confirm(stars="2")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",type="placetostay",stars="2") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="2")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay",stars="2")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare",kind="hotel") [1.000000]
   User > inform(="dontcare",kind="hotel")
   Turn 3
   Usr > [('inform(="dontcare",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 3
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 4
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="3",type="placetostay",kind="hotel") [1.000000]
   User > negate(stars="3",type="placetostay",kind="hotel")
   Turn 2
   Usr > [(u'negate(stars="3",type="placetostay",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",stars="4",kind="hotel") [1.000000]
   User > negate(area="dontcare",stars="4",kind="hotel")
   Turn 2
   Usr > [('negate(area="dontcare",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 2
   Usr > [('negate(stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse221",price="guesthouse221price")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 2
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",type="placetostay") [1.000000]
   User > negate(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 2
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="guesthouse179",hasinternet="1")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 2
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",kind="hotel")
   Turn 2
   Usr > [('inform(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="2",type="placetostay",kind="hotel") [1.000000]
   User > inform(stars="2",type="placetostay",kind="hotel")
   Turn 3
   Usr > [(u'inform(stars="2",type="placetostay",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="express by holiday inn cambridge",stars="2",area="east")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
Saving deepq-network...
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:33:44: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:33:44: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.41 +- 0.17
RESULTS:: 16:33:44: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.41 +- 0.17
Average success = 0.00 +- 0.00
RESULTS:: 16:33:44: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.41 +- 0.17
RESULTS:: 16:33:44: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.41 +- 0.17
*** Evaluating env11-dqn-CH-MLN-00.6: error-rate=0 num-dialogs=100 ***
RESULTS:: 16:33:44: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.6: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.6.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.6
loaded replay size:  833
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:35:05: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:35:05: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.00 +- 0.00
RESULTS:: 16:35:05: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.00 +- 0.00
Average success = 0.00 +- 0.00
RESULTS:: 16:35:05: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.00 +- 0.00
RESULTS:: 16:35:05: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.00 +- 0.00
RESULTS:: 16:35:05: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.6->env11-dqn-CH-MLN-00.7: iter=6, error-rate=0, num-dialogs=100 ***
RESULTS:: 16:35:05: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.6->env11-dqn-CH-MLN-00.7: iter=6, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.6.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.6
loaded replay size:  833
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > affirm(stars="4",kind="hotel") [1.000000]
   User > affirm(stars="4",kind="hotel")
   Turn 4
   Usr > [('affirm(stars="4",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="3",kind="hotel") [1.000000]
   User > inform(stars="3",kind="hotel")
   Turn 2
   Usr > [('inform(stars="3",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="0",type="placetostay",kind="guesthouse") [1.000000]
   User > inform(stars="0",type="placetostay",kind="guesthouse")
   Turn 3
   Usr > [(u'inform(stars="0",type="placetostay",kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 2
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4",type="placetostay") [1.000000]
   User > inform(stars="4",type="placetostay")
   Turn 3
   Usr > [(u'inform(stars="4",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 3
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 4
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",stars="4") [1.000000]
   User > negate(area="dontcare",stars="4")
   Turn 2
   Usr > [('negate(area="dontcare",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive",stars="3") [1.000000]
   User > inform(pricerange="expensive",stars="3")
   Turn 2
   Usr > [('inform(pricerange="expensive",stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Saving deepq-network...
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:37:15: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:37:15: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.33 +- 0.14
RESULTS:: 16:37:15: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.33 +- 0.14
Average success = 0.00 +- 0.00
RESULTS:: 16:37:15: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.33 +- 0.14
RESULTS:: 16:37:15: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.33 +- 0.14
*** Evaluating env11-dqn-CH-MLN-00.7: error-rate=0 num-dialogs=100 ***
RESULTS:: 16:37:15: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.7: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.7.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.7
loaded replay size:  866
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:38:39: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:38:39: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.00 +- 0.00
RESULTS:: 16:38:39: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.00 +- 0.00
Average success = 0.00 +- 0.00
RESULTS:: 16:38:39: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.00 +- 0.00
RESULTS:: 16:38:39: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.00 +- 0.00
RESULTS:: 16:38:39: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.7->env11-dqn-CH-MLN-00.8: iter=7, error-rate=0, num-dialogs=100 ***
RESULTS:: 16:38:39: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.7->env11-dqn-CH-MLN-00.8: iter=7, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.7.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.7
loaded replay size:  866
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",stars="3") [1.000000]
   User > inform(="dontcare",stars="3")
   Turn 2
   Usr > [('inform(="dontcare",stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 3
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="hotel131",stars="3")
   Semi > deny(stars="3",stars="4") [1.000000]
   User > deny(stars="3",stars="4")
   Turn 3
   Usr > [('deny(stars="3",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0",kind="guesthouse") [1.000000]
   User > inform(stars="0",kind="guesthouse")
   Turn 2
   Usr > [('inform(stars="0",kind="guesthouse")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 3
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [('affirm()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 3
   Usr > [('inform(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse223",addr="guesthouse223addr")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive",type="placetostay",stars="0") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="0")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="0")', 1.0)]
   Sys > request(area)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 3
   Usr > [('inform(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 3
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap",type="placetostay") [1.000000]
   User > inform(pricerange="cheap",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(stars="4",kind="hotel") [1.000000]
   User > affirm(stars="4",kind="hotel")
   Turn 3
   Usr > [('affirm(stars="4",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",type="placetostay",stars="2",pricerange="moderate") [1.000000]
   User > inform(kind="hotel",type="placetostay",stars="2",pricerange="moderate")
   Turn 2
   Usr > [(u'inform(kind="hotel",type="placetostay",stars="2",pricerange="moderate")', 1.0)]
   Sys > request(area)
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 3
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 2
   Usr > [('negate(stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 2
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(pricerange="expensive",stars="3",kind="guesthouse") [1.000000]
   User > inform(pricerange="expensive",stars="3",kind="guesthouse")
   Turn 2
   Usr > [('inform(pricerange="expensive",stars="3",kind="guesthouse")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
Saving deepq-network...
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:40:59: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:40:59: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.44 +- 0.15
RESULTS:: 16:40:59: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.44 +- 0.15
Average success = 0.00 +- 0.00
RESULTS:: 16:40:59: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.44 +- 0.15
RESULTS:: 16:40:59: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.44 +- 0.15
*** Evaluating env11-dqn-CH-MLN-00.8: error-rate=0 num-dialogs=100 ***
RESULTS:: 16:40:59: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.8: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.8.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.8
loaded replay size:  910
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:42:24: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:42:24: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.00 +- 0.00
RESULTS:: 16:42:24: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.00 +- 0.00
Average success = 0.00 +- 0.00
RESULTS:: 16:42:24: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.00 +- 0.00
RESULTS:: 16:42:24: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.00 +- 0.00
RESULTS:: 16:42:24: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.8->env11-dqn-CH-MLN-00.9: iter=8, error-rate=0, num-dialogs=100 ***
RESULTS:: 16:42:24: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.8->env11-dqn-CH-MLN-00.9: iter=8, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.8.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.8
loaded replay size:  910
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",stars="4",kind="hotel") [1.000000]
   User > inform(="dontcare",stars="4",kind="hotel")
   Turn 2
   Usr > [('inform(="dontcare",stars="4",kind="hotel")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",pricerange="expensive") [1.000000]
   User > inform(kind="hotel",pricerange="expensive")
   Turn 3
   Usr > [('inform(kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 2
   Usr > [('negate(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 3
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4",type="placetostay") [1.000000]
   User > inform(stars="4",type="placetostay")
   Turn 2
   Usr > [(u'inform(stars="4",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="2",type="placetostay") [1.000000]
   User > inform(stars="2",type="placetostay")
   Turn 2
   Usr > [(u'inform(stars="2",type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm(pricerange="expensive") [1.000000]
   User > affirm(pricerange="expensive")
   Turn 2
   Usr > [('affirm(pricerange="expensive")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(area)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > inform(stars="0",type="placetostay") [1.000000]
   User > inform(stars="0",type="placetostay")
   Turn 2
   Usr > [(u'inform(stars="0",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="4") [1.000000]
   User > affirm(type="placetostay",stars="4")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 3
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse",type="placetostay") [1.000000]
   User > inform(kind="guesthouse",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="guesthouse",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [('affirm()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 2
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 3
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
Saving deepq-network...
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:44:42: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:44:42: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.40 +- 0.13
RESULTS:: 16:44:42: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.40 +- 0.13
Average success = 0.00 +- 0.00
RESULTS:: 16:44:42: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.40 +- 0.13
RESULTS:: 16:44:42: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.40 +- 0.13
*** Evaluating env11-dqn-CH-MLN-00.9: error-rate=0 num-dialogs=100 ***
RESULTS:: 16:44:42: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.9: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.9.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.9
loaded replay size:  950
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:46:07: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:46:07: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.00 +- 0.00
RESULTS:: 16:46:07: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.00 +- 0.00
Average success = 0.00 +- 0.00
RESULTS:: 16:46:07: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.00 +- 0.00
RESULTS:: 16:46:07: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.00 +- 0.00
RESULTS:: 16:46:07: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.9->env11-dqn-CH-MLN-00.10: iter=9, error-rate=0, num-dialogs=100 ***
RESULTS:: 16:46:07: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.9->env11-dqn-CH-MLN-00.10: iter=9, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.9.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.9
loaded replay size:  950
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 3
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3",type="placetostay") [1.000000]
   User > inform(stars="3",type="placetostay")
   Turn 2
   Usr > [(u'inform(stars="3",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse",type="placetostay",stars="4") [1.000000]
   User > inform(kind="guesthouse",type="placetostay",stars="4")
   Turn 2
   Usr > [(u'inform(kind="guesthouse",type="placetostay",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 2
   Usr > [('negate(stars="3")', 1.0)]
   Sys > inform(name="hotel169",price="hotel169price")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 3
   Usr > [(u'request(postcode)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > inform(name="guesthouse114",area="west")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > select(stars="2",stars="0")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 2
   Usr > [('inform(stars="2")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 2
   Usr > [('negate(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay",stars="3",kind="guesthouse",pricerange="moderate") [1.000000]
   User > negate(area="dontcare",type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")
   Turn 2
   Usr > [(u'negate(area="dontcare",type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare",type="placetostay",stars="3",kind="hotel") [1.000000]
   User > inform(hasparking="dontcare",type="placetostay",stars="3",kind="hotel")
   Turn 2
   Usr > [(u'inform(hasparking="dontcare",type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 2
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0",type="placetostay") [1.000000]
   User > negate(stars="0",type="placetostay")
   Turn 2
   Usr > [(u'negate(stars="0",type="placetostay")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm(kind="hotel",pricerange="moderate") [1.000000]
   User > affirm(kind="hotel",pricerange="moderate")
   Turn 4
   Usr > [('affirm(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > select(stars="0",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 5
   Usr > [('inform(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="arbury lodge guesthouse",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",stars="4") [1.000000]
   User > negate(area="dontcare",stars="4")
   Turn 2
   Usr > [('negate(area="dontcare",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="4",kind="guesthouse") [1.000000]
   User > negate(hasparking="dontcare",stars="4",kind="guesthouse")
   Turn 2
   Usr > [('negate(hasparking="dontcare",stars="4",kind="guesthouse")', 1.0)]
   Sys > bye()
Saving deepq-network...
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:48:22: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:48:22: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.37 +- 0.14
RESULTS:: 16:48:22: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.37 +- 0.14
Average success = 0.00 +- 0.00
RESULTS:: 16:48:22: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.37 +- 0.14
RESULTS:: 16:48:22: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.37 +- 0.14
*** Evaluating env11-dqn-CH-MLN-00.10: error-rate=0 num-dialogs=100 ***
RESULTS:: 16:48:22: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.10: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.10.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.10
loaded replay size:  987
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="2",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:49:51: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:49:51: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.00 +- 0.00
RESULTS:: 16:49:51: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.00 +- 0.00
Average success = 0.00 +- 0.00
RESULTS:: 16:49:51: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.00 +- 0.00
RESULTS:: 16:49:51: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.00 +- 0.00
RESULTS:: 16:49:51: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.10->env11-dqn-CH-MLN-00.11: iter=10, error-rate=0, num-dialogs=100 ***
RESULTS:: 16:49:51: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.10->env11-dqn-CH-MLN-00.11: iter=10, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.10.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.10
loaded replay size:  987
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap",stars="4") [1.000000]
   User > negate(pricerange="cheap",stars="4")
   Turn 2
   Usr > [('negate(pricerange="cheap",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 2
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3",kind="hotel",pricerange="expensive") [1.000000]
   User > inform(stars="3",kind="hotel",pricerange="expensive")
   Turn 2
   Usr > [('inform(stars="3",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="0") [1.000000]
   User > affirm(type="placetostay",stars="0")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > inform(stars="4",kind="hotel",pricerange="expensive")
   Turn 2
   Usr > [('inform(stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",stars="4") [1.000000]
   User > inform(="dontcare",stars="4")
   Turn 2
   Usr > [('inform(="dontcare",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 2
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",stars="2",kind="hotel") [1.000000]
   User > negate(area="dontcare",stars="2",kind="hotel")
   Turn 2
   Usr > [('negate(area="dontcare",stars="2",kind="hotel")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 3
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > affirm(type="placetostay",stars="3",kind="hotel")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 2
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",type="placetostay",stars="3") [1.000000]
   User > inform(kind="hotel",type="placetostay",stars="3")
   Turn 3
   Usr > [(u'inform(kind="hotel",type="placetostay",stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > reqmore()
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",pricerange="moderate") [1.000000]
   User > negate(area="dontcare",pricerange="moderate")
   Turn 3
   Usr > [('negate(area="dontcare",pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",stars="4",pricerange="cheap") [1.000000]
   User > inform(kind="hotel",stars="4",pricerange="cheap")
   Turn 2
   Usr > [('inform(kind="hotel",stars="4",pricerange="cheap")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
Saving deepq-network...
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:52:07: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:52:07: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.30 +- 0.13
RESULTS:: 16:52:07: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.30 +- 0.13
Average success = 0.00 +- 0.00
RESULTS:: 16:52:07: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.30 +- 0.13
RESULTS:: 16:52:07: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.30 +- 0.13
*** Evaluating env11-dqn-CH-MLN-00.11: error-rate=0 num-dialogs=100 ***
RESULTS:: 16:52:07: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.11: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.11.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.11
loaded replay size:  1017
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:53:36: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:53:36: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.00 +- 0.00
RESULTS:: 16:53:36: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.00 +- 0.00
Average success = 0.00 +- 0.00
RESULTS:: 16:53:36: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.00 +- 0.00
RESULTS:: 16:53:36: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.00 +- 0.00
RESULTS:: 16:53:36: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.11->env11-dqn-CH-MLN-00.12: iter=11, error-rate=0, num-dialogs=100 ***
RESULTS:: 16:53:36: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.11->env11-dqn-CH-MLN-00.12: iter=11, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.11.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.11
loaded replay size:  1017
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4",type="placetostay") [1.000000]
   User > inform(stars="4",type="placetostay")
   Turn 2
   Usr > [(u'inform(stars="4",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare",type="placetostay") [1.000000]
   User > inform(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay") [1.000000]
   User > negate(area="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(area="dontcare",type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap",stars="0") [1.000000]
   User > inform(pricerange="cheap",stars="0")
   Turn 3
   Usr > [('inform(pricerange="cheap",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 2
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="guesthouse40",hasinternet="1")
   Semi > ack() [1.000000]
   User > ack()
   Turn 2
   Usr > [('ack()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 2
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="2",kind="guesthouse") [1.000000]
   User > negate(hasparking="dontcare",stars="2",kind="guesthouse")
   Turn 2
   Usr > [('negate(hasparking="dontcare",stars="2",kind="guesthouse")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 3
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="hotel200",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 4
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="guesthouse") [1.000000]
   User > inform(="dontcare",kind="guesthouse")
   Turn 2
   Usr > [('inform(="dontcare",kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 3
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 2
   Usr > [('deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 2
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 2
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 3
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4",kind="guesthouse",pricerange="expensive") [1.000000]
   User > inform(stars="4",kind="guesthouse",pricerange="expensive")
   Turn 2
   Usr > [('inform(stars="4",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap",type="placetostay",stars="0") [1.000000]
   User > inform(pricerange="cheap",type="placetostay",stars="0")
   Turn 2
   Usr > [(u'inform(pricerange="cheap",type="placetostay",stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 3
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 2
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > bye()
Saving deepq-network...
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:55:55: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:55:55: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.44 +- 0.15
RESULTS:: 16:55:55: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.44 +- 0.15
Average success = 0.00 +- 0.00
RESULTS:: 16:55:55: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.44 +- 0.15
RESULTS:: 16:55:55: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.44 +- 0.15
*** Evaluating env11-dqn-CH-MLN-00.12: error-rate=0 num-dialogs=100 ***
RESULTS:: 16:55:55: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.12: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.12.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.12
loaded replay size:  1061
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:57:27: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:57:27: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.00 +- 0.00
RESULTS:: 16:57:27: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.00 +- 0.00
Average success = 0.00 +- 0.00
RESULTS:: 16:57:27: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.00 +- 0.00
RESULTS:: 16:57:27: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.00 +- 0.00
RESULTS:: 16:57:27: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.12->env11-dqn-CH-MLN-00.13: iter=12, error-rate=0, num-dialogs=100 ***
RESULTS:: 16:57:27: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.12->env11-dqn-CH-MLN-00.13: iter=12, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.12.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.12
loaded replay size:  1061
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 4
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 2
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="0",kind="guesthouse") [1.000000]
   User > affirm(stars="0",kind="guesthouse")
   Turn 3
   Usr > [('affirm(stars="0",kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 2
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay") [1.000000]
   User > negate(area="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(area="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0",type="placetostay",kind="hotel") [1.000000]
   User > inform(stars="0",type="placetostay",kind="hotel")
   Turn 2
   Usr > [(u'inform(stars="0",type="placetostay",kind="hotel")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",pricerange="cheap") [1.000000]
   User > inform(="dontcare",pricerange="cheap")
   Turn 3
   Usr > [('inform(="dontcare",pricerange="cheap")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > negate(kind="guesthouse",type="placetostay",stars="4",pricerange="expensive") [1.000000]
   User > negate(kind="guesthouse",type="placetostay",stars="4",pricerange="expensive")
   Turn 2
   Usr > [(u'negate(kind="guesthouse",type="placetostay",stars="4",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 2
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(pricerange="moderate",kind="hotel") [1.000000]
   User > inform(pricerange="moderate",kind="hotel")
   Turn 3
   Usr > [('inform(pricerange="moderate",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > reqalts(stars="dontcare") [1.000000]
   User > reqalts(stars="dontcare")
   Turn 5
   Usr > [('reqalts(stars="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(kind="guesthouse",type="placetostay") [1.000000]
   User > inform(kind="guesthouse",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="guesthouse",type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 3
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="0",type="placetostay",kind="hotel") [1.000000]
   User > inform(stars="0",type="placetostay",kind="hotel")
   Turn 2
   Usr > [(u'inform(stars="0",type="placetostay",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > affirm(stars="0") [1.000000]
   User > affirm(stars="0")
   Turn 2
   Usr > [('affirm(stars="0")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",type="placetostay",stars="3",kind="hotel") [1.000000]
   User > negate(pricerange="expensive",type="placetostay",stars="3",kind="hotel")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="3",type="placetostay",kind="hotel",pricerange="moderate") [1.000000]
   User > inform(stars="3",type="placetostay",kind="hotel",pricerange="moderate")
   Turn 2
   Usr > [(u'inform(stars="3",type="placetostay",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay",stars="4") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay",stars="4")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay",stars="4")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4",kind="hotel") [1.000000]
   User > inform(stars="4",kind="hotel")
   Turn 3
   Usr > [('inform(stars="4",kind="hotel")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="0",kind="hotel") [1.000000]
   User > negate(stars="0",kind="hotel")
   Turn 2
   Usr > [('negate(stars="0",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 2
   Usr > [('inform(stars="2")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 2
   Usr > [(u'request(addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 3
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
Saving deepq-network...
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 16:59:52: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 16:59:52: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.49 +- 0.16
RESULTS:: 16:59:52: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.49 +- 0.16
Average success = 0.00 +- 0.00
RESULTS:: 16:59:52: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.49 +- 0.16
RESULTS:: 16:59:52: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.49 +- 0.16
*** Evaluating env11-dqn-CH-MLN-00.13: error-rate=0 num-dialogs=100 ***
RESULTS:: 16:59:52: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.13: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.13.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.13
loaded replay size:  1110
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="2",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:01:23: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:01:23: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.00 +- 0.00
RESULTS:: 17:01:23: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.00 +- 0.00
Average success = 0.00 +- 0.00
RESULTS:: 17:01:23: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.00 +- 0.00
RESULTS:: 17:01:23: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.00 +- 0.00
RESULTS:: 17:01:23: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.13->env11-dqn-CH-MLN-00.14: iter=13, error-rate=0, num-dialogs=100 ***
RESULTS:: 17:01:23: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.13->env11-dqn-CH-MLN-00.14: iter=13, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.13.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.13
loaded replay size:  1110
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="2") [1.000000]
   User > negate(stars="2")
   Turn 2
   Usr > [('negate(stars="2")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse",type="placetostay") [1.000000]
   User > inform(kind="guesthouse",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="guesthouse",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap",type="placetostay") [1.000000]
   User > negate(pricerange="cheap",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse",stars="4",pricerange="cheap") [1.000000]
   User > inform(kind="guesthouse",stars="4",pricerange="cheap")
   Turn 2
   Usr > [('inform(kind="guesthouse",stars="4",pricerange="cheap")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > affirm(stars="4",kind="hotel",pricerange="expensive")
   Turn 3
   Usr > [('affirm(stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="2",kind="guesthouse") [1.000000]
   User > inform(stars="2",kind="guesthouse")
   Turn 2
   Usr > [('inform(stars="2",kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(stars="4")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3",pricerange="moderate") [1.000000]
   User > inform(stars="3",pricerange="moderate")
   Turn 2
   Usr > [('inform(stars="3",pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 4
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 5
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",stars="4") [1.000000]
   User > inform(="dontcare",stars="4")
   Turn 2
   Usr > [('inform(="dontcare",stars="4")', 1.0)]
   Sys > request(area)
   Semi > inform(area="dontcare",kind="hotel",pricerange="expensive") [1.000000]
   User > inform(area="dontcare",kind="hotel",pricerange="expensive")
   Turn 3
   Usr > [('inform(area="dontcare",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 2
   Usr > [('negate(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse",pricerange="expensive") [1.000000]
   User > inform(kind="guesthouse",pricerange="expensive")
   Turn 3
   Usr > [('inform(kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 2
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay") [1.000000]
   User > negate(area="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(area="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
Saving deepq-network...
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:03:46: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:03:46: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.44 +- 0.15
RESULTS:: 17:03:46: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.44 +- 0.15
Average success = 0.00 +- 0.00
RESULTS:: 17:03:46: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.44 +- 0.15
RESULTS:: 17:03:46: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.44 +- 0.15
*** Evaluating env11-dqn-CH-MLN-00.14: error-rate=0 num-dialogs=100 ***
RESULTS:: 17:03:46: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.14: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.14.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.14
loaded replay size:  1154
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:05:17: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:05:17: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.00 +- 0.00
RESULTS:: 17:05:17: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.00 +- 0.00
Average success = 0.00 +- 0.00
RESULTS:: 17:05:17: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.00 +- 0.00
RESULTS:: 17:05:17: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.00 +- 0.00
RESULTS:: 17:05:17: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.14->env11-dqn-CH-MLN-00.15: iter=14, error-rate=0, num-dialogs=100 ***
RESULTS:: 17:05:17: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.14->env11-dqn-CH-MLN-00.15: iter=14, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.14.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.14
loaded replay size:  1154
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",pricerange="cheap") [1.000000]
   User > inform(="dontcare",pricerange="cheap")
   Turn 2
   Usr > [('inform(="dontcare",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap",kind="hotel") [1.000000]
   User > inform(pricerange="cheap",kind="hotel")
   Turn 2
   Usr > [('inform(pricerange="cheap",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse",stars="2",pricerange="expensive") [1.000000]
   User > inform(kind="guesthouse",stars="2",pricerange="expensive")
   Turn 2
   Usr > [('inform(kind="guesthouse",stars="2",pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 4
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",type="placetostay") [1.000000]
   User > negate(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="hotel53",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 2
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="guesthouse191",area="east")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse191",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(type="placetostay",stars="0") [1.000000]
   User > affirm(type="placetostay",stars="0")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 3
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4",kind="guesthouse") [1.000000]
   User > inform(stars="4",kind="guesthouse")
   Turn 2
   Usr > [('inform(stars="4",kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 2
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
Saving deepq-network...
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:07:37: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:07:37: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.32 +- 0.12
RESULTS:: 17:07:37: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.32 +- 0.12
Average success = 0.00 +- 0.00
RESULTS:: 17:07:37: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.32 +- 0.12
RESULTS:: 17:07:37: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.32 +- 0.12
*** Evaluating env11-dqn-CH-MLN-00.15: error-rate=0 num-dialogs=100 ***
RESULTS:: 17:07:37: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.15: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.15.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.15
loaded replay size:  1186
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:09:10: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:09:10: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.00 +- 0.00
RESULTS:: 17:09:10: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.00 +- 0.00
Average success = 0.00 +- 0.00
RESULTS:: 17:09:10: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.00 +- 0.00
RESULTS:: 17:09:10: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.00 +- 0.00
RESULTS:: 17:09:10: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.15->env11-dqn-CH-MLN-00.16: iter=15, error-rate=0, num-dialogs=100 ***
RESULTS:: 17:09:10: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.15->env11-dqn-CH-MLN-00.16: iter=15, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.15.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.15
loaded replay size:  1186
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 2
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 5
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3",kind="hotel") [1.000000]
   User > inform(stars="3",kind="hotel")
   Turn 2
   Usr > [('inform(stars="3",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [('affirm()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 4
   Usr > [(u'request(price)', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 5
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap",type="placetostay",stars="3",kind="hotel") [1.000000]
   User > inform(pricerange="cheap",type="placetostay",stars="3",kind="hotel")
   Turn 2
   Usr > [(u'inform(pricerange="cheap",type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay",stars="4") [1.000000]
   User > affirm(type="placetostay",stars="4")
   Turn 3
   Usr > [(u'affirm(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="hotel113",area="south")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 3
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="0",type="placetostay") [1.000000]
   User > inform(stars="0",type="placetostay")
   Turn 3
   Usr > [(u'inform(stars="0",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse",type="placetostay",stars="3",pricerange="moderate") [1.000000]
   User > inform(kind="guesthouse",type="placetostay",stars="3",pricerange="moderate")
   Turn 2
   Usr > [(u'inform(kind="guesthouse",type="placetostay",stars="3",pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 2
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 3
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="4") [1.000000]
   User > negate(hasparking="dontcare",stars="4")
   Turn 4
   Usr > [('negate(hasparking="dontcare",stars="4")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(hasparking="dontcare",kind="hotel") [1.000000]
   User > inform(hasparking="dontcare",kind="hotel")
   Turn 5
   Usr > [('inform(hasparking="dontcare",kind="hotel")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(type="placetostay",stars="2",kind="hotel") [1.000000]
   User > affirm(type="placetostay",stars="2",kind="hotel")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="2",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse",type="placetostay") [1.000000]
   User > inform(kind="guesthouse",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="guesthouse",type="placetostay")', 1.0)]
   Sys > bye()
Saving deepq-network...
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:11:32: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:11:32: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.45 +- 0.23
RESULTS:: 17:11:32: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.45 +- 0.23
Average success = 0.00 +- 0.00
RESULTS:: 17:11:32: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.45 +- 0.23
RESULTS:: 17:11:32: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.45 +- 0.23
*** Evaluating env11-dqn-CH-MLN-00.16: error-rate=0 num-dialogs=100 ***
RESULTS:: 17:11:32: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.16: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.16.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.16
loaded replay size:  1231
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:13:00: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:13:01: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.00 +- 0.00
RESULTS:: 17:13:01: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.00 +- 0.00
Average success = 0.00 +- 0.00
RESULTS:: 17:13:01: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.00 +- 0.00
RESULTS:: 17:13:01: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.00 +- 0.00
RESULTS:: 17:13:01: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.16->env11-dqn-CH-MLN-00.17: iter=16, error-rate=0, num-dialogs=100 ***
RESULTS:: 17:13:01: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.16->env11-dqn-CH-MLN-00.17: iter=16, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.16.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.16
loaded replay size:  1231
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [('affirm()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",type="placetostay",stars="3") [1.000000]
   User > inform(kind="hotel",type="placetostay",stars="3")
   Turn 2
   Usr > [(u'inform(kind="hotel",type="placetostay",stars="3")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(name="hotel213",hasparking="0")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 2
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="cityroomz",hasparking="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > request(stars)
   Semi > request(name="cityroomz",phone) [1.000000]
   User > request(name="cityroomz",phone)
   Turn 4
   Usr > [(u'request(name="cityroomz",phone)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="hotel96",stars="3")
   Semi > deny(stars="3",stars="0") [1.000000]
   User > deny(stars="3",stars="0")
   Turn 2
   Usr > [('deny(stars="3",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 2
   Usr > [('inform(stars="2")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="2") [1.000000]
   User > inform(="dontcare",stars="2")
   Turn 2
   Usr > [('inform(="dontcare",stars="2")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay",stars="3",kind="hotel",pricerange="moderate") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="3",kind="hotel",pricerange="moderate")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay",stars="3",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="2") [1.000000]
   User > negate(stars="2")
   Turn 2
   Usr > [('negate(stars="2")', 1.0)]
   Sys > select(stars="2",stars="0")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 3
   Usr > [('inform(stars="2")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",kind="hotel")
   Turn 2
   Usr > [('inform(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse",pricerange="expensive") [1.000000]
   User > inform(kind="guesthouse",pricerange="expensive")
   Turn 2
   Usr > [('inform(kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(area="dontcare",type="placetostay") [1.000000]
   User > inform(area="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(area="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="hotel") [1.000000]
   User > inform(="dontcare",kind="hotel")
   Turn 2
   Usr > [('inform(="dontcare",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > bye()
Saving deepq-network...
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:15:14: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:15:14: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.37 +- 0.15
RESULTS:: 17:15:14: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.37 +- 0.15
Average success = 0.00 +- 0.00
RESULTS:: 17:15:14: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.37 +- 0.15
RESULTS:: 17:15:14: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.37 +- 0.15
*** Evaluating env11-dqn-CH-MLN-00.17: error-rate=0 num-dialogs=100 ***
RESULTS:: 17:15:14: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.17: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.17.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.17
loaded replay size:  1268
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:16:42: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:16:42: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.00 +- 0.00
RESULTS:: 17:16:42: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.00 +- 0.00
Average success = 0.00 +- 0.00
RESULTS:: 17:16:42: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.00 +- 0.00
RESULTS:: 17:16:42: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.00 +- 0.00
RESULTS:: 17:16:42: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.17->env11-dqn-CH-MLN-00.18: iter=17, error-rate=0, num-dialogs=100 ***
RESULTS:: 17:16:42: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.17->env11-dqn-CH-MLN-00.18: iter=17, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.17.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.17
loaded replay size:  1268
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="0") [1.000000]
   User > affirm(stars="0")
   Turn 2
   Usr > [('affirm(stars="0")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay") [1.000000]
   User > negate(area="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(area="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 3
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4",type="placetostay",kind="hotel") [1.000000]
   User > inform(stars="4",type="placetostay",kind="hotel")
   Turn 2
   Usr > [(u'inform(stars="4",type="placetostay",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(name="hotel131",hasparking="1")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 2
   Usr > [(u'request(phone)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(type="placetostay",stars="3") [1.000000]
   User > affirm(type="placetostay",stars="3")
   Turn 5
   Usr > [(u'affirm(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare",kind="hotel") [1.000000]
   User > inform(="dontcare",kind="hotel")
   Turn 8
   Usr > [('inform(="dontcare",kind="hotel")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 9
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="0",type="placetostay") [1.000000]
   User > inform(stars="0",type="placetostay")
   Turn 2
   Usr > [(u'inform(stars="0",type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(pricerange="expensive",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",kind="hotel")
   Turn 3
   Usr > [('inform(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(stars="2",stars="0")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 6
   Usr > [('inform(stars="2")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse",type="placetostay",stars="3",pricerange="moderate") [1.000000]
   User > inform(kind="guesthouse",type="placetostay",stars="3",pricerange="moderate")
   Turn 2
   Usr > [(u'inform(kind="guesthouse",type="placetostay",stars="3",pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",stars="4") [1.000000]
   User > negate(area="dontcare",stars="4")
   Turn 2
   Usr > [('negate(area="dontcare",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
Saving deepq-network...
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:19:01: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:19:01: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.43 +- 0.23
RESULTS:: 17:19:01: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.43 +- 0.23
Average success = 0.00 +- 0.00
RESULTS:: 17:19:01: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.43 +- 0.23
RESULTS:: 17:19:01: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.43 +- 0.23
*** Evaluating env11-dqn-CH-MLN-00.18: error-rate=0 num-dialogs=100 ***
RESULTS:: 17:19:01: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.18: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.18.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.18
loaded replay size:  1311
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="2",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:20:30: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:20:30: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.00 +- 0.00
RESULTS:: 17:20:30: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.00 +- 0.00
Average success = 0.00 +- 0.00
RESULTS:: 17:20:30: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.00 +- 0.00
RESULTS:: 17:20:30: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.00 +- 0.00
RESULTS:: 17:20:30: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.18->env11-dqn-CH-MLN-00.19: iter=18, error-rate=0, num-dialogs=100 ***
RESULTS:: 17:20:30: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.18->env11-dqn-CH-MLN-00.19: iter=18, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.18.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.18
loaded replay size:  1311
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare",type="placetostay",stars="3",kind="hotel") [1.000000]
   User > inform(hasparking="dontcare",type="placetostay",stars="3",kind="hotel")
   Turn 2
   Usr > [(u'inform(hasparking="dontcare",type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > inform(kind="guesthouse",stars="0") [1.000000]
   User > inform(kind="guesthouse",stars="0")
   Turn 3
   Usr > [('inform(kind="guesthouse",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",kind="hotel",pricerange="cheap") [1.000000]
   User > negate(hasparking="dontcare",kind="hotel",pricerange="cheap")
   Turn 3
   Usr > [('negate(hasparking="dontcare",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="0",kind="guesthouse") [1.000000]
   User > inform(="dontcare",stars="0",kind="guesthouse")
   Turn 2
   Usr > [('inform(="dontcare",stars="0",kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 2
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",stars="0") [1.000000]
   User > inform(kind="hotel",stars="0")
   Turn 2
   Usr > [('inform(kind="hotel",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="hotel115",price="hotel115price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",stars="4",pricerange="moderate") [1.000000]
   User > inform(kind="hotel",stars="4",pricerange="moderate")
   Turn 2
   Usr > [('inform(kind="hotel",stars="4",pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 3
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="guesthouse118",phone="12233600118")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 2
   Usr > [('thankyou()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="4") [1.000000]
   User > negate(hasparking="dontcare",stars="4")
   Turn 2
   Usr > [('negate(hasparking="dontcare",stars="4")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0",type="placetostay",kind="hotel") [1.000000]
   User > inform(stars="0",type="placetostay",kind="hotel")
   Turn 2
   Usr > [(u'inform(stars="0",type="placetostay",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(name="hotel237",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 3
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 2
   Usr > [('deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 3
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Saving deepq-network...
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:22:50: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:22:50: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.46 +- 0.15
RESULTS:: 17:22:50: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.46 +- 0.15
Average success = 0.00 +- 0.00
RESULTS:: 17:22:50: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.46 +- 0.15
RESULTS:: 17:22:50: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.46 +- 0.15
*** Evaluating env11-dqn-CH-MLN-00.19: error-rate=0 num-dialogs=100 ***
RESULTS:: 17:22:50: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.19: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.19.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.19
loaded replay size:  1357
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:24:20: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:24:20: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.00 +- 0.00
RESULTS:: 17:24:20: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.00 +- 0.00
Average success = 0.00 +- 0.00
RESULTS:: 17:24:20: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.00 +- 0.00
RESULTS:: 17:24:20: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.00 +- 0.00
RESULTS:: 17:24:20: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.19->env11-dqn-CH-MLN-00.20: iter=19, error-rate=0, num-dialogs=100 ***
RESULTS:: 17:24:20: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.19->env11-dqn-CH-MLN-00.20: iter=19, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.19.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.19
loaded replay size:  1357
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 2
   Usr > [('inform(stars="2")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",stars="0") [1.000000]
   User > negate(area="dontcare",stars="0")
   Turn 2
   Usr > [('negate(area="dontcare",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="hotel62",pricerange="cheap")
   Semi > negate(pricerange="moderate") [1.000000]
   User > negate(pricerange="moderate")
   Turn 2
   Usr > [('negate(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",stars="4") [1.000000]
   User > negate(pricerange="expensive",stars="4")
   Turn 3
   Usr > [('negate(pricerange="expensive",stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 4
   Usr > [(u'request(addr)', 1.0)]
   Sys > reqmore()
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 5
   Usr > [(u'request(addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 3
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap",type="placetostay") [1.000000]
   User > inform(pricerange="cheap",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 3
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",stars="3") [1.000000]
   User > inform(kind="hotel",stars="3")
   Turn 4
   Usr > [('inform(kind="hotel",stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",type="placetostay",stars="4") [1.000000]
   User > inform(kind="hotel",type="placetostay",stars="4")
   Turn 2
   Usr > [(u'inform(kind="hotel",type="placetostay",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(type="placetostay",stars="3") [1.000000]
   User > affirm(type="placetostay",stars="3")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
Saving deepq-network...
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:26:32: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:26:32: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.22 +- 0.12
RESULTS:: 17:26:32: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.22 +- 0.12
Average success = 0.00 +- 0.00
RESULTS:: 17:26:32: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.22 +- 0.12
RESULTS:: 17:26:32: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.22 +- 0.12
*** Evaluating env11-dqn-CH-MLN-00.20: error-rate=0 num-dialogs=100 ***
RESULTS:: 17:26:32: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.20: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.20.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.20
loaded replay size:  1379
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:28:07: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:28:07: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.07 +- 0.14
RESULTS:: 17:28:07: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.07 +- 0.14
Average success = 0.00 +- 0.00
RESULTS:: 17:28:07: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.07 +- 0.14
RESULTS:: 17:28:07: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.07 +- 0.14
RESULTS:: 17:28:07: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.20->env11-dqn-CH-MLN-00.21: iter=20, error-rate=0, num-dialogs=100 ***
RESULTS:: 17:28:07: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.20->env11-dqn-CH-MLN-00.21: iter=20, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.20.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.20
loaded replay size:  1379
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",type="placetostay",stars="2",kind="hotel") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="2",kind="hotel")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay",stars="2",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",stars="0",kind="guesthouse") [1.000000]
   User > inform(="dontcare",stars="0",kind="guesthouse")
   Turn 3
   Usr > [('inform(="dontcare",stars="0",kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 4
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > request(area)
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 5
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [('affirm()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 2
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="express by holiday inn cambridge",addr="15-17 norman way, coldhams business park")
   Semi > inform(type="placetostay",stars="0") [1.000000]
   User > inform(type="placetostay",stars="0")
   Turn 2
   Usr > [(u'inform(type="placetostay",stars="0")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > negate(kind="guesthouse",pricerange="moderate") [1.000000]
   User > negate(kind="guesthouse",pricerange="moderate")
   Turn 3
   Usr > [('negate(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 9
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(stars="0",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 10
   Usr > [('inform(stars="0")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > reqmore()
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 3
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse61",stars="2",area="east")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 4
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 3
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",type="placetostay") [1.000000]
   User > negate(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="guesthouse57",pricerange="expensive")
   Semi > negate(pricerange="cheap",type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > negate(pricerange="cheap",type="placetostay",stars="0",kind="guesthouse")
   Turn 2
   Usr > [(u'negate(pricerange="cheap",type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 2
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="guesthouse",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="2",kind="guesthouse",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3",pricerange="expensive") [1.000000]
   User > inform(stars="3",pricerange="expensive")
   Turn 2
   Usr > [('inform(stars="3",pricerange="expensive")', 1.0)]
   Sys > inform(name="el shaddai",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse63",stars="3")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 4
   Usr > [(u'negate(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 2
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay",stars="4") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="4")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 2
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",stars="0") [1.000000]
   User > inform(kind="hotel",stars="0")
   Turn 2
   Usr > [('inform(kind="hotel",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 3
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > inform(stars="4",kind="hotel",pricerange="moderate")
   Turn 2
   Usr > [('inform(stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Saving deepq-network...
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:30:29: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:30:29: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.58 +- 0.33
RESULTS:: 17:30:29: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.58 +- 0.33
Average success = 0.00 +- 0.00
RESULTS:: 17:30:29: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.58 +- 0.33
RESULTS:: 17:30:29: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.58 +- 0.33
*** Evaluating env11-dqn-CH-MLN-00.21: error-rate=0 num-dialogs=100 ***
RESULTS:: 17:30:29: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.21: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.21.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.21
loaded replay size:  1437
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="guesthouse",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="2",kind="guesthouse",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:32:02: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:32:02: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.00 +- 0.00
RESULTS:: 17:32:02: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.00 +- 0.00
Average success = 0.00 +- 0.00
RESULTS:: 17:32:02: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.00 +- 0.00
RESULTS:: 17:32:02: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.00 +- 0.00
RESULTS:: 17:32:02: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.21->env11-dqn-CH-MLN-00.22: iter=21, error-rate=0, num-dialogs=100 ***
RESULTS:: 17:32:02: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.21->env11-dqn-CH-MLN-00.22: iter=21, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.21.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.21
loaded replay size:  1437
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay") [1.000000]
   User > negate(area="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(area="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare",type="placetostay") [1.000000]
   User > inform(area="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(area="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="hotel185",hasparking="0")
   Semi > inform(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > inform(type="placetostay",stars="3",kind="guesthouse")
   Turn 2
   Usr > [(u'inform(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 6
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 8
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",kind="hotel")
   Turn 2
   Usr > [('inform(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="2",kind="guesthouse") [1.000000]
   User > inform(stars="2",kind="guesthouse")
   Turn 2
   Usr > [('inform(stars="2",kind="guesthouse")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",pricerange="expensive") [1.000000]
   User > inform(="dontcare",pricerange="expensive")
   Turn 3
   Usr > [('inform(="dontcare",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > affirm(type="placetostay",stars="3") [1.000000]
   User > affirm(type="placetostay",stars="3")
   Turn 3
   Usr > [(u'affirm(type="placetostay",stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 2
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 18, suc = 1, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 2
   Usr > [(u'request(phone)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(kind="hotel",pricerange="expensive") [1.000000]
   User > affirm(kind="hotel",pricerange="expensive")
   Turn 2
   Usr > [('affirm(kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(stars="2",kind="hotel") [1.000000]
   User > inform(stars="2",kind="hotel")
   Turn 3
   Usr > [('inform(stars="2",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
Saving deepq-network...
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:34:19: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:34:19: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -0.96 +- 0.46
RESULTS:: 17:34:19: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -0.96 +- 0.46
Average success = 1.00 +- 1.97
RESULTS:: 17:34:19: root                               EvaluationManager.py <_prstr>207 :  Average success = 1.00 +- 1.97
Average turns   = 1.36 +- 0.19
RESULTS:: 17:34:19: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.36 +- 0.19
*** Evaluating env11-dqn-CH-MLN-00.22: error-rate=0 num-dialogs=100 ***
RESULTS:: 17:34:19: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.22: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.22.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.22
loaded replay size:  1473
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:35:53: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:35:53: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.00 +- 0.00
RESULTS:: 17:35:53: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.00 +- 0.00
Average success = 0.00 +- 0.00
RESULTS:: 17:35:53: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.00 +- 0.00
RESULTS:: 17:35:53: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.00 +- 0.00
RESULTS:: 17:35:53: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.22->env11-dqn-CH-MLN-00.23: iter=22, error-rate=0, num-dialogs=100 ***
RESULTS:: 17:35:53: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.22->env11-dqn-CH-MLN-00.23: iter=22, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.22.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.22
loaded replay size:  1473
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 3
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="0") [1.000000]
   User > inform(="dontcare",stars="0")
   Turn 5
   Usr > [('inform(="dontcare",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",type="placetostay",stars="4",kind="hotel") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="4",kind="hotel")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",type="placetostay",stars="0") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="0")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="3",kind="guesthouse") [1.000000]
   User > negate(stars="3",kind="guesthouse")
   Turn 7
   Usr > [('negate(stars="3",kind="guesthouse")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap",stars="4") [1.000000]
   User > negate(pricerange="cheap",stars="4")
   Turn 2
   Usr > [('negate(pricerange="cheap",stars="4")', 1.0)]
   Sys > reqmore()
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 3
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4",type="placetostay",kind="hotel") [1.000000]
   User > inform(stars="4",type="placetostay",kind="hotel")
   Turn 2
   Usr > [(u'inform(stars="4",type="placetostay",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 2
   Usr > [('deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 2
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 3
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="allenbell",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="guesthouse",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="2",kind="guesthouse",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse199",postcode="guesthouse199postcode")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 2
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare",type="placetostay") [1.000000]
   User > inform(hasparking="dontcare",type="placetostay")
   Turn 6
   Usr > [(u'inform(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",kind="hotel") [1.000000]
   User > inform(pricerange="moderate",kind="hotel")
   Turn 2
   Usr > [('inform(pricerange="moderate",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",pricerange="moderate") [1.000000]
   User > negate(hasparking="dontcare",pricerange="moderate")
   Turn 2
   Usr > [('negate(hasparking="dontcare",pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay") [1.000000]
   User > negate(area="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(area="dontcare",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4",area="north")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 3
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(addr,name="huntingdon marriott hotel") [1.000000]
   User > request(addr,name="huntingdon marriott hotel")
   Turn 3
   Usr > [(u'request(addr,name="huntingdon marriott hotel")', 1.0)]
   Sys > request(kind)
   Semi > request(name="huntingdon marriott hotel",addr) [1.000000]
   User > request(name="huntingdon marriott hotel",addr)
   Turn 4
   Usr > [(u'request(name="huntingdon marriott hotel",addr)', 1.0)]
   Sys > inform(pricerange="expensive",name="university arms hotel",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="expensive",name="guesthouse36",stars="4")
   Semi > confirm(name="huntingdon marriott hotel") [1.000000]
   User > confirm(name="huntingdon marriott hotel")
   Turn 6
   Usr > [('confirm(name="huntingdon marriott hotel")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4",pricerange="expensive") [1.000000]
   User > inform(stars="4",pricerange="expensive")
   Turn 7
   Usr > [('inform(stars="4",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="hotel44",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 8
   Usr > [(u'request(addr)', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 10
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="hotel72",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 11
   Usr > [(u'request(addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4",area="north")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4",area="west")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="university arms hotel",stars="4",area="centre")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="guesthouse36",stars="4",area="north")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 6
   Usr > [(u'request(addr)', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 7
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="expensive",name="hotel44",stars="4",area="south")
   Semi > confirm(name="guesthouse36") [1.000000]
   User > confirm(name="guesthouse36")
   Turn 8
   Usr > [('confirm(name="guesthouse36")', 1.0)]
   Sys > inform(pricerange="expensive",name="hotel72",stars="4",area="east")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 9
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(pricerange="expensive",name="guesthouse77",stars="4",area="west")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 11
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 2
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > reqmore()
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 4
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="lovell lodge",phone) [1.000000]
   User > request(name="lovell lodge",phone)
   Turn 6
   Usr > [(u'request(name="lovell lodge",phone)', 1.0)]
   Sys > inform(pricerange="moderate",name="ashley hotel",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse40",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse61",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 9
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel64",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 10
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel69",stars="2")
   Semi > request(phone,postcode) [1.000000]
   User > request(phone,postcode)
   Turn 11
   Usr > [(u'request(phone,postcode)', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse84",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel90",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 15
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel112",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel133",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse136",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(area="north")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 19
   Usr > [(u'inform(area="north")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 20
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 21
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="none",name!="lovell lodge",name!="ashley hotel",name!="hotel112",kind="hotel",pricerange="moderate",stars="2",area="north")
   Semi > ack() [1.000000]
   User > ack()
   Turn 22
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2",area="north")
   Semi > request(phone,postcode) [1.000000]
   User > request(phone,postcode)
   Turn 23
   Usr > [(u'request(phone,postcode)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="lovell lodge",phone) [1.000000]
   User > request(name="lovell lodge",phone)
   Turn 24
   Usr > [(u'request(name="lovell lodge",phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2",area="north")
   Semi > confirm(name="lovell lodge") [1.000000]
   User > confirm(name="lovell lodge")
   Turn 25
   Usr > [('confirm(name="lovell lodge")', 1.0)]
   Sys > inform(name="lovell lodge",phone="01223425478",postcode="cb4 1sr")
   Semi > request(kind,area,pricerange) [1.000000]
   User > request(kind,area,pricerange)
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="gonville hotel",stars="3")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 4
   Usr > [(u'deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse63",stars="3")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 6
   Usr > [(u'request(postcode)', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 7
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 10
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 11
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 13
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 14
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 15
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 2
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 3
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(pricerange="moderate",name="kirkwood house",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 4
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 5
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="acorn guest house",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="a and b guest house",stars="4")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 7
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="a and b guest house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="arbury lodge guesthouse",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 9
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(pricerange="moderate",name="archway house",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 10
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="avalon",stars="4")
   Semi > request(hasinternet,name="avalon") [1.000000]
   User > request(hasinternet,name="avalon")
   Turn 12
   Usr > [(u'request(hasinternet,name="avalon")', 1.0)]
   Sys > inform(pricerange="moderate",name="aylesbray lodge guest house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 13
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 14
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="carolina bed and breakfast",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 15
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(pricerange="moderate",name="carolina bed and breakfast",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 16
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 17
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > confirm(name="carolina bed and breakfast") [1.000000]
   User > confirm(name="carolina bed and breakfast")
   Turn 18
   Usr > [('confirm(name="carolina bed and breakfast")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 19
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel92",stars="4")
   Semi > confirm(name="guesthouse89") [1.000000]
   User > confirm(name="guesthouse89")
   Turn 20
   Usr > [('confirm(name="guesthouse89")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse97",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 21
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse142",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 22
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel163",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 23
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="hotel163",hasinternet) [1.000000]
   User > request(name="hotel163",hasinternet)
   Turn 24
   Usr > [(u'request(name="hotel163",hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel165",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 25
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse191",stars="4")
   Semi > confirm(name="hotel165") [1.000000]
   User > confirm(name="hotel165")
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 3
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="cheap",name="rosa's bed and breakfast",stars="4")
   Semi > request(phone,addr) [1.000000]
   User > request(phone,addr)
   Turn 4
   Usr > [(u'request(phone,addr)', 1.0)]
   Sys > inform(pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > request(phone,addr) [1.000000]
   User > request(phone,addr)
   Turn 5
   Usr > [(u'request(phone,addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > negate(hasparking="dontcare",stars="4",kind="hotel",pricerange="moderate")
   Turn 3
   Usr > [('negate(hasparking="dontcare",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="hotel82",kind="hotel")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="guesthouse89",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",type="placetostay") [1.000000]
   User > negate(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="university arms hotel",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="expensive",name="guesthouse36",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="hotel44",stars="4")
   Semi > confirm(name="university arms hotel") [1.000000]
   User > confirm(name="university arms hotel")
   Turn 6
   Usr > [('confirm(name="university arms hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="hotel72",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 7
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="expensive",name="guesthouse77",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap",type="placetostay") [1.000000]
   User > negate(pricerange="cheap",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 3
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(stars)
   Semi > request(name="city centre north b and b",phone) [1.000000]
   User > request(name="city centre north b and b",phone)
   Turn 5
   Usr > [(u'request(name="city centre north b and b",phone)', 1.0)]
   Sys > inform(name="city centre north b and b",kind="guesthouse",phone="01223312843")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 6
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel55",stars="0")
   Semi > request(phone,hasinternet) [1.000000]
   User > request(phone,hasinternet)
   Turn 7
   Usr > [(u'request(phone,hasinternet)', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 9
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse125",stars="0")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 10
   Usr > [(u'request(phone)', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > select(stars="0",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 12
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse130",stars="0")
   Semi > request(phone,name="guesthouse130") [1.000000]
   User > request(phone,name="guesthouse130")
   Turn 13
   Usr > [(u'request(phone,name="guesthouse130")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel132",stars="0")
   Semi > confirm(name="guesthouse130") [1.000000]
   User > confirm(name="guesthouse130")
   Turn 14
   Usr > [('confirm(name="guesthouse130")', 1.0)]
   Sys > inform(name="guesthouse130",hasinternet="1",phone="12233600130")
   Semi > request(kind) [1.000000]
   User > request(kind)
   Turn 15
   Usr > [('request(kind)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4",area="north")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 3
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4",area="east")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 7
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",name="the cambridge belfry",area="west",kind="hotel",pricerange="cheap",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 8
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
Saving deepq-network...
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:38:58: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:38:58: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -2.28 +- 0.95
RESULTS:: 17:38:58: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -2.28 +- 0.95
Average success = 0.00 +- 0.00
RESULTS:: 17:38:58: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 2.68 +- 0.86
RESULTS:: 17:38:58: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 2.68 +- 0.86
*** Evaluating env11-dqn-CH-MLN-00.23: error-rate=0 num-dialogs=100 ***
RESULTS:: 17:38:58: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.23: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.23.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.23
loaded replay size:  1641
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 3
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare",pricerange="moderate") [1.000000]
   User > inform(hasparking="dontcare",pricerange="moderate")
   Turn 2
   Usr > [('inform(hasparking="dontcare",pricerange="moderate")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 4
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:40:41: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:40:41: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.20 +- 0.23
RESULTS:: 17:40:41: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.20 +- 0.23
Average success = 0.00 +- 0.00
RESULTS:: 17:40:41: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.20 +- 0.23
RESULTS:: 17:40:41: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.20 +- 0.23
RESULTS:: 17:40:41: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.23->env11-dqn-CH-MLN-00.24: iter=23, error-rate=0, num-dialogs=100 ***
RESULTS:: 17:40:41: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.23->env11-dqn-CH-MLN-00.24: iter=23, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.23.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.23
loaded replay size:  1641
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(kind="hotel",pricerange="cheap") [1.000000]
   User > affirm(kind="hotel",pricerange="cheap")
   Turn 2
   Usr > [('affirm(kind="hotel",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > reqmore()
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(pricerange="expensive") [1.000000]
   User > affirm(pricerange="expensive")
   Turn 3
   Usr > [('affirm(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(name="guesthouse190",hasparking="1")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse190",addr="guesthouse190addr")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > request(area)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 5
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay") [1.000000]
   User > negate(area="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'negate(area="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay",stars="4") [1.000000]
   User > negate(area="dontcare",type="placetostay",stars="4")
   Turn 2
   Usr > [(u'negate(area="dontcare",type="placetostay",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 2
   Usr > [('negate(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",stars="4",pricerange="expensive") [1.000000]
   User > inform(kind="hotel",stars="4",pricerange="expensive")
   Turn 2
   Usr > [('inform(kind="hotel",stars="4",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="guesthouse",pricerange="moderate") [1.000000]
   User > inform(="dontcare",kind="guesthouse",pricerange="moderate")
   Turn 2
   Usr > [('inform(="dontcare",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > inform(name="express by holiday inn cambridge",phone="01223866800")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 3
   Usr > [(u'request(postcode)', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 7
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 8
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 9
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 10
   Usr > [(u'request(postcode)', 1.0)]
   Sys > request(kind)
   Semi > request(name="hobsons house",postcode) [1.000000]
   User > request(name="hobsons house",postcode)
   Turn 11
   Usr > [(u'request(name="hobsons house",postcode)', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 12
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 13
   Usr > [(u'request(postcode)', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="hobsons house",postcode) [1.000000]
   User > request(name="hobsons house",postcode)
   Turn 14
   Usr > [(u'request(name="hobsons house",postcode)', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 15
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 16
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 17
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 18
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -18, suc = 0, turn = 18
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="3") [1.000000]
   User > affirm(stars="3")
   Turn 2
   Usr > [('affirm(stars="3")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",pricerange="moderate") [1.000000]
   User > inform(kind="hotel",pricerange="moderate")
   Turn 3
   Usr > [('inform(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 3
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > request(area)
   Semi > inform(pricerange="moderate",kind="hotel") [1.000000]
   User > inform(pricerange="moderate",kind="hotel")
   Turn 2
   Usr > [('inform(pricerange="moderate",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 3
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="university arms hotel",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 6
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="guesthouse87",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="guesthouse126",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="guesthouse126",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="guesthouse128",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 11
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="guesthouse161",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="hotel167",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="guesthouse175",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="hotel185",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 15
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="carolina bed and breakfast",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
Saving deepq-network...
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:43:12: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:43:12: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.68 +- 0.44
RESULTS:: 17:43:12: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.68 +- 0.44
Average success = 0.00 +- 0.00
RESULTS:: 17:43:12: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.68 +- 0.44
RESULTS:: 17:43:12: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.68 +- 0.44
*** Evaluating env11-dqn-CH-MLN-00.24: error-rate=0 num-dialogs=100 ***
RESULTS:: 17:43:12: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.24: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.24.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.24
loaded replay size:  1709
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:44:47: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:44:47: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.00 +- 0.00
RESULTS:: 17:44:47: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.00 +- 0.00
Average success = 0.00 +- 0.00
RESULTS:: 17:44:47: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.00 +- 0.00
RESULTS:: 17:44:47: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.00 +- 0.00
RESULTS:: 17:44:47: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.24->env11-dqn-CH-MLN-00.25: iter=24, error-rate=0, num-dialogs=100 ***
RESULTS:: 17:44:47: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.24->env11-dqn-CH-MLN-00.25: iter=24, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.24.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.24
loaded replay size:  1709
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",kind="hotel",pricerange="cheap") [1.000000]
   User > inform(="dontcare",kind="hotel",pricerange="cheap")
   Turn 2
   Usr > [('inform(="dontcare",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 2
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 2
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > reqmore()
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > reqmore()
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 6
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap",type="placetostay") [1.000000]
   User > inform(pricerange="cheap",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > reqalts(pricerange="dontcare") [1.000000]
   User > reqalts(pricerange="dontcare")
   Turn 3
   Usr > [('reqalts(pricerange="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(pricerange="expensive") [1.000000]
   User > affirm(pricerange="expensive")
   Turn 2
   Usr > [('affirm(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 2
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > inform(stars="4",kind="hotel",pricerange="expensive")
   Turn 2
   Usr > [('inform(stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 4
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 5
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > request(phone,price) [1.000000]
   User > request(phone,price)
   Turn 8
   Usr > [(u'request(phone,price)', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 9
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(name="hobsons house",price="a cheapest single room is 59 pounds and a double room ranges from 75 pounds and to 80 pounds and a cheapest family room is 110 pounds",phone="01223304906")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 8, suc = 1, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="guesthouse",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="2",kind="guesthouse",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 3
   Usr > [(u'request(price)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="hotel82",price) [1.000000]
   User > request(name="hotel82",price)
   Turn 4
   Usr > [(u'request(name="hotel82",price)', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > request(kind)
   Semi > request(name="guesthouse89",price) [1.000000]
   User > request(name="guesthouse89",price)
   Turn 7
   Usr > [(u'request(name="guesthouse89",price)', 1.0)]
   Sys > request(stars)
   Semi > request(name="guesthouse89",price) [1.000000]
   User > request(name="guesthouse89",price)
   Turn 8
   Usr > [(u'request(name="guesthouse89",price)', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 9
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel92",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 10
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 11
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse97",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 12
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse97",stars="4")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 13
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse",type="placetostay") [1.000000]
   User > inform(kind="guesthouse",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="guesthouse",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4",type="placetostay") [1.000000]
   User > inform(stars="4",type="placetostay")
   Turn 2
   Usr > [(u'inform(stars="4",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse199",addr="guesthouse199addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > request(area)
   Semi > inform(name="guesthouse199",stars="4",kind="hotel") [1.000000]
   User > inform(name="guesthouse199",stars="4",kind="hotel")
   Turn 5
   Usr > [('inform(name="guesthouse199",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 2
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="4") [1.000000]
   User > inform(="dontcare",stars="4")
   Turn 2
   Usr > [('inform(="dontcare",stars="4")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(kind="hotel",pricerange="moderate") [1.000000]
   User > affirm(kind="hotel",pricerange="moderate")
   Turn 3
   Usr > [('affirm(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",pricerange="moderate") [1.000000]
   User > inform(kind="hotel",pricerange="moderate")
   Turn 2
   Usr > [('inform(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 8
   Usr > [(u'request(price)', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 9
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse43",area="south",kind="hotel",pricerange="moderate",stars="3")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 10
   Usr > [(u'request(price)', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse43",area="south",kind="hotel",pricerange="moderate",stars="3")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 13
   Usr > [(u'request(price)', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(kind="guesthouse") [1.000000]
   User > affirm(kind="guesthouse")
   Turn 2
   Usr > [('affirm(kind="guesthouse")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 3
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",pricerange="moderate") [1.000000]
   User > negate(hasparking="dontcare",pricerange="moderate")
   Turn 5
   Usr > [('negate(hasparking="dontcare",pricerange="moderate")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 7
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(name="hotel69",stars="2")
   Semi > deny(stars="2",stars="3") [1.000000]
   User > deny(stars="2",stars="3")
   Turn 9
   Usr > [('deny(stars="2",stars="3")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="hotel69",hasinternet="1")
   Semi > request(price,name="hotel69") [1.000000]
   User > request(price,name="hotel69")
   Turn 11
   Usr > [(u'request(price,name="hotel69")', 1.0)]
   Sys > inform(name="hotel69",price="hotel69price")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 12
   Usr > [('thankyou()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 13
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel69",hasparking="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 14
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > confirm(name="hotel69") [1.000000]
   User > confirm(name="hotel69")
   Turn 15
   Usr > [('confirm(name="hotel69")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 16
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel69")
   Semi > request(hasparking) [1.000000]
   User > request(hasparking)
   Turn 17
   Usr > [('request(hasparking)', 1.0)]
   Sys > inform(hasparking="0",name="alpha-milton guest house",area="north",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 18
   Usr > [(u'request(price)', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 19
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel69",price="hotel69price")
   Semi > deny(name="hotel69",name="alpha-milton guest house") [1.000000]
   User > deny(name="hotel69",name="alpha-milton guest house")
   Turn 20
   Usr > [('deny(name="hotel69",name="alpha-milton guest house")', 1.0)]
   Sys > inform(name="alpha-milton guest house")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 21
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="alpha-milton guest house")
   Semi > request(hasparking) [1.000000]
   User > request(hasparking)
   Turn 22
   Usr > [('request(hasparking)', 1.0)]
   Sys > inform(name="alpha-milton guest house",hasparking="0")
   Semi > request(area) [1.000000]
   User > request(area)
   Turn 23
   Usr > [('request(area)', 1.0)]
   Sys > inform(name="alpha-milton guest house",area="north")
   Semi > ack() [1.000000]
   User > ack()
   Turn 24
   Usr > [('ack()', 1.0)]
   Sys > inform(name="alpha-milton guest house")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 25
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="alpha-milton guest house",price="a single room ranges from 45 pounds and to 70 pounds and a cheapest double room is 80 pounds")
   Semi > request(kind) [1.000000]
   User > request(kind)
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4",type="placetostay",kind="hotel",pricerange="expensive") [1.000000]
   User > inform(stars="4",type="placetostay",kind="hotel",pricerange="expensive")
   Turn 2
   Usr > [(u'inform(stars="4",type="placetostay",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [('affirm()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay",stars="4") [1.000000]
   User > affirm(type="placetostay",stars="4")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="bridge guest house",area="south")
   Semi > ack() [1.000000]
   User > ack()
   Turn 2
   Usr > [('ack()', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="bridge guest house",addr) [1.000000]
   User > request(name="bridge guest house",addr)
   Turn 3
   Usr > [(u'request(name="bridge guest house",addr)', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 4
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts(pricerange="cheap") [1.000000]
   User > reqalts(pricerange="cheap")
   Turn 3
   Usr > [(u'reqalts(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="rosa's bed and breakfast",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 5
   Usr > [('inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 6
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="the cambridge belfry",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 8
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="guesthouse73",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 9
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 10
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -16, suc = 0, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 3
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="university arms hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",pricerange="expensive",name="guesthouse36",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 6
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(hasparking="0",pricerange="expensive",name="hotel44",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 7
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="hotel72",stars="4")
   Semi > confirm(name="hotel44") [1.000000]
   User > confirm(name="hotel44")
   Turn 8
   Usr > [('confirm(name="hotel44")', 1.0)]
   Sys > inform(hasparking="0",pricerange="expensive",name="guesthouse77",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 9
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="guesthouse77",kind="guesthouse",postcode="guesthouse77postcode")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 10
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="guesthouse87",kind="hotel")
   Semi > confirm(name="guesthouse77") [1.000000]
   User > confirm(name="guesthouse77")
   Turn 11
   Usr > [('confirm(name="guesthouse77")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse126",kind="hotel")
   Semi > confirm(name="guesthouse77") [1.000000]
   User > confirm(name="guesthouse77")
   Turn 12
   Usr > [('confirm(name="guesthouse77")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse126",postcode) [1.000000]
   User > request(name="guesthouse126",postcode)
   Turn 13
   Usr > [(u'request(name="guesthouse126",postcode)', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 14
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse128",kind="hotel")
   Semi > confirm(name="guesthouse77") [1.000000]
   User > confirm(name="guesthouse77")
   Turn 15
   Usr > [('confirm(name="guesthouse77")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse161",kind="hotel")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 16
   Usr > [(u'request(postcode)', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 17
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > request(area)
   Semi > request(name="guesthouse161",postcode) [1.000000]
   User > request(name="guesthouse161",postcode)
   Turn 18
   Usr > [(u'request(name="guesthouse161",postcode)', 1.0)]
   Sys > inform(hasparking="1",name="hotel167",area="south",kind="hotel",pricerange="expensive",stars="4")
   Semi > confirm(name="guesthouse161") [1.000000]
   User > confirm(name="guesthouse161")
   Turn 19
   Usr > [('confirm(name="guesthouse161")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse175",area="east",kind="hotel",pricerange="expensive",stars="4")
   Semi > confirm(name="guesthouse161") [1.000000]
   User > confirm(name="guesthouse161")
   Turn 20
   Usr > [('confirm(name="guesthouse161")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 21
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",name="hotel185",area="north",kind="hotel",pricerange="expensive",stars="4")
   Semi > confirm(name="guesthouse161") [1.000000]
   User > confirm(name="guesthouse161")
   Turn 22
   Usr > [('confirm(name="guesthouse161")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 23
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",name="hotel197",area="south",kind="hotel",pricerange="expensive",stars="4")
   Semi > confirm(name="guesthouse161") [1.000000]
   User > confirm(name="guesthouse161")
   Turn 24
   Usr > [('confirm(name="guesthouse161")', 1.0)]
   Sys > request(kind)
   Semi > request(name="hotel197",postcode) [1.000000]
   User > request(name="hotel197",postcode)
   Turn 25
   Usr > [(u'request(name="hotel197",postcode)', 1.0)]
   Sys > request(area)
   Semi > request(name="hotel197",postcode) [1.000000]
   User > request(name="hotel197",postcode)
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 3
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="cityroomz",stars="0")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 4
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="el shaddai",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",pricerange="cheap",name="guesthouse48",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 3
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > reqmore()
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 5
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 6
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="the lensfield hotel",stars="3",area="south")
   Semi > reqalts(hasparking="dontcare") [1.000000]
   User > reqalts(hasparking="dontcare")
   Turn 7
   Usr > [('reqalts(hasparking="dontcare")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm(type="placetostay",stars="3") [1.000000]
   User > affirm(type="placetostay",stars="3")
   Turn 8
   Usr > [(u'affirm(type="placetostay",stars="3")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="gonville hotel",stars="3",area="centre")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 9
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare",stars="4") [1.000000]
   User > inform(hasparking="dontcare",stars="4")
   Turn 2
   Usr > [('inform(hasparking="dontcare",stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 3
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4",area="west")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="university arms hotel",stars="4",area="centre")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse36",area="north",kind="guesthouse",pricerange="expensive",stars="4")
   Semi > confirm(name="university arms hotel") [1.000000]
   User > confirm(name="university arms hotel")
   Turn 9
   Usr > [('confirm(name="university arms hotel")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Saving deepq-network...
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:47:58: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:47:58: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -2.57 +- 0.87
RESULTS:: 17:47:58: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -2.57 +- 0.87
Average success = 2.00 +- 2.78
RESULTS:: 17:47:58: root                               EvaluationManager.py <_prstr>207 :  Average success = 2.00 +- 2.78
Average turns   = 2.77 +- 0.87
RESULTS:: 17:47:58: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 2.77 +- 0.87
*** Evaluating env11-dqn-CH-MLN-00.25: error-rate=0 num-dialogs=100 ***
RESULTS:: 17:47:58: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.25: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.25.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.25
loaded replay size:  1886
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="cheap",type="placetostay") [1.000000]
   User > inform(pricerange="cheap",type="placetostay")
   Turn 3
   Usr > [(u'inform(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="2") [1.000000]
   User > inform(="dontcare",stars="2")
   Turn 2
   Usr > [('inform(="dontcare",stars="2")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="guesthouse40",stars="2")
   Semi > reqalts(hasparking="dontcare") [1.000000]
   User > reqalts(hasparking="dontcare")
   Turn 5
   Usr > [('reqalts(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="cityroomz",postcode) [1.000000]
   User > request(name="cityroomz",postcode)
   Turn 6
   Usr > [(u'request(name="cityroomz",postcode)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 3
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="home from home",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 4
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 5
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 6
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="the lensfield hotel",stars="3",area="south")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 3
   Usr > [('negate(stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(type="placetostay",kind="guesthouse",pricerange="moderate") [1.000000]
   User > affirm(type="placetostay",kind="guesthouse",pricerange="moderate")
   Turn 7
   Usr > [(u'affirm(type="placetostay",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="cheap",type="placetostay") [1.000000]
   User > inform(pricerange="cheap",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="rosa's bed and breakfast",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 5
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="rosa's bed and breakfast",hasinternet) [1.000000]
   User > request(name="rosa's bed and breakfast",hasinternet)
   Turn 6
   Usr > [(u'request(name="rosa\'s bed and breakfast",hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare",kind="guesthouse") [1.000000]
   User > inform(hasparking="dontcare",kind="guesthouse")
   Turn 2
   Usr > [('inform(hasparking="dontcare",kind="guesthouse")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 4
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 5
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="cheap",kind="hotel") [1.000000]
   User > inform(pricerange="cheap",kind="hotel")
   Turn 3
   Usr > [('inform(pricerange="cheap",kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="the cambridge belfry",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="guesthouse73",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="cheap",name="hotel75",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="guesthouse83",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="cheap",name="guesthouse85",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="guesthouse194",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="cheap",name="hotel238",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="hotel242",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="cheap",name="guesthouse243",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="cheap",name="guesthouse247",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="none",name!="the cambridge belfry",name!="guesthouse73",name!="hotel75",name!="guesthouse83",name!="guesthouse85",name!="guesthouse194",name!="hotel238",name!="hotel242",name!="guesthouse243",name!="guesthouse247",hasparking="dontcare",pricerange="cheap",kind="hotel",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 14
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="the cambridge belfry",kind="hotel")
   Semi > confirm(name="guesthouse73") [1.000000]
   User > confirm(name="guesthouse73")
   Turn 15
   Usr > [('confirm(name="guesthouse73")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="guesthouse73",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 16
   Usr > [('ack()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -16, suc = 0, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",type="placetostay",stars="4",kind="hotel") [1.000000]
   User > negate(pricerange="expensive",type="placetostay",stars="4",kind="hotel")
   Turn 3
   Usr > [(u'negate(pricerange="expensive",type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="huntingdon marriott hotel",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 4
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="university arms hotel",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 5
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="guesthouse87",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse126",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 7
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse128",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 8
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse161",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 9
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="hotel167",kind="hotel")
   Semi > request(price,name="hotel167") [1.000000]
   User > request(price,name="hotel167")
   Turn 10
   Usr > [(u'request(price,name="hotel167")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="guesthouse175",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 11
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="hotel185",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 12
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="hotel197",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 13
   Usr > [('ack()', 1.0)]
   Sys > inform(name="none",name!="huntingdon marriott hotel",name!="university arms hotel",name!="guesthouse87",name!="guesthouse126",name!="guesthouse128",name!="guesthouse161",name!="hotel167",name!="guesthouse175",name!="hotel185",name!="hotel197",hasparking="dontcare",pricerange="expensive",kind="hotel",stars="4")
   Semi > request(name="hotel197",price) [1.000000]
   User > request(name="hotel197",price)
   Turn 14
   Usr > [(u'request(name="hotel197",price)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="huntingdon marriott hotel",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 15
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="university arms hotel",kind="hotel")
   Semi > request(price,name="university arms hotel") [1.000000]
   User > request(price,name="university arms hotel")
   Turn 16
   Usr > [(u'request(price,name="university arms hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="guesthouse87",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 17
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse126",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 18
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse128",kind="hotel")
   Semi > request(price,name="guesthouse128") [1.000000]
   User > request(price,name="guesthouse128")
   Turn 19
   Usr > [(u'request(price,name="guesthouse128")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse161",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 20
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="hotel167",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 21
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="guesthouse175",kind="hotel")
   Semi > request(price,name="guesthouse175") [1.000000]
   User > request(price,name="guesthouse175")
   Turn 22
   Usr > [(u'request(price,name="guesthouse175")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="hotel185",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 23
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="hotel197",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 24
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="none",name!="huntingdon marriott hotel",name!="university arms hotel",name!="guesthouse87",name!="guesthouse126",name!="guesthouse128",name!="guesthouse161",name!="hotel167",name!="guesthouse175",name!="hotel185",name!="hotel197",hasparking="dontcare",pricerange="expensive",kind="hotel",stars="4")
   Semi > request(name="hotel197",price) [1.000000]
   User > request(name="hotel197",price)
   Turn 25
   Usr > [(u'request(name="hotel197",price)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="huntingdon marriott hotel",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0",kind="guesthouse") [1.000000]
   User > negate(stars="0",kind="guesthouse")
   Turn 3
   Usr > [('negate(stars="0",kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",pricerange="moderate") [1.000000]
   User > negate(area="dontcare",pricerange="moderate")
   Turn 4
   Usr > [('negate(area="dontcare",pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > confirm(stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 5
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 7
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="university arms hotel",stars="4")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="guesthouse87",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse126",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse128",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse161",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="hotel167",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="guesthouse175",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="hotel185",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="hotel197",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="none",name!="huntingdon marriott hotel",name!="university arms hotel",name!="guesthouse87",name!="guesthouse126",name!="guesthouse128",name!="guesthouse161",name!="hotel167",name!="guesthouse175",name!="hotel185",name!="hotel197",hasparking="dontcare",pricerange="expensive",kind="hotel",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 14
   Usr > [('ack()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 3
   Usr > [('negate(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 6
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="guesthouse41",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 7
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 9
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 10
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 6, suc = 1, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="4",kind="hotel",pricerange="cheap") [1.000000]
   User > inform(="dontcare",stars="4",kind="hotel",pricerange="cheap")
   Turn 2
   Usr > [('inform(="dontcare",stars="4",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="the cambridge belfry",kind="hotel")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 3
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="guesthouse73",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 4
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="cheap",name="hotel75",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 5
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="guesthouse83",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 6
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="cheap",name="guesthouse85",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 7
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="guesthouse194",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 8
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="cheap",name="hotel238",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 9
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="hotel242",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 10
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="cheap",name="guesthouse243",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 11
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="cheap",name="guesthouse247",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 12
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(name="none",name!="the cambridge belfry",name!="guesthouse73",name!="hotel75",name!="guesthouse83",name!="guesthouse85",name!="guesthouse194",name!="hotel238",name!="hotel242",name!="guesthouse243",name!="guesthouse247",hasparking="dontcare",pricerange="cheap",kind="hotel",stars="4")
   Semi > request(name="the cambridge belfry",addr) [1.000000]
   User > request(name="the cambridge belfry",addr)
   Turn 13
   Usr > [(u'request(name="the cambridge belfry",addr)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="the cambridge belfry",addr) [1.000000]
   User > request(name="the cambridge belfry",addr)
   Turn 14
   Usr > [(u'request(name="the cambridge belfry",addr)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="the cambridge belfry",kind="hotel")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 15
   Usr > [(u'request(addr)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="the cambridge belfry",addr) [1.000000]
   User > request(name="the cambridge belfry",addr)
   Turn 16
   Usr > [(u'request(name="the cambridge belfry",addr)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="guesthouse73",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 17
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse73",addr) [1.000000]
   User > request(name="guesthouse73",addr)
   Turn 18
   Usr > [(u'request(name="guesthouse73",addr)', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="cheap",name="hotel75",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 19
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="hotel75",addr) [1.000000]
   User > request(name="hotel75",addr)
   Turn 20
   Usr > [(u'request(name="hotel75",addr)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="guesthouse83",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 21
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="cheap",name="guesthouse85",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 22
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="guesthouse194",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 23
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="cheap",name="hotel238",kind="hotel")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 24
   Usr > [('thankyou()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -24, suc = 0, turn = 24
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay") [1.000000]
   User > negate(area="dontcare",type="placetostay")
   Turn 4
   Usr > [(u'negate(area="dontcare",type="placetostay")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(stars="3") [1.000000]
   User > affirm(stars="3")
   Turn 5
   Usr > [('affirm(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="guesthouse") [1.000000]
   User > affirm(kind="guesthouse")
   Turn 6
   Usr > [('affirm(kind="guesthouse")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 8
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 3
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="leverton house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="rosa's bed and breakfast",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="allenbell",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="alexander bed and breakfast",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="autumn house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="finches bed and breakfast",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="worth house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="guesthouse73",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="cheap",name="hotel75",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="guesthouse83",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="cheap",name="guesthouse85",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="cheap",name="hotel98",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="cheap",name="hotel102",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="cheap",name="hotel124",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 19
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="cheap",name="guesthouse146",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 20
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="guesthouse194",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 21
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="cheap",name="hotel233",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 22
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="cheap",name="hotel238",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 23
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="hotel242",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 24
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="cheap",name="guesthouse243",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 25
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="cheap",name="guesthouse247",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",stars="3") [1.000000]
   User > negate(pricerange="expensive",stars="3")
   Turn 3
   Usr > [('negate(pricerange="expensive",stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",kind="hotel") [1.000000]
   User > negate(area="dontcare",kind="hotel")
   Turn 4
   Usr > [('negate(area="dontcare",kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",name="the lensfield hotel",area="south",kind="hotel",pricerange="expensive",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="1",name="gonville hotel",area="centre",kind="hotel",pricerange="expensive",stars="3")
   Semi > confirm(name="the lensfield hotel") [1.000000]
   User > confirm(name="the lensfield hotel")
   Turn 6
   Usr > [('confirm(name="the lensfield hotel")', 1.0)]
   Sys > inform(hasparking="1",name="hotel59",area="north",kind="hotel",pricerange="expensive",stars="3")
   Semi > request(phone,postcode) [1.000000]
   User > request(phone,postcode)
   Turn 7
   Usr > [(u'request(phone,postcode)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",pricerange="moderate") [1.000000]
   User > negate(area="dontcare",pricerange="moderate")
   Turn 5
   Usr > [('negate(area="dontcare",pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 3
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 4
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 4
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="leverton house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="rosa's bed and breakfast",stars="4")
   Semi > request(price,name="rosa's bed and breakfast") [1.000000]
   User > request(price,name="rosa's bed and breakfast")
   Turn 6
   Usr > [(u'request(price,name="rosa\'s bed and breakfast")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="allenbell",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="alexander bed and breakfast",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="autumn house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="finches bed and breakfast",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="worth house",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > inform(stars="4",kind="hotel",pricerange="moderate")
   Turn 3
   Usr > [('inform(stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",stars="3",kind="hotel") [1.000000]
   User > negate(pricerange="expensive",stars="3",kind="hotel")
   Turn 3
   Usr > [('negate(pricerange="expensive",stars="3",kind="hotel")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="gonville hotel",kind="hotel")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="hotel59",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="hotel86",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="expensive",name="hotel96",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="expensive",name="hotel100",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 14
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="expensive",name="guesthouse157",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 16
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="expensive",name="hotel172",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 18
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="expensive",name="guesthouse187",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 19
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 20
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="guesthouse204",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 21
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 22
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(name="none",name!="the lensfield hotel",name!="gonville hotel",name!="hotel59",name!="hotel86",name!="hotel96",name!="hotel100",name!="guesthouse157",name!="hotel172",name!="guesthouse187",name!="guesthouse204",hasparking="dontcare",pricerange="expensive",kind="hotel",stars="3")
   Semi > request(name="gonville hotel",phone) [1.000000]
   User > request(name="gonville hotel",phone)
   Turn 23
   Usr > [(u'request(name="gonville hotel",phone)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -23, suc = 0, turn = 23
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel",pricerange="cheap") [1.000000]
   User > inform(kind="hotel",pricerange="cheap")
   Turn 2
   Usr > [('inform(kind="hotel",pricerange="cheap")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare",stars="0",kind="hotel",pricerange="expensive") [1.000000]
   User > inform(hasparking="dontcare",stars="0",kind="hotel",pricerange="expensive")
   Turn 2
   Usr > [('inform(hasparking="dontcare",stars="0",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",stars="0",pricerange="expensive",name="hotel120",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 3
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 17, suc = 1, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 5
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="guesthouse41",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(price,hasinternet) [1.000000]
   User > request(price,hasinternet)
   Turn 7
   Usr > [(u'request(price,hasinternet)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse42",price) [1.000000]
   User > request(name="guesthouse42",price)
   Turn 8
   Usr > [(u'request(name="guesthouse42",price)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > confirm(stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 4
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="el shaddai",stars="0")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 6
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(hasparking="0",pricerange="cheap",name="guesthouse48",stars="0")
   Semi > request(phone,hasinternet) [1.000000]
   User > request(phone,hasinternet)
   Turn 7
   Usr > [(u'request(phone,hasinternet)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse48",phone) [1.000000]
   User > request(name="guesthouse48",phone)
   Turn 8
   Usr > [(u'request(name="guesthouse48",phone)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",kind="guesthouse") [1.000000]
   User > negate(pricerange="expensive",kind="guesthouse")
   Turn 4
   Usr > [('negate(pricerange="expensive",kind="guesthouse")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse36",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="hotel44",kind="guesthouse")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="hotel72",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 11
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse77",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 13
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="hotel109",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 15
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse182",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 17
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="hotel184",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 19
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="guesthouse215",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 20
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 21
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="hotel226",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 22
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 23
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="hotel236",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 24
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 25
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="none",name!="guesthouse36",name!="hotel44",name!="hotel72",name!="guesthouse77",name!="hotel109",name!="guesthouse182",name!="hotel184",name!="guesthouse215",name!="hotel226",name!="hotel236",hasparking="dontcare",pricerange="expensive",kind="guesthouse",stars="4")
   Semi > request(name="hotel44",hasinternet) [1.000000]
   User > request(name="hotel44",hasinternet)
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 4
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="university arms hotel",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 5
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 6
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="the lensfield hotel",stars="3",area="south")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3",type="placetostay") [1.000000]
   User > inform(stars="3",type="placetostay")
   Turn 3
   Usr > [(u'inform(stars="3",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 6
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare",type="placetostay") [1.000000]
   User > inform(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 3
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="home from home",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 4
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 5
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="el shaddai",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",pricerange="cheap",name="guesthouse48",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 9
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="hotel55",stars="0")
   Semi > confirm(name="guesthouse48") [1.000000]
   User > confirm(name="guesthouse48")
   Turn 10
   Usr > [('confirm(name="guesthouse48")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 11
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="hotel66",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 8, suc = 1, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 3
   Usr > [('negate(stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="0",type="placetostay") [1.000000]
   User > negate(stars="0",type="placetostay")
   Turn 5
   Usr > [(u'negate(stars="0",type="placetostay")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm(kind="guesthouse") [1.000000]
   User > affirm(kind="guesthouse")
   Turn 6
   Usr > [('affirm(kind="guesthouse")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 3
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 4
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="leverton house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="rosa's bed and breakfast",stars="4")
   Semi > inform(stars="0",kind="guesthouse") [1.000000]
   User > inform(stars="0",kind="guesthouse")
   Turn 6
   Usr > [(u'inform(stars="0",kind="guesthouse")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 3
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 4
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="rosa's bed and breakfast",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 6
   Usr > [('inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > confirm(name="rosa's bed and breakfast") [1.000000]
   User > confirm(name="rosa's bed and breakfast")
   Turn 8
   Usr > [('confirm(name="rosa\'s bed and breakfast")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="allenbell",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 9
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="alexander bed and breakfast",stars="4")
   Semi > confirm(name="rosa's bed and breakfast") [1.000000]
   User > confirm(name="rosa's bed and breakfast")
   Turn 10
   Usr > [('confirm(name="rosa\'s bed and breakfast")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="autumn house",stars="4")
   Semi > confirm(name="rosa's bed and breakfast") [1.000000]
   User > confirm(name="rosa's bed and breakfast")
   Turn 11
   Usr > [('confirm(name="rosa\'s bed and breakfast")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="finches bed and breakfast",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 8, suc = 1, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 3
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse36",kind="guesthouse")
   Semi > negate(stars="2",type="placetostay") [1.000000]
   User > negate(stars="2",type="placetostay")
   Turn 6
   Usr > [(u'negate(stars="2",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="expensive",name="guesthouse49",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="2",pricerange="expensive",name="hotel52",kind="guesthouse")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 9
   Usr > [(u'request(price)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 3
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="university arms hotel",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 4
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 5
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="the lensfield hotel",stars="3",area="south")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="gonville hotel",stars="3",area="centre")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 7
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="hotel59",stars="3",area="north")
   Semi > confirm(name="the lensfield hotel") [1.000000]
   User > confirm(name="the lensfield hotel")
   Turn 8
   Usr > [('confirm(name="the lensfield hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="university arms hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",pricerange="expensive",name="guesthouse36",stars="4")
   Semi > request(hasinternet,addr) [1.000000]
   User > request(hasinternet,addr)
   Turn 6
   Usr > [(u'request(hasinternet,addr)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse36",hasinternet) [1.000000]
   User > request(name="guesthouse36",hasinternet)
   Turn 7
   Usr > [(u'request(name="guesthouse36",hasinternet)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse36",hasinternet) [1.000000]
   User > request(name="guesthouse36",hasinternet)
   Turn 8
   Usr > [(u'request(name="guesthouse36",hasinternet)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse36",hasinternet) [1.000000]
   User > request(name="guesthouse36",hasinternet)
   Turn 9
   Usr > [(u'request(name="guesthouse36",hasinternet)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse36",hasinternet) [1.000000]
   User > request(name="guesthouse36",hasinternet)
   Turn 10
   Usr > [(u'request(name="guesthouse36",hasinternet)', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="kirkwood house",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="acorn guest house",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="a and b guest house",stars="4")
   Semi > confirm(name="acorn guest house") [1.000000]
   User > confirm(name="acorn guest house")
   Turn 7
   Usr > [('confirm(name="acorn guest house")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="arbury lodge guesthouse",stars="4")
   Semi > confirm(name="acorn guest house") [1.000000]
   User > confirm(name="acorn guest house")
   Turn 8
   Usr > [('confirm(name="acorn guest house")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="archway house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 9
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="avalon",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 10
   Usr > [('inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="aylesbray lodge guest house",stars="4")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 12
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 13
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 16
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 17
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 18
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -18, suc = 0, turn = 18
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay",kind="guesthouse") [1.000000]
   User > affirm(type="placetostay",kind="guesthouse")
   Turn 5
   Usr > [(u'affirm(type="placetostay",kind="guesthouse")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="4") [1.000000]
   User > inform(="dontcare",stars="4")
   Turn 3
   Usr > [('inform(="dontcare",stars="4")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="huntingdon marriott hotel",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="university arms hotel",kind="hotel")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="guesthouse87",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse126",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse128",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse161",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel",stars="0",pricerange="expensive") [1.000000]
   User > inform(kind="hotel",stars="0",pricerange="expensive")
   Turn 2
   Usr > [('inform(kind="hotel",stars="0",pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="0",pricerange="expensive",name="hotel120",kind="hotel")
   Semi > reqalts(pricerange="dontcare") [1.000000]
   User > reqalts(pricerange="dontcare")
   Turn 5
   Usr > [('reqalts(pricerange="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",stars="4") [1.000000]
   User > negate(pricerange="expensive",stars="4")
   Turn 3
   Usr > [('negate(pricerange="expensive",stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="university arms hotel",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="0",pricerange="expensive",name="guesthouse36",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 6
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="0",pricerange="expensive",name="hotel44",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 7
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="hotel72",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 8
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="0",pricerange="expensive",name="guesthouse77",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="guesthouse87",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="4") [1.000000]
   User > inform(="dontcare",stars="4")
   Turn 3
   Usr > [('inform(="dontcare",stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="university arms hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="expensive",name="guesthouse36",stars="4")
   Semi > request(phone,postcode) [1.000000]
   User > request(phone,postcode)
   Turn 6
   Usr > [(u'request(phone,postcode)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 3
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="home from home",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 4
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 5
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="leverton house",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 6
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="university arms hotel",stars="4")
   Semi > confirm(name="huntingdon marriott hotel") [1.000000]
   User > confirm(name="huntingdon marriott hotel")
   Turn 5
   Usr > [('confirm(name="huntingdon marriott hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 3
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="home from home",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 4
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="2",type="placetostay") [1.000000]
   User > negate(stars="2",type="placetostay")
   Turn 5
   Usr > [(u'negate(stars="2",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="guesthouse37",stars="2")
   Semi > reqalts(hasparking="1") [1.000000]
   User > reqalts(hasparking="1")
   Turn 6
   Usr > [(u'reqalts(hasparking="1")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="1",kind="hotel") [1.000000]
   User > inform(hasparking="1",kind="hotel")
   Turn 7
   Usr > [('inform(hasparking="1",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="home from home",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 4
   Usr > [('inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="kirkwood house",stars="4")
   Semi > confirm(name="home from home") [1.000000]
   User > confirm(name="home from home")
   Turn 6
   Usr > [('confirm(name="home from home")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="acorn guest house",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="acorn guest house",phone) [1.000000]
   User > request(name="acorn guest house",phone)
   Turn 8
   Usr > [(u'request(name="acorn guest house",phone)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3",type="placetostay",kind="guesthouse") [1.000000]
   User > negate(stars="3",type="placetostay",kind="guesthouse")
   Turn 3
   Usr > [(u'negate(stars="3",type="placetostay",kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 5
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="guesthouse",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="2",kind="guesthouse",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="expensive",name="guesthouse49",kind="guesthouse")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 4
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse49",hasinternet) [1.000000]
   User > request(name="guesthouse49",hasinternet)
   Turn 5
   Usr > [(u'request(name="guesthouse49",hasinternet)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse49",hasinternet) [1.000000]
   User > request(name="guesthouse49",hasinternet)
   Turn 6
   Usr > [(u'request(name="guesthouse49",hasinternet)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse49",hasinternet) [1.000000]
   User > request(name="guesthouse49",hasinternet)
   Turn 7
   Usr > [(u'request(name="guesthouse49",hasinternet)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse49",hasinternet) [1.000000]
   User > request(name="guesthouse49",hasinternet)
   Turn 8
   Usr > [(u'request(name="guesthouse49",hasinternet)', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 3
   Usr > [('negate(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 4
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="cityroomz",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="guesthouse41",stars="0")
   Semi > confirm(name="cityroomz") [1.000000]
   User > confirm(name="cityroomz")
   Turn 6
   Usr > [('confirm(name="cityroomz")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse41",hasinternet) [1.000000]
   User > request(name="guesthouse41",hasinternet)
   Turn 7
   Usr > [(u'request(name="guesthouse41",hasinternet)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse41",hasinternet) [1.000000]
   User > request(name="guesthouse41",hasinternet)
   Turn 8
   Usr > [(u'request(name="guesthouse41",hasinternet)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse41",hasinternet) [1.000000]
   User > request(name="guesthouse41",hasinternet)
   Turn 9
   Usr > [(u'request(name="guesthouse41",hasinternet)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse41",hasinternet) [1.000000]
   User > request(name="guesthouse41",hasinternet)
   Turn 10
   Usr > [(u'request(name="guesthouse41",hasinternet)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse41",hasinternet) [1.000000]
   User > request(name="guesthouse41",hasinternet)
   Turn 11
   Usr > [(u'request(name="guesthouse41",hasinternet)', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="hotel82",kind="hotel")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 4
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(hasparking="1",stars="0",pricerange="expensive",name="hotel120",kind="hotel")
   Semi > request(addr,name="hotel120") [1.000000]
   User > request(addr,name="hotel120")
   Turn 5
   Usr > [(u'request(addr,name="hotel120")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="hotel120",addr) [1.000000]
   User > request(name="hotel120",addr)
   Turn 6
   Usr > [(u'request(name="hotel120",addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay",stars="3") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="3")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay",stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 3
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="guesthouse",pricerange="moderate") [1.000000]
   User > affirm(kind="guesthouse",pricerange="moderate")
   Turn 4
   Usr > [('affirm(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap",stars="4") [1.000000]
   User > negate(pricerange="cheap",stars="4")
   Turn 3
   Usr > [('negate(pricerange="cheap",stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="rosa's bed and breakfast",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 4
   Usr > [('negate(stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 5
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="the lensfield hotel",stars="3",area="south")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 4
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 5
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="kirkwood house",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="acorn guest house",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 7
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="a and b guest house",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 8
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="arbury lodge guesthouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 9
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="archway house",stars="4")
   Semi > inform(stars="4",pricerange="moderate") [1.000000]
   User > inform(stars="4",pricerange="moderate")
   Turn 10
   Usr > [('inform(stars="4",pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 11
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 16
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 17
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -17, suc = 0, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 3
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 4
   Usr > [(u'request(addr)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="lovell lodge",addr) [1.000000]
   User > request(name="lovell lodge",addr)
   Turn 5
   Usr > [(u'request(name="lovell lodge",addr)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="lovell lodge",addr) [1.000000]
   User > request(name="lovell lodge",addr)
   Turn 6
   Usr > [(u'request(name="lovell lodge",addr)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="lovell lodge",addr) [1.000000]
   User > request(name="lovell lodge",addr)
   Turn 7
   Usr > [(u'request(name="lovell lodge",addr)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="lovell lodge",addr) [1.000000]
   User > request(name="lovell lodge",addr)
   Turn 8
   Usr > [(u'request(name="lovell lodge",addr)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="lovell lodge",addr) [1.000000]
   User > request(name="lovell lodge",addr)
   Turn 9
   Usr > [(u'request(name="lovell lodge",addr)', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 5
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="the lensfield hotel",stars="3",area="south")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 7
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",name="gonville hotel",area="centre",kind="hotel",pricerange="expensive",stars="3")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 8
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",name="hotel59",area="north",kind="hotel",pricerange="expensive",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="0",type="placetostay") [1.000000]
   User > negate(stars="0",type="placetostay")
   Turn 4
   Usr > [(u'negate(stars="0",type="placetostay")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 5
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 6
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="3") [1.000000]
   User > inform(="dontcare",stars="3")
   Turn 3
   Usr > [('inform(="dontcare",stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm(kind="guesthouse") [1.000000]
   User > affirm(kind="guesthouse")
   Turn 7
   Usr > [('affirm(kind="guesthouse")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3",type="placetostay") [1.000000]
   User > negate(stars="3",type="placetostay")
   Turn 3
   Usr > [(u'negate(stars="3",type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="guesthouse") [1.000000]
   User > affirm(kind="guesthouse")
   Turn 6
   Usr > [('affirm(kind="guesthouse")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 7
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 4
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="kirkwood house",stars="4")
   Semi > negate(pricerange="expensive",type="placetostay",stars="4") [1.000000]
   User > negate(pricerange="expensive",type="placetostay",stars="4")
   Turn 5
   Usr > [(u'negate(pricerange="expensive",type="placetostay",stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="university arms hotel",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 7
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="0",pricerange="expensive",name="guesthouse36",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 8
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="0",pricerange="expensive",name="hotel44",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 9
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="hotel72",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 10
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",pricerange="expensive",name="guesthouse77",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 11
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="guesthouse87",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 12
   Usr > [('ack()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="3") [1.000000]
   User > inform(="dontcare",stars="3")
   Turn 3
   Usr > [('inform(="dontcare",stars="3")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > negate(pricerange="moderate") [1.000000]
   User > negate(pricerange="moderate")
   Turn 4
   Usr > [('negate(pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 5
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay",stars="4",kind="hotel") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="4",kind="hotel")
   Turn 3
   Usr > [(u'inform(="dontcare",type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="huntingdon marriott hotel",kind="hotel")
   Semi > request(price,name="huntingdon marriott hotel") [1.000000]
   User > request(price,name="huntingdon marriott hotel")
   Turn 4
   Usr > [(u'request(price,name="huntingdon marriott hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="university arms hotel",kind="hotel")
   Semi > confirm(name="huntingdon marriott hotel") [1.000000]
   User > confirm(name="huntingdon marriott hotel")
   Turn 5
   Usr > [('confirm(name="huntingdon marriott hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="guesthouse87",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse126",kind="hotel")
   Semi > confirm(name="guesthouse87") [1.000000]
   User > confirm(name="guesthouse87")
   Turn 7
   Usr > [('confirm(name="guesthouse87")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse128",kind="hotel")
   Semi > confirm(name="guesthouse87") [1.000000]
   User > confirm(name="guesthouse87")
   Turn 8
   Usr > [('confirm(name="guesthouse87")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse161",kind="hotel")
   Semi > confirm(name="guesthouse87") [1.000000]
   User > confirm(name="guesthouse87")
   Turn 9
   Usr > [('confirm(name="guesthouse87")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="hotel167",kind="hotel")
   Semi > request(price,hasinternet) [1.000000]
   User > request(price,hasinternet)
   Turn 10
   Usr > [(u'request(price,hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel",stars="4",pricerange="expensive") [1.000000]
   User > inform(kind="hotel",stars="4",pricerange="expensive")
   Turn 3
   Usr > [('inform(kind="hotel",stars="4",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 3
   Usr > [('negate(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 4
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="0",pricerange="expensive",name="hotel120",kind="hotel")
   Semi > deny(pricerange="expensive",pricerange="moderate") [1.000000]
   User > deny(pricerange="expensive",pricerange="moderate")
   Turn 5
   Usr > [('deny(pricerange="expensive",pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 6
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 8
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="hotel",pricerange="moderate") [1.000000]
   User > inform(="dontcare",kind="hotel",pricerange="moderate")
   Turn 3
   Usr > [('inform(="dontcare",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="0",type="placetostay") [1.000000]
   User > inform(stars="0",type="placetostay")
   Turn 2
   Usr > [(u'inform(stars="0",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",pricerange="expensive") [1.000000]
   User > inform(="dontcare",pricerange="expensive")
   Turn 5
   Usr > [('inform(="dontcare",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="0",pricerange="expensive",name="hotel33",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="guesthouse70",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 9
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",pricerange="expensive",name="guesthouse93",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 10
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",pricerange="expensive",name="guesthouse101",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 3
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 4
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="4") [1.000000]
   User > inform(="dontcare",stars="4")
   Turn 2
   Usr > [('inform(="dontcare",stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="university arms hotel",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="0",pricerange="expensive",name="guesthouse36",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="0",pricerange="expensive",name="hotel44",stars="4")
   Semi > request(price,addr) [1.000000]
   User > request(price,addr)
   Turn 7
   Usr > [(u'request(price,addr)', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="hotel72",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 8
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="0",pricerange="expensive",name="guesthouse77",stars="4")
   Semi > request(price,addr) [1.000000]
   User > request(price,addr)
   Turn 9
   Usr > [(u'request(price,addr)', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="guesthouse87",stars="4")
   Semi > request(price,addr) [1.000000]
   User > request(price,addr)
   Turn 10
   Usr > [(u'request(price,addr)', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="hotel109",stars="4")
   Semi > request(price,addr) [1.000000]
   User > request(price,addr)
   Turn 11
   Usr > [(u'request(price,addr)', 1.0)]
   Sys > inform(hasparking="0",pricerange="expensive",name="guesthouse126",stars="4")
   Semi > confirm(name="hotel109") [1.000000]
   User > confirm(name="hotel109")
   Turn 12
   Usr > [('confirm(name="hotel109")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse126",price) [1.000000]
   User > request(name="guesthouse126",price)
   Turn 13
   Usr > [(u'request(name="guesthouse126",price)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 3
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="guesthouse40",stars="2")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 6
   Usr > [(u'request(postcode)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 3
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="home from home",stars="4")
   Semi > negate(stars="3",type="placetostay") [1.000000]
   User > negate(stars="3",type="placetostay")
   Turn 4
   Usr > [(u'negate(stars="3",type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 5
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="guesthouse",pricerange="moderate") [1.000000]
   User > affirm(kind="guesthouse",pricerange="moderate")
   Turn 7
   Usr > [('affirm(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare",type="placetostay") [1.000000]
   User > inform(hasparking="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'inform(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="hotel82",kind="hotel")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 4
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="huntingdon marriott hotel",kind="hotel")
   Semi > deny(pricerange="expensive",pricerange="moderate") [1.000000]
   User > deny(pricerange="expensive",pricerange="moderate")
   Turn 5
   Usr > [('deny(pricerange="expensive",pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 6
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="4",type="placetostay") [1.000000]
   User > inform(stars="4",type="placetostay")
   Turn 2
   Usr > [(u'inform(stars="4",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="university arms hotel",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 7
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="0",pricerange="expensive",name="guesthouse36",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 5
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 6
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",name="the lensfield hotel",area="south",kind="hotel",pricerange="expensive",stars="3")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 7
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",name="gonville hotel",area="centre",kind="hotel",pricerange="expensive",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 3
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="home from home",stars="4")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 4
   Usr > [('inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="hotel",pricerange="moderate") [1.000000]
   User > inform(="dontcare",kind="hotel",pricerange="moderate")
   Turn 7
   Usr > [('inform(="dontcare",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 3
   Usr > [('negate(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 4
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 6
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 9
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 3
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(pricerange="expensive",kind="guesthouse") [1.000000]
   User > inform(pricerange="expensive",kind="guesthouse")
   Turn 4
   Usr > [('inform(pricerange="expensive",kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="expensive",name="hotel33",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 6
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="0",pricerange="expensive",name="guesthouse70",kind="guesthouse")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 7
   Usr > [(u'request(postcode)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse70",postcode) [1.000000]
   User > request(name="guesthouse70",postcode)
   Turn 8
   Usr > [(u'request(name="guesthouse70",postcode)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",stars="3") [1.000000]
   User > negate(area="dontcare",stars="3")
   Turn 4
   Usr > [('negate(area="dontcare",stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 5
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",name="the lensfield hotel",area="south",kind="hotel",pricerange="expensive",stars="3")
   Semi > deny(pricerange="expensive",pricerange="moderate") [1.000000]
   User > deny(pricerange="expensive",pricerange="moderate")
   Turn 6
   Usr > [('deny(pricerange="expensive",pricerange="moderate")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 7
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 3
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="kirkwood house",stars="4")
   Semi > inform(stars="4",pricerange="moderate") [1.000000]
   User > inform(stars="4",pricerange="moderate")
   Turn 5
   Usr > [('inform(stars="4",pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 6
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="acorn guest house",stars="4",area="north")
   Semi > request(phone,postcode) [1.000000]
   User > request(phone,postcode)
   Turn 7
   Usr > [(u'request(phone,postcode)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="home from home",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="home from home",phone) [1.000000]
   User > request(name="home from home",phone)
   Turn 5
   Usr > [(u'request(name="home from home",phone)', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="kirkwood house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="acorn guest house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 8
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="a and b guest house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="arbury lodge guesthouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="archway house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 14
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="avalon",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 16
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="aylesbray lodge guest house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 18
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="carolina bed and breakfast",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 19
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 20
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="warkworth house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 21
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 22
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="guesthouse65",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 23
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 24
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="hotel79",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 25
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",type="placetostay") [1.000000]
   User > negate(pricerange="expensive",type="placetostay")
   Turn 3
   Usr > [(u'negate(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 4
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 5
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="the lensfield hotel",stars="3",area="south")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="gonville hotel",stars="3",area="centre")
   Semi > confirm(name="the lensfield hotel") [1.000000]
   User > confirm(name="the lensfield hotel")
   Turn 7
   Usr > [('confirm(name="the lensfield hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="gonville hotel",price) [1.000000]
   User > request(name="gonville hotel",price)
   Turn 8
   Usr > [(u'request(name="gonville hotel",price)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="guesthouse40",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="guesthouse61",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="hotel64",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 9
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="hotel69",stars="2")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 10
   Usr > [(u'request(addr)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="hotel69",addr) [1.000000]
   User > request(name="hotel69",addr)
   Turn 11
   Usr > [(u'request(name="hotel69",addr)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="hotel69",addr) [1.000000]
   User > request(name="hotel69",addr)
   Turn 12
   Usr > [(u'request(name="hotel69",addr)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="hotel69",addr) [1.000000]
   User > request(name="hotel69",addr)
   Turn 13
   Usr > [(u'request(name="hotel69",addr)', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 3
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 4
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="university arms hotel",stars="4")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 5
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(hasparking="0",pricerange="expensive",name="guesthouse36",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",pricerange="expensive",name="hotel44",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="4",type="placetostay",kind="guesthouse") [1.000000]
   User > inform(stars="4",type="placetostay",kind="guesthouse")
   Turn 2
   Usr > [(u'inform(stars="4",type="placetostay",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(pricerange="expensive") [1.000000]
   User > affirm(pricerange="expensive")
   Turn 5
   Usr > [('affirm(pricerange="expensive")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="university arms hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 3
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="guesthouse40",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="guesthouse61",stars="2")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 7
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="hotel64",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 8
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="hotel69",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 9
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="guesthouse84",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 10
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="hotel90",stars="2")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 11
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="hotel112",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 12
   Usr > [('ack()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 13
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hotel133",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 14
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="guesthouse136",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 15
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 4
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 7
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="home from home",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 4
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="home from home",hasinternet) [1.000000]
   User > request(name="home from home",hasinternet)
   Turn 5
   Usr > [(u'request(name="home from home",hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay",stars="4") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="4")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay",stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 4
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="the cambridge belfry",kind="hotel")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 5
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="guesthouse73",kind="hotel")
   Semi > request(postcode,addr) [1.000000]
   User > request(postcode,addr)
   Turn 6
   Usr > [(u'request(postcode,addr)', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="cheap",name="hotel75",kind="hotel")
   Semi > request(postcode,addr) [1.000000]
   User > request(postcode,addr)
   Turn 7
   Usr > [(u'request(postcode,addr)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="guesthouse83",kind="hotel")
   Semi > confirm(name="hotel75") [1.000000]
   User > confirm(name="hotel75")
   Turn 8
   Usr > [('confirm(name="hotel75")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="4",type="placetostay",kind="hotel",pricerange="moderate") [1.000000]
   User > inform(stars="4",type="placetostay",kind="hotel",pricerange="moderate")
   Turn 2
   Usr > [(u'inform(stars="4",type="placetostay",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="4") [1.000000]
   User > inform(="dontcare",stars="4")
   Turn 2
   Usr > [('inform(="dontcare",stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="university arms hotel",stars="4")
   Semi > request(hasinternet,name="university arms hotel") [1.000000]
   User > request(hasinternet,name="university arms hotel")
   Turn 5
   Usr > [(u'request(hasinternet,name="university arms hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="cityroomz",stars="0")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 4
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="el shaddai",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="el shaddai",phone) [1.000000]
   User > request(name="el shaddai",phone)
   Turn 6
   Usr > [(u'request(name="el shaddai",phone)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="4") [1.000000]
   User > inform(="dontcare",stars="4")
   Turn 2
   Usr > [('inform(="dontcare",stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 4
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="the cambridge belfry",kind="hotel")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="guesthouse73",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 6
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="cheap",name="hotel75",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 7
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="guesthouse83",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 8
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="cheap",name="guesthouse85",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 9
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="guesthouse194",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 10
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="cheap",name="hotel238",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 11
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="hotel242",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 12
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="cheap",name="guesthouse243",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 13
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="cheap",name="guesthouse247",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 14
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(name="none",name!="the cambridge belfry",name!="guesthouse73",name!="hotel75",name!="guesthouse83",name!="guesthouse85",name!="guesthouse194",name!="hotel238",name!="hotel242",name!="guesthouse243",name!="guesthouse247",hasparking="dontcare",pricerange="cheap",kind="hotel",stars="4")
   Semi > request(name="the cambridge belfry",addr) [1.000000]
   User > request(name="the cambridge belfry",addr)
   Turn 15
   Usr > [(u'request(name="the cambridge belfry",addr)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="the cambridge belfry",addr) [1.000000]
   User > request(name="the cambridge belfry",addr)
   Turn 16
   Usr > [(u'request(name="the cambridge belfry",addr)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="the cambridge belfry",kind="hotel")
   Semi > request(addr,name="the cambridge belfry") [1.000000]
   User > request(addr,name="the cambridge belfry")
   Turn 17
   Usr > [(u'request(addr,name="the cambridge belfry")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="the cambridge belfry",addr) [1.000000]
   User > request(name="the cambridge belfry",addr)
   Turn 18
   Usr > [(u'request(name="the cambridge belfry",addr)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="guesthouse73",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 19
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse73",addr) [1.000000]
   User > request(name="guesthouse73",addr)
   Turn 20
   Usr > [(u'request(name="guesthouse73",addr)', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="cheap",name="hotel75",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 21
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="hotel75",addr) [1.000000]
   User > request(name="hotel75",addr)
   Turn 22
   Usr > [(u'request(name="hotel75",addr)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="guesthouse83",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 23
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="cheap",name="guesthouse85",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 24
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="guesthouse194",kind="hotel")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 25
   Usr > [('thankyou()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="hotel82",kind="hotel")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 4
   Usr > [('negate(stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",pricerange="expensive") [1.000000]
   User > negate(area="dontcare",pricerange="expensive")
   Turn 5
   Usr > [('negate(area="dontcare",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",name="the lensfield hotel",area="south",kind="hotel",pricerange="expensive",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",type="placetostay") [1.000000]
   User > negate(pricerange="expensive",type="placetostay")
   Turn 3
   Usr > [(u'negate(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="4",kind="guesthouse") [1.000000]
   User > inform(stars="4",kind="guesthouse")
   Turn 4
   Usr > [('inform(stars="4",kind="guesthouse")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse36",kind="guesthouse")
   Semi > confirm(name="huntingdon marriott hotel") [1.000000]
   User > confirm(name="huntingdon marriott hotel")
   Turn 6
   Usr > [('confirm(name="huntingdon marriott hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 7
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="hotel44",kind="guesthouse")
   Semi > confirm(name="huntingdon marriott hotel") [1.000000]
   User > confirm(name="huntingdon marriott hotel")
   Turn 8
   Usr > [('confirm(name="huntingdon marriott hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:55:37: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:55:37: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -8.01 +- 1.63
RESULTS:: 17:55:37: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -8.01 +- 1.63
Average success = 2.00 +- 2.78
RESULTS:: 17:55:37: root                               EvaluationManager.py <_prstr>207 :  Average success = 2.00 +- 2.78
Average turns   = 10.01 +- 0.99
RESULTS:: 17:55:37: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 10.01 +- 0.99
RESULTS:: 17:55:37: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.25->env11-dqn-CH-MLN-00.26: iter=25, error-rate=0, num-dialogs=100 ***
RESULTS:: 17:55:37: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.25->env11-dqn-CH-MLN-00.26: iter=25, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.25.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.25
loaded replay size:  1886
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare",stars="3",kind="hotel") [1.000000]
   User > inform(="dontcare",stars="3",kind="hotel")
   Turn 3
   Usr > [('inform(="dontcare",stars="3",kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > deny(pricerange="expensive",pricerange="cheap") [1.000000]
   User > deny(pricerange="expensive",pricerange="cheap")
   Turn 4
   Usr > [('deny(pricerange="expensive",pricerange="cheap")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 5
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(pricerange="cheap") [1.000000]
   User > affirm(pricerange="cheap")
   Turn 6
   Usr > [('affirm(pricerange="cheap")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 8
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="hotel82",kind="hotel")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 4
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 5
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="expensive",name="express by holiday inn cambridge",kind="hotel")
   Semi > deny(pricerange="expensive",pricerange="moderate") [1.000000]
   User > deny(pricerange="expensive",pricerange="moderate")
   Turn 6
   Usr > [('deny(pricerange="expensive",pricerange="moderate")', 1.0)]
   Sys > request(area)
   Semi > inform(kind="hotel",stars="2") [1.000000]
   User > inform(kind="hotel",stars="2")
   Turn 7
   Usr > [('inform(kind="hotel",stars="2")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 8
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="moderate",name="lovell lodge",kind="hotel")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(name="lovell lodge",stars="2")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 10
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 6
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(name="guesthouse123",kind="hotel")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 8
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(area="north")', 1.0)]
   Sys > inform(name="guesthouse123",kind="hotel")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 10
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 14
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 16
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 17
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -17, suc = 0, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 3
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm(kind="guesthouse") [1.000000]
   User > affirm(kind="guesthouse")
   Turn 5
   Usr > [('affirm(kind="guesthouse")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="2",pricerange="cheap",name="guesthouse60",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="cheap",name="hotel62",kind="hotel")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 6
   Usr > [(u'request(addr)', 1.0)]
   Sys > request(area)
   Semi > request(name="hotel62",addr) [1.000000]
   User > request(name="hotel62",addr)
   Turn 7
   Usr > [(u'request(name="hotel62",addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap",kind="hotel") [1.000000]
   User > negate(pricerange="cheap",kind="hotel")
   Turn 4
   Usr > [('negate(pricerange="cheap",kind="hotel")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 7
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 8
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="1",name="the cambridge belfry",area="west",kind="hotel",pricerange="cheap",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 9
   Usr > [(u'request(phone)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="0",type="placetostay") [1.000000]
   User > inform(stars="0",type="placetostay")
   Turn 2
   Usr > [(u'inform(stars="0",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",pricerange="moderate") [1.000000]
   User > inform(="dontcare",pricerange="moderate")
   Turn 5
   Usr > [('inform(="dontcare",pricerange="moderate")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 6
   Usr > [('deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 7
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 9
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 4
   Usr > [('inform(stars="4")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="cheap",type="placetostay") [1.000000]
   User > inform(pricerange="cheap",type="placetostay")
   Turn 5
   Usr > [(u'inform(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="the cambridge belfry",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 8
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="guesthouse73",kind="hotel")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 9
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="4",kind="hotel") [1.000000]
   User > inform(="dontcare",stars="4",kind="hotel")
   Turn 2
   Usr > [('inform(="dontcare",stars="4",kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="huntingdon marriott hotel",kind="hotel")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="university arms hotel",kind="hotel")
   Semi > request(phone,name="university arms hotel") [1.000000]
   User > request(phone,name="university arms hotel")
   Turn 5
   Usr > [(u'request(phone,name="university arms hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 4
   Usr > [('inform(stars="0")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 7
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3",type="placetostay") [1.000000]
   User > inform(stars="3",type="placetostay")
   Turn 3
   Usr > [(u'inform(stars="3",type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 5
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",name="the lensfield hotel",area="south",kind="hotel",pricerange="expensive",stars="3")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 6
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",name="hotel50",area="south",kind="hotel",pricerange="cheap",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="hotel56",area="north",kind="hotel",pricerange="cheap",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 2
   Usr > [('negate(stars="0")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="0",type="placetostay") [1.000000]
   User > inform(stars="0",type="placetostay")
   Turn 3
   Usr > [(u'inform(stars="0",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 4
   Usr > [('inform(stars="0")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="guesthouse") [1.000000]
   User > inform(="dontcare",kind="guesthouse")
   Turn 5
   Usr > [('inform(="dontcare",kind="guesthouse")', 1.0)]
   Sys > select(stars="0",stars="3")
   Semi > inform(stars="0",pricerange="moderate") [1.000000]
   User > inform(stars="0",pricerange="moderate")
   Turn 6
   Usr > [('inform(stars="0",pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 7
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 11
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse42",area="centre",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 12
   Usr > [('ack()', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",type="placetostay",stars="4") [1.000000]
   User > inform(kind="hotel",type="placetostay",stars="4")
   Turn 4
   Usr > [(u'inform(kind="hotel",type="placetostay",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3",kind="guesthouse") [1.000000]
   User > negate(stars="3",kind="guesthouse")
   Turn 3
   Usr > [('negate(stars="3",kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 5
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="0") [1.000000]
   User > negate(hasparking="dontcare",stars="0")
   Turn 2
   Usr > [('negate(hasparking="dontcare",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse214",phone="12233600214")
   Semi > inform(stars="2",kind="guesthouse") [1.000000]
   User > inform(stars="2",kind="guesthouse")
   Turn 2
   Usr > [('inform(stars="2",kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="hotel192",hasparking="1")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 3
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="alpha-milton guest house",hasinternet="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 2
   Usr > [('thankyou()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay") [1.000000]
   User > negate(area="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(area="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 3
   Usr > [('inform(stars="0")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 7
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 10
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 11
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 12
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 13
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 14
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 15
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 2
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse",type="placetostay") [1.000000]
   User > inform(kind="guesthouse",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="guesthouse",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",type="placetostay",stars="0") [1.000000]
   User > inform(kind="hotel",type="placetostay",stars="0")
   Turn 2
   Usr > [(u'inform(kind="hotel",type="placetostay",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(stars="4",kind="hotel") [1.000000]
   User > affirm(stars="4",kind="hotel")
   Turn 3
   Usr > [('affirm(stars="4",kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="huntingdon marriott hotel",kind="hotel")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 4
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="the cambridge belfry",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 7
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse73",area="centre",kind="hotel",pricerange="cheap",stars="4")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 8
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0",kind="guesthouse") [1.000000]
   User > inform(stars="0",kind="guesthouse")
   Turn 2
   Usr > [('inform(stars="0",kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="guesthouse") [1.000000]
   User > affirm(kind="guesthouse")
   Turn 4
   Usr > [('affirm(kind="guesthouse")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="hobsons house",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",pricerange="moderate") [1.000000]
   User > inform(="dontcare",pricerange="moderate")
   Turn 7
   Usr > [('inform(="dontcare",pricerange="moderate")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 11
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay") [1.000000]
   User > negate(area="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'negate(area="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay") [1.000000]
   User > negate(area="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(area="dontcare",type="placetostay")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3",type="placetostay") [1.000000]
   User > inform(stars="3",type="placetostay")
   Turn 3
   Usr > [(u'inform(stars="3",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 3
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse247",phone="12233600247")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 8
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(name="leverton house",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 2
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",type="placetostay") [1.000000]
   User > negate(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
Saving deepq-network...
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 17:59:03: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 17:59:03: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -2.71 +- 0.78
RESULTS:: 17:59:03: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -2.71 +- 0.78
Average success = 0.00 +- 0.00
RESULTS:: 17:59:03: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 3.11 +- 0.74
RESULTS:: 17:59:03: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 3.11 +- 0.74
*** Evaluating env11-dqn-CH-MLN-00.26: error-rate=0 num-dialogs=100 ***
RESULTS:: 17:59:03: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.26: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.26.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.26
loaded replay size:  2097
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(pricerange="cheap") [1.000000]
   User > affirm(pricerange="cheap")
   Turn 3
   Usr > [('affirm(pricerange="cheap")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 18:00:42: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 18:00:42: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.06 +- 0.12
RESULTS:: 18:00:42: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.06 +- 0.12
Average success = 0.00 +- 0.00
RESULTS:: 18:00:42: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.06 +- 0.12
RESULTS:: 18:00:42: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.06 +- 0.12
RESULTS:: 18:00:42: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.26->env11-dqn-CH-MLN-00.27: iter=26, error-rate=0, num-dialogs=100 ***
RESULTS:: 18:00:42: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.26->env11-dqn-CH-MLN-00.27: iter=26, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.26.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.26
loaded replay size:  2097
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay",stars="4") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay",stars="4")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay",stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 4
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 5
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 8
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 9
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",pricerange="expensive") [1.000000]
   User > inform(="dontcare",pricerange="expensive")
   Turn 10
   Usr > [('inform(="dontcare",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",name="the lensfield hotel",area="south",kind="hotel",pricerange="expensive",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse129",hasinternet="1")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 2
   Usr > [(u'request(price)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="3") [1.000000]
   User > inform(="dontcare",stars="3")
   Turn 2
   Usr > [('inform(="dontcare",stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="hotel",pricerange="expensive") [1.000000]
   User > affirm(kind="hotel",pricerange="expensive")
   Turn 4
   Usr > [('affirm(kind="hotel",pricerange="expensive")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 5
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > reqalts(hasparking="0") [1.000000]
   User > reqalts(hasparking="0")
   Turn 7
   Usr > [(u'reqalts(hasparking="0")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 8
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="expensive",name="hotel96",kind="hotel")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 9
   Usr > [('thankyou()', 1.0)]
   Sys > request(stars)
   Semi > request(name="hotel96",price) [1.000000]
   User > request(name="hotel96",price)
   Turn 10
   Usr > [(u'request(name="hotel96",price)', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 11
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="expensive",name="hotel100",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 12
   Usr > [(u'request(price)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts(pricerange="expensive") [1.000000]
   User > reqalts(pricerange="expensive")
   Turn 2
   Usr > [(u'reqalts(pricerange="expensive")', 1.0)]
   Sys > reqmore()
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",kind="hotel")
   Turn 4
   Usr > [(u'inform(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="guesthouse") [1.000000]
   User > affirm(kind="guesthouse")
   Turn 4
   Usr > [('affirm(kind="guesthouse")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 5
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 6
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 7
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 8
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 10
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 11
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="guesthouse157",kind="hotel")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 2
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 3
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 3
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 5
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 6
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 7
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 9
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 11
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 12
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 13
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 14
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 15
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(stars)
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -16, suc = 0, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse",type="placetostay") [1.000000]
   User > inform(kind="guesthouse",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="guesthouse",type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 3
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(stars="3") [1.000000]
   User > affirm(stars="3")
   Turn 6
   Usr > [('affirm(stars="3")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse",pricerange="moderate") [1.000000]
   User > inform(kind="guesthouse",pricerange="moderate")
   Turn 7
   Usr > [('inform(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 8
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 9
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 10
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 4
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3",type="placetostay") [1.000000]
   User > inform(stars="3",type="placetostay")
   Turn 2
   Usr > [(u'inform(stars="3",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(kind="guesthouse",pricerange="moderate") [1.000000]
   User > affirm(kind="guesthouse",pricerange="moderate")
   Turn 8
   Usr > [('affirm(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 9
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 10
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 11
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 8, suc = 1, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 4
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="home from home",hasinternet) [1.000000]
   User > request(name="home from home",hasinternet)
   Turn 6
   Usr > [(u'request(name="home from home",hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(stars="3",kind="hotel") [1.000000]
   User > affirm(stars="3",kind="hotel")
   Turn 2
   Usr > [('affirm(stars="3",kind="hotel")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="hotel212",hasparking="1")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 3
   Usr > [(u'request(phone)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",stars="4") [1.000000]
   User > inform(="dontcare",stars="4")
   Turn 2
   Usr > [('inform(="dontcare",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [('affirm()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
Saving deepq-network...
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 18:03:34: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 18:03:34: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.92 +- 0.56
RESULTS:: 18:03:34: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.92 +- 0.56
Average success = 0.00 +- 0.00
RESULTS:: 18:03:34: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 2.12 +- 0.56
RESULTS:: 18:03:34: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 2.12 +- 0.56
*** Evaluating env11-dqn-CH-MLN-00.27: error-rate=0 num-dialogs=100 ***
RESULTS:: 18:03:34: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.27: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.27.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.27
loaded replay size:  2209
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 3
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 5
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 6
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="hotel",pricerange="expensive") [1.000000]
   User > inform(="dontcare",kind="hotel",pricerange="expensive")
   Turn 2
   Usr > [('inform(="dontcare",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 3
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 17, suc = 1, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate",kind="hotel") [1.000000]
   User > inform(pricerange="moderate",kind="hotel")
   Turn 2
   Usr > [('inform(pricerange="moderate",kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="guesthouse",pricerange="moderate") [1.000000]
   User > inform(="dontcare",kind="guesthouse",pricerange="moderate")
   Turn 4
   Usr > [('inform(="dontcare",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 7
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="guesthouse",pricerange="moderate") [1.000000]
   User > inform(="dontcare",kind="guesthouse",pricerange="moderate")
   Turn 3
   Usr > [('inform(="dontcare",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 7
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="hotel",pricerange="moderate") [1.000000]
   User > inform(="dontcare",kind="hotel",pricerange="moderate")
   Turn 2
   Usr > [('inform(="dontcare",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="hotel",pricerange="expensive") [1.000000]
   User > inform(="dontcare",kind="hotel",pricerange="expensive")
   Turn 4
   Usr > [('inform(="dontcare",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(pricerange="expensive") [1.000000]
   User > affirm(pricerange="expensive")
   Turn 4
   Usr > [('affirm(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel",pricerange="expensive") [1.000000]
   User > inform(kind="hotel",pricerange="expensive")
   Turn 3
   Usr > [('inform(kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 18:05:27: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 18:05:27: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.24 +- 0.47
RESULTS:: 18:05:27: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.24 +- 0.47
Average success = 0.00 +- 0.00
RESULTS:: 18:05:27: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.44 +- 0.31
RESULTS:: 18:05:27: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.44 +- 0.31
RESULTS:: 18:05:27: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.27->env11-dqn-CH-MLN-00.28: iter=27, error-rate=0, num-dialogs=100 ***
RESULTS:: 18:05:27: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.27->env11-dqn-CH-MLN-00.28: iter=27, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.27.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.27
loaded replay size:  2209
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",stars="2") [1.000000]
   User > inform(pricerange="moderate",stars="2")
   Turn 2
   Usr > [('inform(pricerange="moderate",stars="2")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",kind="hotel") [1.000000]
   User > inform(="dontcare",kind="hotel")
   Turn 3
   Usr > [('inform(="dontcare",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare",kind="hotel") [1.000000]
   User > inform(area="dontcare",kind="hotel")
   Turn 4
   Usr > [('inform(area="dontcare",kind="hotel")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 5
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="hotel") [1.000000]
   User > inform(="dontcare",kind="hotel")
   Turn 2
   Usr > [('inform(="dontcare",kind="hotel")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 4
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="gonville hotel",kind="hotel")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 6
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > request(area)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 7
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 8
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="hotel59",kind="hotel")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 9
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="cheap",name="hotel50",kind="hotel")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 10
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",type="placetostay",stars="3",kind="hotel") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="3",kind="hotel")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(stars="4",type="placetostay",kind="hotel",pricerange="moderate") [1.000000]
   User > inform(stars="4",type="placetostay",kind="hotel",pricerange="moderate")
   Turn 2
   Usr > [(u'inform(stars="4",type="placetostay",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 3
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 17, suc = 1, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [('affirm()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="0",type="placetostay",kind="guesthouse") [1.000000]
   User > inform(stars="0",type="placetostay",kind="guesthouse")
   Turn 3
   Usr > [(u'inform(stars="0",type="placetostay",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 5
   Usr > [(u'request(phone)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse42",phone) [1.000000]
   User > request(name="guesthouse42",phone)
   Turn 6
   Usr > [(u'request(name="guesthouse42",phone)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > confirm(stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > request(area)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 3
   Usr > [('negate(stars="0")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare",kind="hotel") [1.000000]
   User > inform(hasparking="dontcare",kind="hotel")
   Turn 4
   Usr > [('inform(hasparking="dontcare",kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="cityroomz",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4",kind="hotel",pricerange="cheap") [1.000000]
   User > inform(stars="4",kind="hotel",pricerange="cheap")
   Turn 2
   Usr > [('inform(stars="4",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(pricerange="expensive") [1.000000]
   User > affirm(pricerange="expensive")
   Turn 6
   Usr > [('affirm(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > request(price,hasinternet) [1.000000]
   User > request(price,hasinternet)
   Turn 7
   Usr > [(u'request(price,hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 2
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",stars="0",kind="guesthouse",pricerange="moderate") [1.000000]
   User > inform(="dontcare",stars="0",kind="guesthouse",pricerange="moderate")
   Turn 4
   Usr > [('inform(="dontcare",stars="0",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",pricerange="moderate") [1.000000]
   User > inform(="dontcare",pricerange="moderate")
   Turn 3
   Usr > [('inform(="dontcare",pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="0",kind="hotel") [1.000000]
   User > affirm(stars="0",kind="hotel")
   Turn 2
   Usr > [('affirm(stars="0",kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 5
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 7
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 16
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 17
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="0",name="cityroomz",area="centre",kind="hotel",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse41",area="west",kind="hotel",pricerange="moderate",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 19
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 1, suc = 1, turn = 19
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",pricerange="expensive") [1.000000]
   User > inform(="dontcare",pricerange="expensive")
   Turn 4
   Usr > [('inform(="dontcare",pricerange="expensive")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay",stars="3",kind="guesthouse",pricerange="expensive") [1.000000]
   User > negate(area="dontcare",type="placetostay",stars="3",kind="guesthouse",pricerange="expensive")
   Turn 2
   Usr > [(u'negate(area="dontcare",type="placetostay",stars="3",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay",stars="4") [1.000000]
   User > affirm(type="placetostay",stars="4")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
Saving deepq-network...
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 18:08:16: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 18:08:16: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.36 +- 0.61
RESULTS:: 18:08:16: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.36 +- 0.61
Average success = 1.00 +- 1.97
RESULTS:: 18:08:16: root                               EvaluationManager.py <_prstr>207 :  Average success = 1.00 +- 1.97
Average turns   = 1.96 +- 0.50
RESULTS:: 18:08:16: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.96 +- 0.50
*** Evaluating env11-dqn-CH-MLN-00.28: error-rate=0 num-dialogs=100 ***
RESULTS:: 18:08:16: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.28: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.28.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.28
loaded replay size:  2305
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3",kind="guesthouse",pricerange="moderate") [1.000000]
   User > inform(stars="3",kind="guesthouse",pricerange="moderate")
   Turn 2
   Usr > [('inform(stars="3",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [('affirm()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="guesthouse",pricerange="moderate") [1.000000]
   User > affirm(kind="guesthouse",pricerange="moderate")
   Turn 3
   Usr > [('affirm(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [('affirm()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [('affirm()', 1.0)]
   Sys > reqmore()
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",pricerange="expensive") [1.000000]
   User > inform(="dontcare",pricerange="expensive")
   Turn 2
   Usr > [('inform(="dontcare",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse36",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 18:10:02: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 18:10:02: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.15 +- 0.18
RESULTS:: 18:10:02: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.15 +- 0.18
Average success = 0.00 +- 0.00
RESULTS:: 18:10:02: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.15 +- 0.18
RESULTS:: 18:10:02: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.15 +- 0.18
RESULTS:: 18:10:02: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.28->env11-dqn-CH-MLN-00.29: iter=28, error-rate=0, num-dialogs=100 ***
RESULTS:: 18:10:02: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.28->env11-dqn-CH-MLN-00.29: iter=28, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.28.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.28
loaded replay size:  2305
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare",stars="3") [1.000000]
   User > inform(area="dontcare",stars="3")
   Turn 2
   Usr > [('inform(area="dontcare",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3",kind="guesthouse") [1.000000]
   User > inform(stars="3",kind="guesthouse")
   Turn 3
   Usr > [('inform(stars="3",kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 4
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="hotel") [1.000000]
   User > inform(="dontcare",kind="hotel")
   Turn 5
   Usr > [('inform(="dontcare",kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="huntingdon marriott hotel",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 7
   Usr > [(u'request(price)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="huntingdon marriott hotel",price) [1.000000]
   User > request(name="huntingdon marriott hotel",price)
   Turn 8
   Usr > [(u'request(name="huntingdon marriott hotel",price)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="leverton house",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 4
   Usr > [('negate(stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay",kind="hotel") [1.000000]
   User > negate(area="dontcare",type="placetostay",kind="hotel")
   Turn 5
   Usr > [(u'negate(area="dontcare",type="placetostay",kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",name="hotel50",area="south",kind="hotel",pricerange="cheap",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 7
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="1",name="hotel56",area="north",kind="hotel",pricerange="cheap",stars="3")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 8
   Usr > [(u'request(price)', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse58",area="south",kind="hotel",pricerange="cheap",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse71",area="east",kind="hotel",pricerange="cheap",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",name="hotel91",area="west",kind="hotel",pricerange="cheap",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(hasparking="1",name="hotel105",area="centre",kind="hotel",pricerange="cheap",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse123",area="west",kind="hotel",pricerange="cheap",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse162",area="east",kind="hotel",pricerange="cheap",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 17
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(hasparking="0",name="hotel178",area="centre",kind="hotel",pricerange="cheap",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 19
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse220",area="north",kind="hotel",pricerange="cheap",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 20
   Usr > [('reqalts()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 21
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="none",name!="hotel50",name!="hotel56",name!="guesthouse58",name!="guesthouse71",name!="hotel91",name!="hotel105",name!="guesthouse123",name!="guesthouse162",name!="hotel178",name!="guesthouse220",hasparking="dontcare",pricerange="cheap",kind="hotel",stars="3",area="dontcare")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 22
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="0",name="hotel50",area="south",kind="hotel",pricerange="cheap",stars="3")
   Semi > confirm(name="hotel56") [1.000000]
   User > confirm(name="hotel56")
   Turn 23
   Usr > [('confirm(name="hotel56")', 1.0)]
   Sys > inform(hasparking="1",name="hotel56",area="north",kind="hotel",pricerange="cheap",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 24
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 25
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse58",area="south",kind="hotel",pricerange="cheap",stars="3")
   Semi > confirm(name="hotel56") [1.000000]
   User > confirm(name="hotel56")
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="hotel184",price="hotel184price")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 2
   Usr > [(u'request(phone)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 2
   Usr > [(u'request(price)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="hobsons house",price) [1.000000]
   User > request(name="hobsons house",price)
   Turn 3
   Usr > [(u'request(name="hobsons house",price)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="0",type="placetostay") [1.000000]
   User > inform(stars="0",type="placetostay")
   Turn 3
   Usr > [(u'inform(stars="0",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",kind="guesthouse") [1.000000]
   User > negate(area="dontcare",kind="guesthouse")
   Turn 5
   Usr > [('negate(area="dontcare",kind="guesthouse")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse42",area="centre",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > request(price,hasinternet) [1.000000]
   User > request(price,hasinternet)
   Turn 10
   Usr > [(u'request(price,hasinternet)', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse74",area="centre",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > confirm(name="guesthouse42") [1.000000]
   User > confirm(name="guesthouse42")
   Turn 11
   Usr > [('confirm(name="guesthouse42")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",pricerange="expensive") [1.000000]
   User > inform(="dontcare",pricerange="expensive")
   Turn 2
   Usr > [('inform(="dontcare",pricerange="expensive")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 2
   Usr > [('negate(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",type="placetostay",stars="4") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="4")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 2
   Usr > [('inform(stars="2")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="expensive",type="placetostay",stars="4") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="4")
   Turn 3
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="4")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 4
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 2
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 4
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > reqalts(hasparking="dontcare") [1.000000]
   User > reqalts(hasparking="dontcare")
   Turn 5
   Usr > [('reqalts(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > negate(kind="guesthouse") [1.000000]
   User > negate(kind="guesthouse")
   Turn 3
   Usr > [('negate(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare",type="placetostay") [1.000000]
   User > inform(hasparking="dontcare",type="placetostay")
   Turn 4
   Usr > [(u'inform(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hobsons house",kind="guesthouse")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > reqmore()
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(stars="4")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 2
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hobsons house",kind="guesthouse")
   Semi > reqalts(pricerange="cheap") [1.000000]
   User > reqalts(pricerange="cheap")
   Turn 3
   Usr > [(u'reqalts(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="cheap",name="hotel34",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 2
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 18, suc = 1, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3",area="west")
   Semi > negate(pricerange="expensive",kind="hotel") [1.000000]
   User > negate(pricerange="expensive",kind="hotel")
   Turn 4
   Usr > [('negate(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 7
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="0",type="placetostay") [1.000000]
   User > inform(stars="0",type="placetostay")
   Turn 2
   Usr > [(u'inform(stars="0",type="placetostay")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 3
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",stars="4") [1.000000]
   User > inform(="dontcare",stars="4")
   Turn 3
   Usr > [('inform(="dontcare",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="guesthouse161",phone="12233600161")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay",stars="0",kind="hotel") [1.000000]
   User > negate(area="dontcare",type="placetostay",stars="0",kind="hotel")
   Turn 2
   Usr > [(u'negate(area="dontcare",type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 3
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
Saving deepq-network...
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 18:12:52: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 18:12:52: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.41 +- 0.81
RESULTS:: 18:12:52: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.41 +- 0.81
Average success = 2.00 +- 2.78
RESULTS:: 18:12:52: root                               EvaluationManager.py <_prstr>207 :  Average success = 2.00 +- 2.78
Average turns   = 2.01 +- 0.56
RESULTS:: 18:12:52: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 2.01 +- 0.56
*** Evaluating env11-dqn-CH-MLN-00.29: error-rate=0 num-dialogs=100 ***
RESULTS:: 18:12:52: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.29: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.29.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.29
loaded replay size:  2406
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="gonville hotel",kind="hotel")
   Semi > confirm(name="the lensfield hotel") [1.000000]
   User > confirm(name="the lensfield hotel")
   Turn 5
   Usr > [('confirm(name="the lensfield hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="hotel",pricerange="expensive") [1.000000]
   User > inform(="dontcare",kind="hotel",pricerange="expensive")
   Turn 2
   Usr > [('inform(="dontcare",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > reqalts(pricerange="dontcare") [1.000000]
   User > reqalts(pricerange="dontcare")
   Turn 3
   Usr > [('reqalts(pricerange="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="gonville hotel",kind="hotel")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 4
   Usr > [(u'request(postcode)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hobsons house",kind="guesthouse")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="alpha-milton guest house",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 16, suc = 1, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 3
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 17, suc = 1, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 18:14:37: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 18:14:37: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -0.72 +- 0.50
RESULTS:: 18:14:37: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -0.72 +- 0.50
Average success = 0.00 +- 0.00
RESULTS:: 18:14:37: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.12 +- 0.12
RESULTS:: 18:14:37: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.12 +- 0.12
RESULTS:: 18:14:37: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.29->env11-dqn-CH-MLN-00.30: iter=29, error-rate=0, num-dialogs=100 ***
RESULTS:: 18:14:37: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.29->env11-dqn-CH-MLN-00.30: iter=29, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.29.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.29
loaded replay size:  2406
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",stars="4",kind="hotel") [1.000000]
   User > inform(="dontcare",stars="4",kind="hotel")
   Turn 2
   Usr > [('inform(="dontcare",stars="4",kind="hotel")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hobsons house",kind="guesthouse")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 3
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="guesthouse63",kind="guesthouse")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 4
   Usr > [(u'request(phone)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse63",phone) [1.000000]
   User > request(name="guesthouse63",phone)
   Turn 5
   Usr > [(u'request(name="guesthouse63",phone)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse63",phone) [1.000000]
   User > request(name="guesthouse63",phone)
   Turn 6
   Usr > [(u'request(name="guesthouse63",phone)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse63",phone) [1.000000]
   User > request(name="guesthouse63",phone)
   Turn 7
   Usr > [(u'request(name="guesthouse63",phone)', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(name="guesthouse63",phone="1223360063")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 10
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="guesthouse99",kind="guesthouse")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 12
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="expensive",name="guesthouse114",kind="guesthouse")
   Semi > confirm(name="guesthouse99") [1.000000]
   User > confirm(name="guesthouse99")
   Turn 13
   Usr > [('confirm(name="guesthouse99")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse114",price) [1.000000]
   User > request(name="guesthouse114",price)
   Turn 14
   Usr > [(u'request(name="guesthouse114",price)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse114",price) [1.000000]
   User > request(name="guesthouse114",price)
   Turn 15
   Usr > [(u'request(name="guesthouse114",price)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse114",price) [1.000000]
   User > request(name="guesthouse114",price)
   Turn 16
   Usr > [(u'request(name="guesthouse114",price)', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 17
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -17, suc = 0, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse",pricerange="cheap")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",kind="guesthouse") [1.000000]
   User > inform(="dontcare",kind="guesthouse")
   Turn 2
   Usr > [('inform(="dontcare",kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 3
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="3",kind="guesthouse") [1.000000]
   User > negate(hasparking="dontcare",stars="3",kind="guesthouse")
   Turn 3
   Usr > [('negate(hasparking="dontcare",stars="3",kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="guesthouse63",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 16, suc = 1, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="limehouse",kind="guesthouse")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 4
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="guesthouse37",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="2",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",pricerange="expensive") [1.000000]
   User > negate(area="dontcare",pricerange="expensive")
   Turn 2
   Usr > [('negate(area="dontcare",pricerange="expensive")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 3
   Usr > [('inform(stars="2")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse49",area="west",kind="guesthouse",pricerange="expensive",stars="2")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="0",name="hotel52",area="east",kind="guesthouse",pricerange="expensive",stars="2")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 7
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse57",area="north",kind="guesthouse",pricerange="expensive",stars="2")
   Semi > confirm(name="hotel52") [1.000000]
   User > confirm(name="hotel52")
   Turn 8
   Usr > [('confirm(name="hotel52")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 4
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",kind="hotel")
   Turn 9
   Usr > [('inform(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 10
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > reqmore()
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 3
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3",pricerange="expensive") [1.000000]
   User > inform(stars="3",pricerange="expensive")
   Turn 4
   Usr > [('inform(stars="3",pricerange="expensive")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 10
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="3") [1.000000]
   User > negate(hasparking="dontcare",stars="3")
   Turn 3
   Usr > [('negate(hasparking="dontcare",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 4
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="guesthouse") [1.000000]
   User > inform(="dontcare",kind="guesthouse")
   Turn 5
   Usr > [('inform(="dontcare",kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hobsons house",kind="guesthouse")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="hobsons house",price) [1.000000]
   User > request(name="hobsons house",price)
   Turn 7
   Usr > [(u'request(name="hobsons house",price)', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="alpha-milton guest house",kind="guesthouse")
   Semi > confirm(name="hobsons house") [1.000000]
   User > confirm(name="hobsons house")
   Turn 8
   Usr > [('confirm(name="hobsons house")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="alpha-milton guest house",price) [1.000000]
   User > request(name="alpha-milton guest house",price)
   Turn 9
   Usr > [(u'request(name="alpha-milton guest house",price)', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="bridge guest house",kind="guesthouse")
   Semi > confirm(name="hobsons house") [1.000000]
   User > confirm(name="hobsons house")
   Turn 10
   Usr > [('confirm(name="hobsons house")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="bridge guest house",price) [1.000000]
   User > request(name="bridge guest house",price)
   Turn 11
   Usr > [(u'request(name="bridge guest house",price)', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hamilton lodge",kind="guesthouse")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 12
   Usr > [(u'request(price)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="hamilton lodge",price) [1.000000]
   User > request(name="hamilton lodge",price)
   Turn 13
   Usr > [(u'request(name="hamilton lodge",price)', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse35",kind="guesthouse")
   Semi > confirm(name="hamilton lodge") [1.000000]
   User > confirm(name="hamilton lodge")
   Turn 14
   Usr > [('confirm(name="hamilton lodge")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse35",price) [1.000000]
   User > request(name="guesthouse35",price)
   Turn 15
   Usr > [(u'request(name="guesthouse35",price)', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="hotel53",kind="guesthouse")
   Semi > confirm(name="hamilton lodge") [1.000000]
   User > confirm(name="hamilton lodge")
   Turn 16
   Usr > [('confirm(name="hamilton lodge")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="hotel53",price) [1.000000]
   User > request(name="hotel53",price)
   Turn 17
   Usr > [(u'request(name="hotel53",price)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 18
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -18, suc = 0, turn = 18
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > inform(type="placetostay",stars="4",kind="hotel")
   Turn 2
   Usr > [(u'inform(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="limehouse",price) [1.000000]
   User > request(name="limehouse",price)
   Turn 3
   Usr > [(u'request(name="limehouse",price)', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 4
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > request(kind)
   Semi > request(name="guesthouse89",price) [1.000000]
   User > request(name="guesthouse89",price)
   Turn 7
   Usr > [(u'request(name="guesthouse89",price)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",pricerange="moderate") [1.000000]
   User > inform(="dontcare",pricerange="moderate")
   Turn 2
   Usr > [('inform(="dontcare",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 4
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 6
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 8
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [('affirm()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 3
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4",type="placetostay") [1.000000]
   User > inform(stars="4",type="placetostay")
   Turn 5
   Usr > [(u'inform(stars="4",type="placetostay")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(kind="hotel",pricerange="moderate") [1.000000]
   User > affirm(kind="hotel",pricerange="moderate")
   Turn 6
   Usr > [('affirm(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="hotel82",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 7
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="guesthouse89",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 8
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="hotel92",kind="hotel")
   Semi > confirm(name="guesthouse89") [1.000000]
   User > confirm(name="guesthouse89")
   Turn 9
   Usr > [('confirm(name="guesthouse89")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="guesthouse97",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 10
   Usr > [(u'request(price)', 1.0)]
   Sys > request(stars)
   Semi > request(name="guesthouse97",price) [1.000000]
   User > request(name="guesthouse97",price)
   Turn 11
   Usr > [(u'request(name="guesthouse97",price)', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="moderate",name="guesthouse142",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 12
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="moderate",name="hotel163",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 13
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="guesthouse97",price="guesthouse97price")
   Semi > deny(name="guesthouse97",name="hotel163") [1.000000]
   User > deny(name="guesthouse97",name="hotel163")
   Turn 14
   Usr > [('deny(name="guesthouse97",name="hotel163")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 15
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="moderate",name="hotel165",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 16
   Usr > [(u'request(price)', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 17
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="moderate",name="guesthouse191",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 18
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="hotel193",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 19
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="moderate",name="guesthouse244",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 20
   Usr > [(u'request(price)', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 21
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(name="none",name!="hotel82",name!="guesthouse89",name!="hotel92",name!="guesthouse97",name!="guesthouse142",name!="hotel163",name!="hotel165",name!="guesthouse191",name!="hotel193",name!="guesthouse244",hasparking="dontcare",pricerange="moderate",kind="hotel",stars="4")
   Semi > request(name="guesthouse244",price) [1.000000]
   User > request(name="guesthouse244",price)
   Turn 22
   Usr > [(u'request(name="guesthouse244",price)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="hotel82",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 23
   Usr > [(u'request(price)', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 24
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="guesthouse89",kind="hotel")
   Semi > confirm(name="hotel82") [1.000000]
   User > confirm(name="hotel82")
   Turn 25
   Usr > [('confirm(name="hotel82")', 1.0)]
   Sys > request(kind)
   Semi > request(name="guesthouse89",price) [1.000000]
   User > request(name="guesthouse89",price)
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4",area="north")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 4
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 3
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > request(name="the lensfield hotel",hasinternet) [1.000000]
   User > request(name="the lensfield hotel",hasinternet)
   Turn 8
   Usr > [(u'request(name="the lensfield hotel",hasinternet)', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 9
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="4",pricerange="expensive") [1.000000]
   User > negate(hasparking="dontcare",stars="4",pricerange="expensive")
   Turn 3
   Usr > [('negate(hasparking="dontcare",stars="4",pricerange="expensive")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 3
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 5
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 6
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(kind="hotel",pricerange="expensive") [1.000000]
   User > affirm(kind="hotel",pricerange="expensive")
   Turn 7
   Usr > [('affirm(kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="guesthouse") [1.000000]
   User > inform(="dontcare",kind="guesthouse")
   Turn 3
   Usr > [('inform(="dontcare",kind="guesthouse")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse36",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Saving deepq-network...
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 18:17:52: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 18:17:52: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -2.35 +- 0.84
RESULTS:: 18:17:52: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -2.35 +- 0.84
Average success = 0.00 +- 0.00
RESULTS:: 18:17:52: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 2.55 +- 0.75
RESULTS:: 18:17:52: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 2.55 +- 0.75
*** Evaluating env11-dqn-CH-MLN-00.30: error-rate=0 num-dialogs=100 ***
RESULTS:: 18:17:52: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.30: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.30.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.30
loaded replay size:  2561
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 4
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(pricerange="expensive") [1.000000]
   User > affirm(pricerange="expensive")
   Turn 5
   Usr > [('affirm(pricerange="expensive")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(kind="guesthouse",pricerange="expensive") [1.000000]
   User > affirm(kind="guesthouse",pricerange="expensive")
   Turn 3
   Usr > [('affirm(kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse60",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 3
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 17, suc = 1, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 7
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(kind="guesthouse",pricerange="moderate") [1.000000]
   User > affirm(kind="guesthouse",pricerange="moderate")
   Turn 4
   Usr > [('affirm(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 7
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 18:19:44: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 18:19:44: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.17 +- 0.47
RESULTS:: 18:19:44: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.17 +- 0.47
Average success = 0.00 +- 0.00
RESULTS:: 18:19:44: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.37 +- 0.30
RESULTS:: 18:19:44: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.37 +- 0.30
RESULTS:: 18:19:44: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.30->env11-dqn-CH-MLN-00.31: iter=30, error-rate=0, num-dialogs=100 ***
RESULTS:: 18:19:44: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.30->env11-dqn-CH-MLN-00.31: iter=30, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.30.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.30
loaded replay size:  2561
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 2
   Usr > [('negate(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap",stars="4") [1.000000]
   User > inform(pricerange="cheap",stars="4")
   Turn 2
   Usr > [('inform(pricerange="cheap",stars="4")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",kind="hotel") [1.000000]
   User > negate(hasparking="dontcare",kind="hotel")
   Turn 3
   Usr > [('negate(hasparking="dontcare",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [('affirm()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 3
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 5
   Usr > [('inform(stars="2")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="2",type="placetostay") [1.000000]
   User > inform(stars="2",type="placetostay")
   Turn 6
   Usr > [(u'inform(stars="2",type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 7
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="expensive",name="guesthouse49",kind="guesthouse")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 8
   Usr > [(u'request(postcode)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel",pricerange="expensive") [1.000000]
   User > inform(kind="hotel",pricerange="expensive")
   Turn 3
   Usr > [('inform(kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 4
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(area)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 7
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 9
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 10
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(name="hotel226",price="hotel226price")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="cheap",stars="4") [1.000000]
   User > inform(pricerange="cheap",stars="4")
   Turn 2
   Usr > [('inform(pricerange="cheap",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 2
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 2
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 3
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",type="placetostay",stars="3") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="3")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare",kind="hotel") [1.000000]
   User > inform(hasparking="dontcare",kind="hotel")
   Turn 3
   Usr > [('inform(hasparking="dontcare",kind="hotel")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3",pricerange="expensive") [1.000000]
   User > inform(stars="3",pricerange="expensive")
   Turn 4
   Usr > [('inform(stars="3",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > confirm(name="the lensfield hotel") [1.000000]
   User > confirm(name="the lensfield hotel")
   Turn 6
   Usr > [('confirm(name="the lensfield hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3",kind="guesthouse") [1.000000]
   User > negate(stars="3",kind="guesthouse")
   Turn 3
   Usr > [('negate(stars="3",kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > inform(stars="0",type="placetostay") [1.000000]
   User > inform(stars="0",type="placetostay")
   Turn 2
   Usr > [(u'inform(stars="0",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(name="hotel160",phone="12233600160")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > inform(name="hotel149",addr="hotel149addr")
   Semi > request(hasinternet,postcode) [1.000000]
   User > request(hasinternet,postcode)
   Turn 2
   Usr > [(u'request(hasinternet,postcode)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",stars="3",kind="guesthouse",pricerange="expensive") [1.000000]
   User > negate(area="dontcare",stars="3",kind="guesthouse",pricerange="expensive")
   Turn 2
   Usr > [('negate(area="dontcare",stars="3",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse94",stars="0")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 3
   Usr > [('negate(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(name="hotel91",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
Saving deepq-network...
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 18:22:22: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 18:22:22: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.53 +- 0.29
RESULTS:: 18:22:22: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.53 +- 0.29
Average success = 0.00 +- 0.00
RESULTS:: 18:22:22: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.53 +- 0.29
RESULTS:: 18:22:22: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.53 +- 0.29
*** Evaluating env11-dqn-CH-MLN-00.31: error-rate=0 num-dialogs=100 ***
RESULTS:: 18:22:22: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.31: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.31.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.31
loaded replay size:  2614
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [('affirm()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 7
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 3
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 3
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 17, suc = 1, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="guesthouse") [1.000000]
   User > inform(="dontcare",kind="guesthouse")
   Turn 2
   Usr > [('inform(="dontcare",kind="guesthouse")', 1.0)]
   Sys > reqmore()
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 3
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [('affirm()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [('affirm()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 7
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 2
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="moderate",name="ashley hotel",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse40",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 4
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse61",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 18:24:18: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 18:24:18: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.13 +- 0.45
RESULTS:: 18:24:18: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.13 +- 0.45
Average success = 0.00 +- 0.00
RESULTS:: 18:24:18: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.33 +- 0.28
RESULTS:: 18:24:18: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.33 +- 0.28
RESULTS:: 18:24:18: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.31->env11-dqn-CH-MLN-00.32: iter=31, error-rate=0, num-dialogs=100 ***
RESULTS:: 18:24:18: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.31->env11-dqn-CH-MLN-00.32: iter=31, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.31.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.31
loaded replay size:  2614
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse",type="placetostay") [1.000000]
   User > inform(kind="guesthouse",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="guesthouse",type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 3
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 4
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(stars="3") [1.000000]
   User > affirm(stars="3")
   Turn 6
   Usr > [('affirm(stars="3")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 10
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 12
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 14
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 15
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 16
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > bye() [1.000000]
   User > bye()
   Turn 17
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -17, suc = 0, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(area="dontcare",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > inform(area="dontcare",stars="4",kind="hotel",pricerange="expensive")
   Turn 3
   Usr > [('inform(area="dontcare",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4",area="west")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 5
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse101",phone="12233600101")
   Semi > request(hasinternet,name="guesthouse101") [1.000000]
   User > request(hasinternet,name="guesthouse101")
   Turn 2
   Usr > [(u'request(hasinternet,name="guesthouse101")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > request(kind)
   Semi > request(name="guesthouse101",hasinternet) [1.000000]
   User > request(name="guesthouse101",hasinternet)
   Turn 4
   Usr > [(u'request(name="guesthouse101",hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > reqmore()
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(type="placetostay",kind="guesthouse") [1.000000]
   User > affirm(type="placetostay",kind="guesthouse")
   Turn 5
   Usr > [(u'affirm(type="placetostay",kind="guesthouse")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(pricerange="expensive") [1.000000]
   User > affirm(pricerange="expensive")
   Turn 7
   Usr > [('affirm(pricerange="expensive")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 10
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 2
   Usr > [(u'request(phone)', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 4
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel92",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 5
   Usr > [(u'request(phone)', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 7
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="guesthouse97",kind="hotel")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 8
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="moderate",name="guesthouse142",kind="hotel")
   Semi > confirm(name="guesthouse97") [1.000000]
   User > confirm(name="guesthouse97")
   Turn 9
   Usr > [('confirm(name="guesthouse97")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="3",kind="guesthouse",pricerange="moderate") [1.000000]
   User > affirm(stars="3",kind="guesthouse",pricerange="moderate")
   Turn 2
   Usr > [('affirm(stars="3",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 3
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 13
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 14
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 15
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 16
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 17
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -17, suc = 0, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay",stars="3") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="3")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay",stars="3")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="guesthouse",pricerange="expensive") [1.000000]
   User > affirm(kind="guesthouse",pricerange="expensive")
   Turn 4
   Usr > [('affirm(kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 2
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > request(phone,addr) [1.000000]
   User > request(phone,addr)
   Turn 3
   Usr > [(u'request(phone,addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 2
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 3
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="expensive",type="placetostay",stars="4") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="4")
   Turn 4
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="4")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 5
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(stars="0") [1.000000]
   User > affirm(stars="0")
   Turn 4
   Usr > [('affirm(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap",type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > negate(pricerange="cheap",type="placetostay",stars="4",kind="guesthouse")
   Turn 3
   Usr > [(u'negate(pricerange="cheap",type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="2",type="placetostay",kind="hotel",pricerange="cheap") [1.000000]
   User > inform(stars="2",type="placetostay",kind="hotel",pricerange="cheap")
   Turn 2
   Usr > [(u'inform(stars="2",type="placetostay",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [('affirm()', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse60",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 4
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel62",stars="2")
   Semi > confirm(name="guesthouse60") [1.000000]
   User > confirm(name="guesthouse60")
   Turn 5
   Usr > [('confirm(name="guesthouse60")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse76",stars="2")
   Semi > confirm(name="guesthouse60") [1.000000]
   User > confirm(name="guesthouse60")
   Turn 7
   Usr > [('confirm(name="guesthouse60")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel137",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 8
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse166",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 9
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse176",stars="2")
   Semi > confirm(name="guesthouse166") [1.000000]
   User > confirm(name="guesthouse166")
   Turn 10
   Usr > [('confirm(name="guesthouse166")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse179",stars="2")
   Semi > request(phone,name="guesthouse179") [1.000000]
   User > request(phone,name="guesthouse179")
   Turn 11
   Usr > [(u'request(phone,name="guesthouse179")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse199",stars="2")
   Semi > confirm(name="guesthouse179") [1.000000]
   User > confirm(name="guesthouse179")
   Turn 12
   Usr > [('confirm(name="guesthouse179")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel206",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 13
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel248",stars="2")
   Semi > confirm(name="hotel206") [1.000000]
   User > confirm(name="hotel206")
   Turn 14
   Usr > [('confirm(name="hotel206")', 1.0)]
   Sys > inform(name="none",name!="guesthouse60",name!="hotel62",name!="guesthouse76",name!="hotel137",name!="guesthouse166",name!="guesthouse176",name!="guesthouse179",name!="guesthouse199",name!="hotel206",name!="hotel248",kind="hotel",pricerange="cheap",stars="2")
   Semi > request(name="hotel206",phone) [1.000000]
   User > request(name="hotel206",phone)
   Turn 15
   Usr > [(u'request(name="hotel206",phone)', 1.0)]
   Sys > select(stars="2",stars="0")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 16
   Usr > [('inform(stars="2")', 1.0)]
   Sys > select(stars="2",stars="0")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 17
   Usr > [('inform(stars="2")', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="hotel206",phone) [1.000000]
   User > request(name="hotel206",phone)
   Turn 18
   Usr > [(u'request(name="hotel206",phone)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="hotel206",phone) [1.000000]
   User > request(name="hotel206",phone)
   Turn 19
   Usr > [(u'request(name="hotel206",phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse60",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 20
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel62",stars="2")
   Semi > confirm(name="guesthouse60") [1.000000]
   User > confirm(name="guesthouse60")
   Turn 21
   Usr > [('confirm(name="guesthouse60")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse76",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 22
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel137",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 23
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse166",stars="2")
   Semi > confirm(name="hotel137") [1.000000]
   User > confirm(name="hotel137")
   Turn 24
   Usr > [('confirm(name="hotel137")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse176",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 25
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse179",stars="2")
   Semi > confirm(name="guesthouse176") [1.000000]
   User > confirm(name="guesthouse176")
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="4",kind="hotel") [1.000000]
   User > negate(hasparking="dontcare",stars="4",kind="hotel")
   Turn 2
   Usr > [('negate(hasparking="dontcare",stars="4",kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="huntingdon marriott hotel",kind="hotel")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="hotel82",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="hotel82",kind="hotel")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 6
   Usr > [(u'request(addr)', 1.0)]
   Sys > reqmore()
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 7
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="guesthouse89",kind="hotel")
   Semi > confirm(name="hotel82") [1.000000]
   User > confirm(name="hotel82")
   Turn 8
   Usr > [('confirm(name="hotel82")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="hotel92",kind="hotel")
   Semi > confirm(name="hotel82") [1.000000]
   User > confirm(name="hotel82")
   Turn 9
   Usr > [('confirm(name="hotel82")', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="hotel92",addr) [1.000000]
   User > request(name="hotel92",addr)
   Turn 10
   Usr > [(u'request(name="hotel92",addr)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="guesthouse97",kind="hotel")
   Semi > confirm(name="hotel82") [1.000000]
   User > confirm(name="hotel82")
   Turn 11
   Usr > [('confirm(name="hotel82")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="moderate",name="guesthouse142",kind="hotel")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 12
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="moderate",name="hotel163",kind="hotel")
   Semi > confirm(name="guesthouse142") [1.000000]
   User > confirm(name="guesthouse142")
   Turn 13
   Usr > [('confirm(name="guesthouse142")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="moderate",name="hotel165",kind="hotel")
   Semi > confirm(name="guesthouse142") [1.000000]
   User > confirm(name="guesthouse142")
   Turn 14
   Usr > [('confirm(name="guesthouse142")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="moderate",name="guesthouse191",kind="hotel")
   Semi > confirm(name="guesthouse142") [1.000000]
   User > confirm(name="guesthouse142")
   Turn 15
   Usr > [('confirm(name="guesthouse142")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 16
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",name="hotel193",area="west",kind="hotel",pricerange="moderate",stars="4")
   Semi > confirm(name="guesthouse142") [1.000000]
   User > confirm(name="guesthouse142")
   Turn 17
   Usr > [('confirm(name="guesthouse142")', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse244",area="north",kind="hotel",pricerange="moderate",stars="4")
   Semi > confirm(name="guesthouse142") [1.000000]
   User > confirm(name="guesthouse142")
   Turn 18
   Usr > [('confirm(name="guesthouse142")', 1.0)]
   Sys > inform(name="none",name!="hotel82",name!="guesthouse89",name!="hotel92",name!="guesthouse97",name!="guesthouse142",name!="hotel163",name!="hotel165",name!="guesthouse191",name!="hotel193",name!="guesthouse244",hasparking="dontcare",pricerange="moderate",kind="hotel",stars="4",area="dontcare")
   Semi > request(name="guesthouse142",addr) [1.000000]
   User > request(name="guesthouse142",addr)
   Turn 19
   Usr > [(u'request(name="guesthouse142",addr)', 1.0)]
   Sys > inform(hasparking="1",name="hotel82",area="north",kind="hotel",pricerange="moderate",stars="4")
   Semi > confirm(name="guesthouse142") [1.000000]
   User > confirm(name="guesthouse142")
   Turn 20
   Usr > [('confirm(name="guesthouse142")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 21
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse89",area="east",kind="hotel",pricerange="moderate",stars="4")
   Semi > confirm(name="guesthouse142") [1.000000]
   User > confirm(name="guesthouse142")
   Turn 22
   Usr > [('confirm(name="guesthouse142")', 1.0)]
   Sys > inform(hasparking="1",name="hotel92",area="south",kind="hotel",pricerange="moderate",stars="4")
   Semi > confirm(name="guesthouse142") [1.000000]
   User > confirm(name="guesthouse142")
   Turn 23
   Usr > [('confirm(name="guesthouse142")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse97",area="centre",kind="hotel",pricerange="moderate",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 24
   Usr > [(u'request(addr)', 1.0)]
   Sys > request(area)
   Semi > request(name="guesthouse97",addr) [1.000000]
   User > request(name="guesthouse97",addr)
   Turn 25
   Usr > [(u'request(name="guesthouse97",addr)', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="0") [1.000000]
   User > affirm(type="placetostay",stars="0")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="0")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 3
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 6
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 4
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",stars="4",kind="hotel",pricerange="cheap") [1.000000]
   User > negate(area="dontcare",stars="4",kind="hotel",pricerange="cheap")
   Turn 2
   Usr > [('negate(area="dontcare",stars="4",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > inform(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 2
   Usr > [(u'inform(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 3
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",pricerange="moderate") [1.000000]
   User > inform(kind="hotel",pricerange="moderate")
   Turn 3
   Usr > [('inform(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="moderate",name="ashley hotel",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 3
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 4
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(kind="guesthouse",pricerange="moderate") [1.000000]
   User > affirm(kind="guesthouse",pricerange="moderate")
   Turn 5
   Usr > [('affirm(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 7
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 8
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 9
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 10
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 11
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 12
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(stars)
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="0") [1.000000]
   User > affirm(stars="0")
   Turn 2
   Usr > [('affirm(stars="0")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 4
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="cityroomz",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 6
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse41",area="west",kind="hotel",pricerange="moderate",stars="0")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 9
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse46",area="north",kind="hotel",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",name="hotel68",area="west",kind="hotel",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse80",area="north",kind="hotel",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="hotel81",area="east",kind="hotel",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse88",area="south",kind="hotel",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",name="hotel170",area="east",kind="hotel",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse186",area="south",kind="hotel",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="hotel235",area="centre",kind="hotel",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="none",name!="cityroomz",name!="guesthouse41",name!="guesthouse46",name!="hotel68",name!="guesthouse80",name!="hotel81",name!="guesthouse88",name!="hotel170",name!="guesthouse186",name!="hotel235",hasparking="dontcare",pricerange="moderate",kind="hotel",stars="0",area="dontcare")
   Semi > request(name="guesthouse41",phone) [1.000000]
   User > request(name="guesthouse41",phone)
   Turn 18
   Usr > [(u'request(name="guesthouse41",phone)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -18, suc = 0, turn = 18
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="3") [1.000000]
   User > affirm(stars="3")
   Turn 2
   Usr > [('affirm(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(kind="guesthouse") [1.000000]
   User > affirm(kind="guesthouse")
   Turn 5
   Usr > [('affirm(kind="guesthouse")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 2
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="lovell lodge",price) [1.000000]
   User > request(name="lovell lodge",price)
   Turn 4
   Usr > [(u'request(name="lovell lodge",price)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="3") [1.000000]
   User > affirm(stars="3")
   Turn 2
   Usr > [('affirm(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(kind="guesthouse",pricerange="moderate") [1.000000]
   User > affirm(kind="guesthouse",pricerange="moderate")
   Turn 4
   Usr > [('affirm(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 7
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 9
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 10
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 11
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(kind)
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 3
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="limehouse",hasinternet) [1.000000]
   User > request(name="limehouse",hasinternet)
   Turn 4
   Usr > [(u'request(name="limehouse",hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4",type="placetostay") [1.000000]
   User > inform(stars="4",type="placetostay")
   Turn 3
   Usr > [(u'inform(stars="4",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 4
   Usr > [(u'request(postcode)', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="0",kind="hotel",pricerange="moderate") [1.000000]
   User > affirm(type="placetostay",stars="0",kind="hotel",pricerange="moderate")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="0",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="cityroomz",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 4
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse41",stars="0")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 5
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse46",stars="0")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 6
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel68",stars="0")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 7
   Usr > [(u'request(addr)', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="hotel68",addr) [1.000000]
   User > request(name="hotel68",addr)
   Turn 8
   Usr > [(u'request(name="hotel68",addr)', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="hotel68",addr) [1.000000]
   User > request(name="hotel68",addr)
   Turn 9
   Usr > [(u'request(name="hotel68",addr)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse80",stars="0")
   Semi > confirm(name="hotel68") [1.000000]
   User > confirm(name="hotel68")
   Turn 10
   Usr > [('confirm(name="hotel68")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse80",stars="0")
   Semi > confirm(name="hotel68") [1.000000]
   User > confirm(name="hotel68")
   Turn 12
   Usr > [('confirm(name="hotel68")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse80",stars="0")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 14
   Usr > [(u'request(addr)', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 15
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse80",kind="hotel")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 16
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse80",kind="hotel")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 17
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse80",kind="hotel")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 18
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse80",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 19
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -19, suc = 0, turn = 19
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="0") [1.000000]
   User > affirm(type="placetostay",stars="0")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="0")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 3
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",kind="guesthouse") [1.000000]
   User > inform(="dontcare",kind="guesthouse")
   Turn 5
   Usr > [('inform(="dontcare",kind="guesthouse")', 1.0)]
   Sys > reqmore()
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse42",area="centre",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 7
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse74",area="centre",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 8
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(hasparking="0",name="hotel78",area="north",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > confirm(name="guesthouse74") [1.000000]
   User > confirm(name="guesthouse74")
   Turn 9
   Usr > [('confirm(name="guesthouse74")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 16
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 17
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 18
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -18, suc = 0, turn = 18
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 2
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 4
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 14
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="kirkwood house",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="kirkwood house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="acorn guest house",stars="4")
   Semi > confirm(name="kirkwood house") [1.000000]
   User > confirm(name="kirkwood house")
   Turn 9
   Usr > [('confirm(name="kirkwood house")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 10
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="a and b guest house",stars="4",area="east")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 11
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 13
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="arbury lodge guesthouse",stars="4",area="north")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 15
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="archway house",stars="4",area="north")
   Semi > confirm(name="a and b guest house") [1.000000]
   User > confirm(name="a and b guest house")
   Turn 16
   Usr > [('confirm(name="a and b guest house")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="avalon",stars="4",area="north")
   Semi > confirm(name="a and b guest house") [1.000000]
   User > confirm(name="a and b guest house")
   Turn 17
   Usr > [('confirm(name="a and b guest house")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="aylesbray lodge guest house",stars="4",area="south")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 18
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="carolina bed and breakfast",stars="4",area="east")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 19
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="warkworth house",stars="4",area="east")
   Semi > confirm(name="aylesbray lodge guest house") [1.000000]
   User > confirm(name="aylesbray lodge guest house")
   Turn 20
   Usr > [('confirm(name="aylesbray lodge guest house")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="guesthouse65",stars="4",area="west")
   Semi > confirm(name="aylesbray lodge guest house") [1.000000]
   User > confirm(name="aylesbray lodge guest house")
   Turn 21
   Usr > [('confirm(name="aylesbray lodge guest house")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 22
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",name="hotel82",area="north",kind="hotel",pricerange="moderate",stars="4")
   Semi > confirm(name="aylesbray lodge guest house") [1.000000]
   User > confirm(name="aylesbray lodge guest house")
   Turn 23
   Usr > [('confirm(name="aylesbray lodge guest house")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse89",area="east",kind="hotel",pricerange="moderate",stars="4")
   Semi > confirm(name="aylesbray lodge guest house") [1.000000]
   User > confirm(name="aylesbray lodge guest house")
   Turn 24
   Usr > [('confirm(name="aylesbray lodge guest house")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 25
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",name="hotel92",area="south",kind="hotel",pricerange="moderate",stars="4")
   Semi > confirm(name="aylesbray lodge guest house") [1.000000]
   User > confirm(name="aylesbray lodge guest house")
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare",stars="4") [1.000000]
   User > inform(hasparking="dontcare",stars="4")
   Turn 3
   Usr > [('inform(hasparking="dontcare",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse40",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel64",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel69",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel112",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel152",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 3
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 5
   Usr > [('negate(stars="3")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="gonville hotel",stars="3")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 7
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="hotel59",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="guesthouse63",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="hotel86",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="expensive",name="hotel96",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="guesthouse99",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 14
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="expensive",name="hotel100",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="expensive",name="guesthouse157",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="expensive",name="hotel172",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="expensive",name="guesthouse187",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="guesthouse204",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 19
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="none",name!="the lensfield hotel",name!="gonville hotel",name!="hotel59",name!="hotel86",name!="hotel96",name!="hotel100",name!="guesthouse157",name!="hotel172",name!="guesthouse187",name!="guesthouse204",hasparking="dontcare",pricerange="expensive",kind="hotel",stars="3")
   Semi > request(name="gonville hotel",hasinternet) [1.000000]
   User > request(name="gonville hotel",hasinternet)
   Turn 20
   Usr > [(u'request(name="gonville hotel",hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -20, suc = 0, turn = 20
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="hotel68",area="west")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 5
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel92",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse97",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse142",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 4
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 5
   Usr > [(u'request(addr)', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse73",stars="4")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 7
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay") [1.000000]
   User > negate(area="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(area="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 3
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 4
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Saving deepq-network...
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 18:28:45: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 18:28:45: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -4.21 +- 1.23
RESULTS:: 18:28:45: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -4.21 +- 1.23
Average success = 2.00 +- 2.78
RESULTS:: 18:28:45: root                               EvaluationManager.py <_prstr>207 :  Average success = 2.00 +- 2.78
Average turns   = 4.41 +- 1.18
RESULTS:: 18:28:45: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 4.41 +- 1.18
*** Evaluating env11-dqn-CH-MLN-00.32: error-rate=0 num-dialogs=100 ***
RESULTS:: 18:28:45: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.32: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.32.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.32
loaded replay size:  2955
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > request(phone,hasinternet) [1.000000]
   User > request(phone,hasinternet)
   Turn 3
   Usr > [(u'request(phone,hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse40",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel64",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel69",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel112",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel152",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel156",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel160",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel168",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse214",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="none",name!="lovell lodge",name!="ashley hotel",name!="guesthouse40",name!="hotel64",name!="hotel69",name!="hotel112",name!="hotel152",name!="hotel156",name!="hotel160",name!="hotel168",name!="guesthouse214",kind="hotel",pricerange="moderate",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 13
   Usr > [('ack()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(kind="guesthouse") [1.000000]
   User > affirm(kind="guesthouse")
   Turn 7
   Usr > [('affirm(kind="guesthouse")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 3
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 18:30:41: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 18:30:41: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.29 +- 0.31
RESULTS:: 18:30:41: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.29 +- 0.31
Average success = 0.00 +- 0.00
RESULTS:: 18:30:41: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.29 +- 0.31
RESULTS:: 18:30:41: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.29 +- 0.31
RESULTS:: 18:30:41: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.32->env11-dqn-CH-MLN-00.33: iter=32, error-rate=0, num-dialogs=100 ***
RESULTS:: 18:30:41: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.32->env11-dqn-CH-MLN-00.33: iter=32, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.32.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.32
loaded replay size:  2955
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 3
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 4
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="cheap",name="hotel50",kind="hotel")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 6
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="cheap",name="hotel50",kind="hotel")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 7
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="cheap",name="hotel50",kind="hotel")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="cheap",name="hotel50",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 10
   Usr > [('ack()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 2
   Usr > [('negate(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 3
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap",stars="4",kind="hotel") [1.000000]
   User > inform(pricerange="cheap",stars="4",kind="hotel")
   Turn 2
   Usr > [('inform(pricerange="cheap",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(stars="0",kind="guesthouse") [1.000000]
   User > affirm(stars="0",kind="guesthouse")
   Turn 4
   Usr > [('affirm(stars="0",kind="guesthouse")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse",pricerange="moderate") [1.000000]
   User > inform(kind="guesthouse",pricerange="moderate")
   Turn 5
   Usr > [('inform(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="cheap",type="placetostay") [1.000000]
   User > inform(pricerange="cheap",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="4") [1.000000]
   User > inform(pricerange="expensive",stars="4")
   Turn 2
   Usr > [('inform(pricerange="expensive",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 3
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(type="placetostay",stars="0") [1.000000]
   User > affirm(type="placetostay",stars="0")
   Turn 4
   Usr > [(u'affirm(type="placetostay",stars="0")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 6
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 4
   Usr > [('negate(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 7
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 10
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 3
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0",pricerange="moderate") [1.000000]
   User > inform(stars="0",pricerange="moderate")
   Turn 5
   Usr > [('inform(stars="0",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > request(price,postcode) [1.000000]
   User > request(price,postcode)
   Turn 11
   Usr > [(u'request(price,postcode)', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 14
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(kind)
   Semi > request(name="guesthouse42",price) [1.000000]
   User > request(name="guesthouse42",price)
   Turn 15
   Usr > [(u'request(name="guesthouse42",price)', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 16
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 17
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 18
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 19
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -19, suc = 0, turn = 19
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 2
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 5
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(kind="guesthouse",pricerange="moderate") [1.000000]
   User > affirm(kind="guesthouse",pricerange="moderate")
   Turn 8
   Usr > [('affirm(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 9
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 10
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > reqalts(stars="4") [1.000000]
   User > reqalts(stars="4")
   Turn 12
   Usr > [(u'reqalts(stars="4")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 13
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 14
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 15
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -16, suc = 0, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel",type="placetostay",stars="3",pricerange="expensive") [1.000000]
   User > inform(kind="hotel",type="placetostay",stars="3",pricerange="expensive")
   Turn 2
   Usr > [(u'inform(kind="hotel",type="placetostay",stars="3",pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 3
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 6
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 7
   Usr > [('inform(stars="0")', 1.0)]
   Sys > select(stars="0",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 8
   Usr > [('inform(stars="0")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 9
   Usr > [('inform(stars="0")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(stars="2") [1.000000]
   User > confirm(stars="2")
   Turn 2
   Usr > [('confirm(stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive",kind="guesthouse") [1.000000]
   User > inform(pricerange="expensive",kind="guesthouse")
   Turn 3
   Usr > [('inform(pricerange="expensive",kind="guesthouse")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > negate(stars="2") [1.000000]
   User > negate(stars="2")
   Turn 4
   Usr > [('negate(stars="2")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 2
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="4") [1.000000]
   User > inform(="dontcare",stars="4")
   Turn 2
   Usr > [('inform(="dontcare",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [('affirm()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 3
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(kind)
   Semi > request(name="lovell lodge",phone) [1.000000]
   User > request(name="lovell lodge",phone)
   Turn 3
   Usr > [(u'request(name="lovell lodge",phone)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",stars="3") [1.000000]
   User > inform(kind="hotel",stars="3")
   Turn 2
   Usr > [('inform(kind="hotel",stars="3")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 16, suc = 1, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare",stars="3",kind="guesthouse") [1.000000]
   User > inform(hasparking="dontcare",stars="3",kind="guesthouse")
   Turn 4
   Usr > [('inform(hasparking="dontcare",stars="3",kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 5
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 13
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 15
   Usr > [(u'request(phone)', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 16
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 17
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 18
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 19
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 20
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -20, suc = 0, turn = 20
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",pricerange="moderate") [1.000000]
   User > negate(area="dontcare",pricerange="moderate")
   Turn 2
   Usr > [('negate(area="dontcare",pricerange="moderate")', 1.0)]
   Sys > inform(name="guesthouse203",addr="guesthouse203addr")
   Semi > reqalts(kind="guesthouse") [1.000000]
   User > reqalts(kind="guesthouse")
   Turn 3
   Usr > [(u'reqalts(kind="guesthouse")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay",stars="3") [1.000000]
   User > negate(area="dontcare",type="placetostay",stars="3")
   Turn 2
   Usr > [(u'negate(area="dontcare",type="placetostay",stars="3")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",kind="guesthouse") [1.000000]
   User > inform(="dontcare",kind="guesthouse")
   Turn 3
   Usr > [('inform(="dontcare",kind="guesthouse")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 5
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="1")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(name="guesthouse85",phone="1223360085")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 8
   Usr > [(u'request(postcode)', 1.0)]
   Sys > request(stars)
   Semi > request(name="guesthouse85",postcode) [1.000000]
   User > request(name="guesthouse85",postcode)
   Turn 9
   Usr > [(u'request(name="guesthouse85",postcode)', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 15
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",pricerange="moderate") [1.000000]
   User > inform(="dontcare",pricerange="moderate")
   Turn 3
   Usr > [('inform(="dontcare",pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="ashley hotel",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse40",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="guesthouse") [1.000000]
   User > inform(="dontcare",kind="guesthouse")
   Turn 3
   Usr > [('inform(="dontcare",kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="hotel") [1.000000]
   User > inform(="dontcare",kind="hotel")
   Turn 2
   Usr > [('inform(="dontcare",kind="hotel")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm(pricerange="expensive") [1.000000]
   User > affirm(pricerange="expensive")
   Turn 3
   Usr > [('affirm(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 2
   Usr > [('negate(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3",type="placetostay",kind="guesthouse",pricerange="expensive") [1.000000]
   User > inform(stars="3",type="placetostay",kind="guesthouse",pricerange="expensive")
   Turn 3
   Usr > [(u'inform(stars="3",type="placetostay",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 4
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="guesthouse63",kind="guesthouse")
   Semi > reqalts(hasparking="dontcare") [1.000000]
   User > reqalts(hasparking="dontcare")
   Turn 7
   Usr > [('reqalts(hasparking="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 8
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(pricerange="expensive") [1.000000]
   User > affirm(pricerange="expensive")
   Turn 5
   Usr > [('affirm(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts(pricerange="dontcare") [1.000000]
   User > reqalts(pricerange="dontcare")
   Turn 3
   Usr > [('reqalts(pricerange="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Saving deepq-network...
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 18:34:13: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 18:34:13: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -2.58 +- 0.94
RESULTS:: 18:34:13: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -2.58 +- 0.94
Average success = 1.00 +- 1.97
RESULTS:: 18:34:13: root                               EvaluationManager.py <_prstr>207 :  Average success = 1.00 +- 1.97
Average turns   = 2.98 +- 0.79
RESULTS:: 18:34:13: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 2.98 +- 0.79
*** Evaluating env11-dqn-CH-MLN-00.33: error-rate=0 num-dialogs=100 ***
RESULTS:: 18:34:13: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.33: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.33.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.33
loaded replay size:  3153
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 4
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 5
   Usr > [(u'request(price)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 3
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="guesthouse") [1.000000]
   User > inform(="dontcare",kind="guesthouse")
   Turn 3
   Usr > [('inform(="dontcare",kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(kind="guesthouse",pricerange="moderate") [1.000000]
   User > affirm(kind="guesthouse",pricerange="moderate")
   Turn 5
   Usr > [('affirm(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 6
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 18:36:11: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 18:36:11: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.27 +- 0.27
RESULTS:: 18:36:11: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.27 +- 0.27
Average success = 0.00 +- 0.00
RESULTS:: 18:36:11: root                               EvaluationManager.py <_prstr>207 :  Average success = 0.00 +- 0.00
Average turns   = 1.27 +- 0.27
RESULTS:: 18:36:11: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.27 +- 0.27
RESULTS:: 18:36:11: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.33->env11-dqn-CH-MLN-00.34: iter=33, error-rate=0, num-dialogs=100 ***
RESULTS:: 18:36:11: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.33->env11-dqn-CH-MLN-00.34: iter=33, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.33.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.33
loaded replay size:  3153
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",pricerange="moderate") [1.000000]
   User > inform(="dontcare",pricerange="moderate")
   Turn 5
   Usr > [('inform(="dontcare",pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 6
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 4
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="the cambridge belfry",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 7
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="the cambridge belfry",kind="hotel")
   Semi > negate(pricerange="expensive",stars="4") [1.000000]
   User > negate(pricerange="expensive",stars="4")
   Turn 8
   Usr > [(u'negate(pricerange="expensive",stars="4")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="hotel",pricerange="cheap") [1.000000]
   User > inform(="dontcare",kind="hotel",pricerange="cheap")
   Turn 2
   Usr > [('inform(="dontcare",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="cheap",name="hotel50",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="cheap",name="hotel50",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(name="hotel50",hasinternet="1")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 7
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(kind)
   Semi > request(name="cityroomz",postcode) [1.000000]
   User > request(name="cityroomz",postcode)
   Turn 5
   Usr > [(u'request(name="cityroomz",postcode)', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="cityroomz",postcode) [1.000000]
   User > request(name="cityroomz",postcode)
   Turn 6
   Usr > [(u'request(name="cityroomz",postcode)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > negate(stars="0",kind="hotel",pricerange="cheap") [1.000000]
   User > negate(stars="0",kind="hotel",pricerange="cheap")
   Turn 3
   Usr > [('negate(stars="0",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",type="placetostay",stars="4") [1.000000]
   User > negate(pricerange="expensive",type="placetostay",stars="4")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay",stars="4")', 1.0)]
   Sys > inform(name="guesthouse118",hasinternet="1")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 3
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > reqalts(stars="dontcare") [1.000000]
   User > reqalts(stars="dontcare")
   Turn 5
   Usr > [('reqalts(stars="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 2
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="guesthouse195",price="guesthouse195price")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse195",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 3
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 4
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 5
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 6
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 3
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="hotel82",kind="hotel")
   Semi > inform(stars="4",pricerange="moderate") [1.000000]
   User > inform(stars="4",pricerange="moderate")
   Turn 5
   Usr > [('inform(stars="4",pricerange="moderate")', 1.0)]
   Sys > request(area)
   Semi > request(name="hotel82",price) [1.000000]
   User > request(name="hotel82",price)
   Turn 6
   Usr > [(u'request(name="hotel82",price)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="hotel82",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 7
   Usr > [(u'request(price)', 1.0)]
   Sys > reqmore()
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 8
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="hotel82",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 9
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="hotel82",price="hotel82price",hasinternet="1")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 10
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="hotel82",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(stars="2") [1.000000]
   User > confirm(stars="2")
   Turn 3
   Usr > [('confirm(stars="2")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",stars="4",kind="hotel") [1.000000]
   User > negate(pricerange="expensive",stars="4",kind="hotel")
   Turn 2
   Usr > [('negate(pricerange="expensive",stars="4",kind="hotel")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 3
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="huntingdon marriott hotel",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="university arms hotel",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="university arms hotel",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="university arms hotel",kind="hotel")
   Semi > request(price,addr) [1.000000]
   User > request(price,addr)
   Turn 7
   Usr > [(u'request(price,addr)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="university arms hotel",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 8
   Usr > [(u'request(price)', 1.0)]
   Sys > request(stars)
   Semi > request(name="university arms hotel",price) [1.000000]
   User > request(name="university arms hotel",price)
   Turn 9
   Usr > [(u'request(name="university arms hotel",price)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="university arms hotel",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 10
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="university arms hotel",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 11
   Usr > [('ack()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay") [1.000000]
   User > negate(area="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'negate(area="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4",type="placetostay",kind="hotel",pricerange="expensive") [1.000000]
   User > inform(stars="4",type="placetostay",kind="hotel",pricerange="expensive")
   Turn 4
   Usr > [(u'inform(stars="4",type="placetostay",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 2
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 3
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(type="placetostay",stars="4") [1.000000]
   User > inform(type="placetostay",stars="4")
   Turn 7
   Usr > [(u'inform(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 8
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4",area="east")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="hotel33",stars="0")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="hotel120",stars="0")
   Semi > confirm(name="hotel33") [1.000000]
   User > confirm(name="hotel33")
   Turn 4
   Usr > [('confirm(name="hotel33")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 2
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",type="placetostay") [1.000000]
   User > negate(pricerange="expensive",type="placetostay")
   Turn 3
   Usr > [(u'negate(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 4
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare",stars="4",kind="guesthouse") [1.000000]
   User > inform(hasparking="dontcare",stars="4",kind="guesthouse")
   Turn 4
   Usr > [('inform(hasparking="dontcare",stars="4",kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="leverton house",kind="guesthouse")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="leverton house",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 3
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 5
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 9
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > request(area)
   Semi > request(name="huntingdon marriott hotel",hasinternet) [1.000000]
   User > request(name="huntingdon marriott hotel",hasinternet)
   Turn 10
   Usr > [(u'request(name="huntingdon marriott hotel",hasinternet)', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 11
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > negate(stars="2") [1.000000]
   User > negate(stars="2")
   Turn 3
   Usr > [('negate(stars="2")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="guesthouse37",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="cheap",name="guesthouse37",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="cheap",name="guesthouse37",stars="2")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 7
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="cheap",name="guesthouse37",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 8
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="cheap",name="guesthouse37",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 5
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="3") [1.000000]
   User > affirm(stars="3")
   Turn 2
   Usr > [('affirm(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse",pricerange="moderate") [1.000000]
   User > inform(kind="guesthouse",pricerange="moderate")
   Turn 4
   Usr > [('inform(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 15
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 3
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 5
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse49",stars="2",area="west")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse49",stars="2",area="west")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 7
   Usr > [('inform(stars="2")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse49",stars="2",area="west")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 4
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",pricerange="moderate") [1.000000]
   User > negate(area="dontcare",pricerange="moderate")
   Turn 5
   Usr > [('negate(area="dontcare",pricerange="moderate")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay",stars="0",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="0",kind="hotel")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse",type="placetostay") [1.000000]
   User > inform(kind="guesthouse",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="guesthouse",type="placetostay")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="3",pricerange="moderate") [1.000000]
   User > inform(stars="3",pricerange="moderate")
   Turn 3
   Usr > [('inform(stars="3",pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 5
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > request(price,postcode) [1.000000]
   User > request(price,postcode)
   Turn 7
   Usr > [(u'request(price,postcode)', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 13
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 14
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 15
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 4
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 6
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 7
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 8
   Usr > [(u'request(phone)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > request(kind)
   Semi > request(name="limehouse",addr) [1.000000]
   User > request(name="limehouse",addr)
   Turn 4
   Usr > [(u'request(name="limehouse",addr)', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 9
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="limehouse",addr) [1.000000]
   User > request(name="limehouse",addr)
   Turn 10
   Usr > [(u'request(name="limehouse",addr)', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 12
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="limehouse",addr) [1.000000]
   User > request(name="limehouse",addr)
   Turn 13
   Usr > [(u'request(name="limehouse",addr)', 1.0)]
   Sys > request(area)
   Semi > request(name="limehouse",addr) [1.000000]
   User > request(name="limehouse",addr)
   Turn 14
   Usr > [(u'request(name="limehouse",addr)', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 15
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 16
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 17
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 18
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -18, suc = 0, turn = 18
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="2",type="placetostay",kind="hotel") [1.000000]
   User > negate(stars="2",type="placetostay",kind="hotel")
   Turn 3
   Usr > [(u'negate(stars="2",type="placetostay",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 6
   Usr > [(u'deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="2",pricerange="moderate",name="guesthouse61",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 4
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(pricerange="expensive") [1.000000]
   User > affirm(pricerange="expensive")
   Turn 6
   Usr > [('affirm(pricerange="expensive")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 7
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="the lensfield hotel",stars="3",area="south")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 13
   Usr > [(u'request(price)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 2
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 16, suc = 1, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 3
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(stars="3",pricerange="moderate") [1.000000]
   User > affirm(stars="3",pricerange="moderate")
   Turn 6
   Usr > [('affirm(stars="3",pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 7
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 11
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 12
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 13
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",name="alpha-milton guest house",area="north",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 14
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 16
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > request(stars)
   Semi > request(name="alpha-milton guest house",hasinternet) [1.000000]
   User > request(name="alpha-milton guest house",hasinternet)
   Turn 17
   Usr > [(u'request(name="alpha-milton guest house",hasinternet)', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 18
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 19
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 20
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 21
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -21, suc = 0, turn = 21
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 2
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",type="placetostay",stars="3",kind="guesthouse")
   Turn 6
   Usr > [(u'inform(pricerange="moderate",type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 7
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 10
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4",pricerange="expensive") [1.000000]
   User > inform(stars="4",pricerange="expensive")
   Turn 6
   Usr > [('inform(stars="4",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 8
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 9
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 10
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 11
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 12
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 6
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 7
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare",type="placetostay") [1.000000]
   User > inform(hasparking="dontcare",type="placetostay")
   Turn 8
   Usr > [(u'inform(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > inform(stars="3",kind="hotel") [1.000000]
   User > inform(stars="3",kind="hotel")
   Turn 9
   Usr > [('inform(stars="3",kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 11
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 12
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > inform(type="placetostay",stars="4",kind="hotel")
   Turn 3
   Usr > [(u'inform(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="huntingdon marriott hotel",phone) [1.000000]
   User > request(name="huntingdon marriott hotel",phone)
   Turn 4
   Usr > [(u'request(name="huntingdon marriott hotel",phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 5
   Usr > [(u'request(phone)', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",pricerange="expensive") [1.000000]
   User > negate(area="dontcare",pricerange="expensive")
   Turn 6
   Usr > [('negate(area="dontcare",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 4
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 5
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 7
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 8
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 3
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 4
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="cityroomz",kind="hotel")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 9
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 10
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 11
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 12
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="cityroomz",stars="0",area="centre")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 13
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="cityroomz",hasinternet) [1.000000]
   User > request(name="cityroomz",hasinternet)
   Turn 14
   Usr > [(u'request(name="cityroomz",hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 4
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="hotel82",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="guesthouse89",kind="hotel")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 8
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="guesthouse89",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="hotel33",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="hotel33",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="hotel120",stars="0")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 3
   Usr > [('negate(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 5
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 6
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3",kind="guesthouse") [1.000000]
   User > inform(stars="3",kind="guesthouse")
   Turn 9
   Usr > [('inform(stars="3",kind="guesthouse")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 12
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm(pricerange="expensive") [1.000000]
   User > affirm(pricerange="expensive")
   Turn 2
   Usr > [('affirm(pricerange="expensive")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 3
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(stars="2") [1.000000]
   User > confirm(stars="2")
   Turn 4
   Usr > [('confirm(stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="ashley hotel",stars="2")
   Semi > request(addr,name="ashley hotel") [1.000000]
   User > request(addr,name="ashley hotel")
   Turn 5
   Usr > [(u'request(addr,name="ashley hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse40",stars="2")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 6
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse61",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel64",stars="2")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 8
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel69",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 10
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse84",stars="2")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 11
   Usr > [(u'request(addr)', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel90",stars="2")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 13
   Usr > [(u'request(addr)', 1.0)]
   Sys > request(area)
   Semi > request(name="hotel90",addr) [1.000000]
   User > request(name="hotel90",addr)
   Turn 14
   Usr > [(u'request(name="hotel90",addr)', 1.0)]
   Sys > reqmore()
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 15
   Usr > [(u'request(addr)', 1.0)]
   Sys > request(area)
   Semi > request(name="hotel90",addr) [1.000000]
   User > request(name="hotel90",addr)
   Turn 16
   Usr > [(u'request(name="hotel90",addr)', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 17
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 18
   Usr > [(u'inform(area="north")', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel112",stars="2",area="north")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 19
   Usr > [(u'request(addr)', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 20
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse136",stars="2",area="north")
   Semi > ack() [1.000000]
   User > ack()
   Turn 21
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel90",kind="guesthouse",addr="hotel90addr")
   Semi > negate(name="guesthouse136") [1.000000]
   User > negate(name="guesthouse136")
   Turn 22
   Usr > [('negate(name="guesthouse136")', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel230",stars="2",area="north")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 23
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="none",name!="lovell lodge",name!="ashley hotel",name!="hotel112",name!="guesthouse136",name!="hotel230",pricerange="moderate",stars="2",area="north")
   Semi > request(name="guesthouse136",addr) [1.000000]
   User > request(name="guesthouse136",addr)
   Turn 24
   Usr > [(u'request(name="guesthouse136",addr)', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel230",stars="2",area="north")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 25
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel230",stars="2",area="north")
   Semi > ack() [1.000000]
   User > ack()
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4",area="north")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3",area="west")
   Semi > reqalts(pricerange="dontcare") [1.000000]
   User > reqalts(pricerange="dontcare")
   Turn 4
   Usr > [('reqalts(pricerange="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > deny(pricerange="expensive",pricerange="moderate") [1.000000]
   User > deny(pricerange="expensive",pricerange="moderate")
   Turn 2
   Usr > [('deny(pricerange="expensive",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 4
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel92",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse97",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse142",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 10
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse142",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel163",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel165",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse191",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 15
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel193",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse244",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="none",name!="hotel82",name!="guesthouse89",name!="hotel92",name!="guesthouse97",name!="guesthouse142",name!="hotel163",name!="hotel165",name!="guesthouse191",name!="hotel193",name!="guesthouse244",kind="hotel",pricerange="moderate",stars="4")
   Semi > request(name="guesthouse89",hasinternet) [1.000000]
   User > request(name="guesthouse89",hasinternet)
   Turn 18
   Usr > [(u'request(name="guesthouse89",hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse244",stars="4")
   Semi > request(hasinternet,name="guesthouse244") [1.000000]
   User > request(hasinternet,name="guesthouse244")
   Turn 19
   Usr > [(u'request(hasinternet,name="guesthouse244")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 20
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse244",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 21
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 22
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse244",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 23
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse244",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 24
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse244",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 25
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse244",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(area="north")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 7
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 4
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",kind="hotel")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 5
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 3
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 4
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > select(stars="0",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 3
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 4
   Usr > [(u'request(price)', 1.0)]
   Sys > request(area)
   Semi > request(name="cityroomz",price) [1.000000]
   User > request(name="cityroomz",price)
   Turn 5
   Usr > [(u'request(name="cityroomz",price)', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 6
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > affirm(type="placetostay",stars="0",kind="guesthouse")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",pricerange="moderate") [1.000000]
   User > inform(="dontcare",pricerange="moderate")
   Turn 3
   Usr > [('inform(="dontcare",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="expensive",name="hotel33",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 4
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 7
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 9
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 11
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(type="placetostay",stars="4",pricerange="moderate") [1.000000]
   User > affirm(type="placetostay",stars="4",pricerange="moderate")
   Turn 5
   Usr > [(u'affirm(type="placetostay",stars="4",pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="hotel82",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="guesthouse89",kind="hotel")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 7
   Usr > [(u'deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 8
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 2
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts(pricerange="dontcare") [1.000000]
   User > reqalts(pricerange="dontcare")
   Turn 3
   Usr > [('reqalts(pricerange="dontcare")', 1.0)]
   Sys > confirm(pricerange="dontcare")
   Semi > affirm(kind="hotel",pricerange="moderate") [1.000000]
   User > affirm(kind="hotel",pricerange="moderate")
   Turn 4
   Usr > [('affirm(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 2
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="2",type="placetostay",kind="hotel",pricerange="moderate") [1.000000]
   User > inform(stars="2",type="placetostay",kind="hotel",pricerange="moderate")
   Turn 3
   Usr > [(u'inform(stars="2",type="placetostay",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 4
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 5
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse40",stars="2")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 7
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel64",stars="2")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 8
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > confirm(area="north")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(area="north")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel112",stars="2",area="north")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 11
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel112",stars="2",area="north")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 12
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel112",stars="2",area="north")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 13
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 14
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(name="none",name!="lovell lodge",name!="ashley hotel",name!="hotel112",kind="hotel",pricerange="moderate",stars="2",area="north")
   Semi > request(name="hotel112",hasinternet) [1.000000]
   User > request(name="hotel112",hasinternet)
   Turn 16
   Usr > [(u'request(name="hotel112",hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel112",stars="2",area="north")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 17
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel112",stars="2",area="north")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 18
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > request(stars)
   Semi > request(name="hotel112",hasinternet) [1.000000]
   User > request(name="hotel112",hasinternet)
   Turn 19
   Usr > [(u'request(name="hotel112",hasinternet)', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 20
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",name="lovell lodge",area="north",kind="hotel",pricerange="moderate",stars="2")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 21
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="lovell lodge",hasinternet) [1.000000]
   User > request(name="lovell lodge",hasinternet)
   Turn 22
   Usr > [(u'request(name="lovell lodge",hasinternet)', 1.0)]
   Sys > inform(hasparking="1",name="lovell lodge",area="north",kind="hotel",pricerange="moderate",stars="2")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 23
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(hasparking="1",name="lovell lodge",area="north",kind="hotel",pricerange="moderate",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 24
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -24, suc = 0, turn = 24
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay",stars="4") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="4")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > negate(pricerange="expensive",type="placetostay",stars="4",kind="guesthouse")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse36",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 16, suc = 1, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 3
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 4
   Usr > [('inform(stars="2")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="ashley hotel",stars="2")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > negate(pricerange="moderate") [1.000000]
   User > negate(pricerange="moderate")
   Turn 7
   Usr > [('negate(pricerange="moderate")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 9
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse40",area="west",kind="hotel",pricerange="moderate",stars="2")
   Semi > confirm(name="ashley hotel") [1.000000]
   User > confirm(name="ashley hotel")
   Turn 10
   Usr > [('confirm(name="ashley hotel")', 1.0)]
   Sys > inform(hasparking="0",name="hotel64",area="east",kind="hotel",pricerange="moderate",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 11
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="0",name="hotel64",area="east",kind="hotel",pricerange="moderate",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 12
   Usr > [(u'request(phone)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 4
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 5
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > reqalts(pricerange="dontcare") [1.000000]
   User > reqalts(pricerange="dontcare")
   Turn 6
   Usr > [('reqalts(pricerange="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 7
   Usr > [(u'request(phone)', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 8
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm(pricerange="expensive") [1.000000]
   User > affirm(pricerange="expensive")
   Turn 9
   Usr > [('affirm(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 3
   Usr > [(u'request(postcode)', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 5
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 6
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap",type="placetostay") [1.000000]
   User > negate(pricerange="cheap",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",type="placetostay",stars="4") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="4")
   Turn 3
   Usr > [(u'inform(="dontcare",type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4",area="north")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 4
   Usr > [(u'request(phone)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 3
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="hotel",pricerange="expensive") [1.000000]
   User > inform(="dontcare",kind="hotel",pricerange="expensive")
   Turn 2
   Usr > [('inform(="dontcare",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
Saving deepq-network...
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 18:41:41: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 18:41:41: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -3.86 +- 1.62
RESULTS:: 18:41:41: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -3.86 +- 1.62
Average success = 3.00 +- 3.38
RESULTS:: 18:41:41: root                               EvaluationManager.py <_prstr>207 :  Average success = 3.00 +- 3.38
Average turns   = 6.06 +- 1.11
RESULTS:: 18:41:41: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 6.06 +- 1.11
*** Evaluating env11-dqn-CH-MLN-00.34: error-rate=0 num-dialogs=100 ***
RESULTS:: 18:41:41: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.34: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.34.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.34
loaded replay size:  3659
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="hotel") [1.000000]
   User > inform(="dontcare",kind="hotel")
   Turn 2
   Usr > [('inform(="dontcare",kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 3
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="cheap",name="hotel50",kind="hotel")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 4
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",kind="guesthouse")
   Turn 2
   Usr > [('inform(pricerange="moderate",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 2
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > confirm(name="hotel82") [1.000000]
   User > confirm(name="hotel82")
   Turn 3
   Usr > [('confirm(name="hotel82")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > confirm(name="hotel82") [1.000000]
   User > confirm(name="hotel82")
   Turn 4
   Usr > [('confirm(name="hotel82")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 4
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 18:43:40: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 18:43:40: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -0.78 +- 0.47
RESULTS:: 18:43:40: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -0.78 +- 0.47
Average success = 1.00 +- 1.97
RESULTS:: 18:43:40: root                               EvaluationManager.py <_prstr>207 :  Average success = 1.00 +- 1.97
Average turns   = 1.18 +- 0.18
RESULTS:: 18:43:40: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 1.18 +- 0.18
RESULTS:: 18:43:40: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.34->env11-dqn-CH-MLN-00.35: iter=34, error-rate=0, num-dialogs=100 ***
RESULTS:: 18:43:40: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.34->env11-dqn-CH-MLN-00.35: iter=34, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.34.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.34
loaded replay size:  3659
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse",stars="0",pricerange="moderate") [1.000000]
   User > inform(kind="guesthouse",stars="0",pricerange="moderate")
   Turn 2
   Usr > [('inform(kind="guesthouse",stars="0",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 3
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 4
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",kind="hotel")
   Turn 2
   Usr > [('inform(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > affirm(type="placetostay",stars="0",kind="guesthouse")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0",area="centre")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse74",area="centre",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel",pricerange="cheap") [1.000000]
   User > inform(kind="hotel",pricerange="cheap")
   Turn 2
   Usr > [('inform(kind="hotel",pricerange="cheap")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel50",stars="3")
   Semi > reqalts(kind="dontcare") [1.000000]
   User > reqalts(kind="dontcare")
   Turn 3
   Usr > [('reqalts(kind="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel50",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel50",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(type="placetostay",stars="0") [1.000000]
   User > inform(type="placetostay",stars="0")
   Turn 4
   Usr > [(u'inform(type="placetostay",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(kind="guesthouse",pricerange="moderate") [1.000000]
   User > inform(kind="guesthouse",pricerange="moderate")
   Turn 6
   Usr > [('inform(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 7
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > reqmore()
   Semi > negate() [1.000000]
   User > negate()
   Turn 8
   Usr > [('negate()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 9
   Usr > [('thankyou()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 10
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 3
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",kind="guesthouse")
   Turn 2
   Usr > [('inform(pricerange="moderate",kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 6
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 7
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 8
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 9
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap",stars="4") [1.000000]
   User > inform(pricerange="cheap",stars="4")
   Turn 3
   Usr > [('inform(pricerange="cheap",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 3
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",stars="2",kind="guesthouse") [1.000000]
   User > negate(pricerange="expensive",stars="2",kind="guesthouse")
   Turn 2
   Usr > [('negate(pricerange="expensive",stars="2",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 3
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="expensive",name="guesthouse49",kind="guesthouse")
   Semi > request(phone,name="guesthouse49") [1.000000]
   User > request(phone,name="guesthouse49")
   Turn 4
   Usr > [(u'request(phone,name="guesthouse49")', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="expensive",name="guesthouse49",kind="guesthouse")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 5
   Usr > [(u'request(phone)', 1.0)]
   Sys > request(area)
   Semi > request(name="guesthouse49",phone) [1.000000]
   User > request(name="guesthouse49",phone)
   Turn 6
   Usr > [(u'request(name="guesthouse49",phone)', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 7
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > request(area)
   Semi > request(name="guesthouse49",phone) [1.000000]
   User > request(name="guesthouse49",phone)
   Turn 8
   Usr > [(u'request(name="guesthouse49",phone)', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse49",area="west",kind="guesthouse",pricerange="expensive",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 9
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse49",area="west",kind="guesthouse",pricerange="expensive",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 10
   Usr > [(u'request(phone)', 1.0)]
   Sys > select(stars="2",stars="0")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 11
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse49",area="west",kind="guesthouse",pricerange="expensive",stars="2")
   Semi > request(phone,name="guesthouse49") [1.000000]
   User > request(phone,name="guesthouse49")
   Turn 12
   Usr > [(u'request(phone,name="guesthouse49")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse49",area="west",kind="guesthouse",pricerange="expensive",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 14
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse49",area="west",kind="guesthouse",pricerange="expensive",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 15
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse49",area="west",kind="guesthouse",pricerange="expensive",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 16
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse49",area="west",kind="guesthouse",pricerange="expensive",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 17
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -17, suc = 0, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 3
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="home from home",kind="guesthouse",hasinternet="1")
   Semi > negate(kind="hotel",type="placetostay",stars="4") [1.000000]
   User > negate(kind="hotel",type="placetostay",stars="4")
   Turn 4
   Usr > [(u'negate(kind="hotel",type="placetostay",stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 5
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 6
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="university arms hotel",stars="4")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 7
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 8
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="guesthouse87",stars="4")
   Semi > negate(pricerange="moderate") [1.000000]
   User > negate(pricerange="moderate")
   Turn 9
   Usr > [('negate(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > confirm(name="home from home") [1.000000]
   User > confirm(name="home from home")
   Turn 10
   Usr > [('confirm(name="home from home")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 11
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 12
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="hotel82",hasinternet) [1.000000]
   User > request(name="hotel82",hasinternet)
   Turn 13
   Usr > [(u'request(name="hotel82",hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > request(hasinternet,name="hotel82") [1.000000]
   User > request(hasinternet,name="hotel82")
   Turn 14
   Usr > [(u'request(hasinternet,name="hotel82")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 15
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -16, suc = 0, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",stars="3",kind="hotel") [1.000000]
   User > negate(pricerange="expensive",stars="3",kind="hotel")
   Turn 2
   Usr > [('negate(pricerange="expensive",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel50",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel56",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse58",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse71",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel91",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 10
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 11
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel105",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 14
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="cheap",name="guesthouse123",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="cheap",name="guesthouse162",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="cheap",name="hotel178",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="cheap",name="guesthouse220",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -18, suc = 0, turn = 18
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse41",stars="0")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse42",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="guesthouse46",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="guesthouse46",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="hotel68",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="guesthouse74",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 11
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="hotel78",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="guesthouse80",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 14
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 15
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hotel81",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="guesthouse88",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 18
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="guesthouse94",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 19
   Usr > [('reqalts()', 1.0)]
   Sys > select(stars="0",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 20
   Usr > [('inform(stars="0")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 21
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="guesthouse108",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 22
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="guesthouse116",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 23
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(area="north")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 24
   Usr > [(u'inform(area="north")', 1.0)]
   Sys > inform(name="none",name!="guesthouse46",name!="hotel78",name!="guesthouse80",name!="guesthouse94",hasparking="dontcare",pricerange="moderate",stars="0",area="north")
   Semi > request(name="guesthouse46",postcode) [1.000000]
   User > request(name="guesthouse46",postcode)
   Turn 25
   Usr > [(u'request(name="guesthouse46",postcode)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > inform(pricerange="cheap",type="placetostay",stars="0") [1.000000]
   User > inform(pricerange="cheap",type="placetostay",stars="0")
   Turn 3
   Usr > [(u'inform(pricerange="cheap",type="placetostay",stars="0")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel55",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse125",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 3
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare",stars="3") [1.000000]
   User > inform(="dontcare",stars="3")
   Turn 4
   Usr > [('inform(="dontcare",stars="3")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3",pricerange="expensive") [1.000000]
   User > inform(stars="3",pricerange="expensive")
   Turn 5
   Usr > [('inform(stars="3",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="gonville hotel",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="hotel59",stars="3")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 10
   Usr > [(u'request(price)', 1.0)]
   Sys > reqmore()
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 11
   Usr > [(u'request(addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 3
   Usr > [('deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 4
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="3") [1.000000]
   User > negate(hasparking="dontcare",stars="3")
   Turn 5
   Usr > [('negate(hasparking="dontcare",stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 7
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive",kind="guesthouse") [1.000000]
   User > inform(pricerange="expensive",kind="guesthouse")
   Turn 8
   Usr > [('inform(pricerange="expensive",kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 9
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 10
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 11
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 12
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(type="placetostay",stars="0") [1.000000]
   User > affirm(type="placetostay",stars="0")
   Turn 3
   Usr > [(u'affirm(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 9
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="kirkwood house",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 10
   Usr > [('ack()', 1.0)]
   Sys > request(area)
   Semi > request(name="kirkwood house",phone) [1.000000]
   User > request(name="kirkwood house",phone)
   Turn 11
   Usr > [(u'request(name="kirkwood house",phone)', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="acorn guest house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="a and b guest house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 14
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(stars="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="arbury lodge guesthouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="alpha-milton guest house",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="archway house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 19
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="avalon",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 20
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="bridge guest house",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 21
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="aylesbray lodge guest house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 22
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="carolina bed and breakfast",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 23
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 24
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hamilton lodge",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 25
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="warkworth house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 3
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 4
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 3
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="home from home",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 6
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > request(area)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 8
   Usr > [(u'request(phone)', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(kind="guesthouse") [1.000000]
   User > affirm(kind="guesthouse")
   Turn 9
   Usr > [('affirm(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > request(phone,price) [1.000000]
   User > request(phone,price)
   Turn 10
   Usr > [(u'request(phone,price)', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 11
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 12
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 13
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4",type="placetostay") [1.000000]
   User > inform(stars="4",type="placetostay")
   Turn 2
   Usr > [(u'inform(stars="4",type="placetostay")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 3
   Usr > [('deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(kind="guesthouse") [1.000000]
   User > affirm(kind="guesthouse")
   Turn 5
   Usr > [('affirm(kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay",stars="2",kind="guesthouse") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="2",kind="guesthouse")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="2",kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 2
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="4") [1.000000]
   User > affirm(type="placetostay",stars="4")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 5
   Usr > [(u'request(price)', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="limehouse",price) [1.000000]
   User > request(name="limehouse",price)
   Turn 6
   Usr > [(u'request(name="limehouse",price)', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 7
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 9
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 10
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="hotel82",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 11
   Usr > [(u'request(price)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 2
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 7
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",type="placetostay",stars="4",kind="hotel") [1.000000]
   User > negate(pricerange="expensive",type="placetostay",stars="4",kind="hotel")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 3
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="4",kind="hotel") [1.000000]
   User > inform(stars="4",kind="hotel")
   Turn 4
   Usr > [('inform(stars="4",kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="hotel82",kind="hotel")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 5
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="hotel82",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 3
   Usr > [('negate(stars="3")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 4
   Usr > [('deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="hobsons house",stars="3")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 7
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 9
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 10
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 11
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 12
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 13
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 6, suc = 1, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 3
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="hotel82",kind="hotel")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 4
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(hasparking="1",stars="0",pricerange="expensive",name="hotel120",kind="hotel")
   Semi > deny(pricerange="expensive",pricerange="moderate") [1.000000]
   User > deny(pricerange="expensive",pricerange="moderate")
   Turn 5
   Usr > [('deny(pricerange="expensive",pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="cityroomz",kind="hotel")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 6
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="cityroomz",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="cityroomz",kind="hotel")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="cityroomz",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 9
   Usr > [('ack()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",stars="0",pricerange="moderate",name="guesthouse41",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 12
   Usr > [('ack()', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > inform(hasparking="1",stars="0",pricerange="moderate",name="guesthouse46",kind="hotel")
   Semi > confirm(name="guesthouse41") [1.000000]
   User > confirm(name="guesthouse41")
   Turn 14
   Usr > [('confirm(name="guesthouse41")', 1.0)]
   Sys > inform(hasparking="1",stars="0",pricerange="moderate",name="guesthouse46",kind="hotel")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 15
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="hotel68",kind="hotel")
   Semi > confirm(name="guesthouse46") [1.000000]
   User > confirm(name="guesthouse46")
   Turn 16
   Usr > [('confirm(name="guesthouse46")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="hotel68",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 17
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -17, suc = 0, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare",type="placetostay") [1.000000]
   User > inform(hasparking="dontcare",type="placetostay")
   Turn 4
   Usr > [(u'inform(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(stars="3") [1.000000]
   User > affirm(stars="3")
   Turn 5
   Usr > [('affirm(stars="3")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(kind="hotel",pricerange="moderate") [1.000000]
   User > affirm(kind="hotel",pricerange="moderate")
   Turn 6
   Usr > [('affirm(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 7
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 8
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 9
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 10
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 11
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 12
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse",stars="3") [1.000000]
   User > inform(kind="guesthouse",stars="3")
   Turn 2
   Usr > [('inform(kind="guesthouse",stars="3")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 3
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",pricerange="moderate") [1.000000]
   User > inform(="dontcare",pricerange="moderate")
   Turn 4
   Usr > [('inform(="dontcare",pricerange="moderate")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 5
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 6
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 7
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 8
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 9
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="cheap",type="placetostay") [1.000000]
   User > inform(pricerange="cheap",type="placetostay")
   Turn 4
   Usr > [(u'inform(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",type="placetostay",stars="3") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="3")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 3
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",kind="hotel")
   Turn 4
   Usr > [('inform(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 5
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 6
   Usr > [('inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 2
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 3
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > reqmore()
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 6
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",stars="2") [1.000000]
   User > inform(kind="hotel",stars="2")
   Turn 5
   Usr > [('inform(kind="hotel",stars="2")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 7
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 8
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="lovell lodge",addr) [1.000000]
   User > request(name="lovell lodge",addr)
   Turn 10
   Usr > [(u'request(name="lovell lodge",addr)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 11
   Usr > [(u'request(addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="0",kind="hotel",pricerange="moderate") [1.000000]
   User > affirm(type="placetostay",stars="0",kind="hotel",pricerange="moderate")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="0",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="cityroomz",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 3
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 17, suc = 1, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="hotel82",hasinternet="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 5
   Usr > [('negate(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 12
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 13
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 15
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 16
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 17
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 18
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -18, suc = 0, turn = 18
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 3
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4",area="north")
   Semi > negate(stars="2",kind="hotel") [1.000000]
   User > negate(stars="2",kind="hotel")
   Turn 4
   Usr > [('negate(stars="2",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2",area="north")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2",area="north")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 6
   Usr > [(u'request(addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="3",type="placetostay") [1.000000]
   User > inform(stars="3",type="placetostay")
   Turn 3
   Usr > [(u'inform(stars="3",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay",stars="4") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="4")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 5
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(name="cityroomz",kind="hotel")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 6
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(name="cityroomz",postcode="cb1 2tz")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 7
   Usr > [(u'request(price)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="cityroomz",price) [1.000000]
   User > request(name="cityroomz",price)
   Turn 8
   Usr > [(u'request(name="cityroomz",price)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 4
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 6
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 7
   Usr > [(u'request(postcode)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 4
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="3",kind="hotel",pricerange="moderate") [1.000000]
   User > affirm(type="placetostay",stars="3",kind="hotel",pricerange="moderate")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="3",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse43",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse43",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare",type="placetostay",stars="4") [1.000000]
   User > inform(hasparking="dontcare",type="placetostay",stars="4")
   Turn 2
   Usr > [(u'inform(hasparking="dontcare",type="placetostay",stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > affirm(type="placetostay",stars="4",kind="hotel")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > confirm(name="hotel82") [1.000000]
   User > confirm(name="hotel82")
   Turn 4
   Usr > [('confirm(name="hotel82")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > confirm(name="hotel82") [1.000000]
   User > confirm(name="hotel82")
   Turn 5
   Usr > [('confirm(name="hotel82")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(pricerange="moderate",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",kind="guesthouse")
   Turn 4
   Usr > [(u'inform(pricerange="moderate",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 6
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 7
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 10
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 3
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 4
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="ashley hotel",stars="2")
   Semi > inform(kind="hotel",pricerange="moderate") [1.000000]
   User > inform(kind="hotel",pricerange="moderate")
   Turn 5
   Usr > [('inform(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare",type="placetostay") [1.000000]
   User > inform(hasparking="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'inform(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse36",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse36",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse36",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 8
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse36",kind="guesthouse")
   Semi > confirm(name="guesthouse36") [1.000000]
   User > confirm(name="guesthouse36")
   Turn 9
   Usr > [('confirm(name="guesthouse36")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse36",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",stars="4") [1.000000]
   User > negate(pricerange="expensive",stars="4")
   Turn 2
   Usr > [('negate(pricerange="expensive",stars="4")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > negate(stars="2") [1.000000]
   User > negate(stars="2")
   Turn 5
   Usr > [(u'negate(stars="2")', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 2
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 4
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > inform(type="placetostay",stars="2",pricerange="moderate") [1.000000]
   User > inform(type="placetostay",stars="2",pricerange="moderate")
   Turn 5
   Usr > [(u'inform(type="placetostay",stars="2",pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 6
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(hasinternet,postcode) [1.000000]
   User > request(hasinternet,postcode)
   Turn 7
   Usr > [(u'request(hasinternet,postcode)', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 9
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 4
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",stars="3") [1.000000]
   User > inform(kind="hotel",stars="3")
   Turn 7
   Usr > [('inform(kind="hotel",stars="3")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > reqmore()
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 5
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="cheap",name="rosa's bed and breakfast",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="cheap",name="rosa's bed and breakfast",stars="4")
   Semi > inform(type="placetostay",stars="4") [1.000000]
   User > inform(type="placetostay",stars="4")
   Turn 7
   Usr > [(u'inform(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="cheap",name="rosa's bed and breakfast",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 8
   Usr > [('ack()', 1.0)]
   Sys > reqmore()
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 9
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > reqmore()
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 10
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="cheap",name="rosa's bed and breakfast",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 11
   Usr > [(u'request(phone)', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 12
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(pricerange="cheap",name="rosa's bed and breakfast",stars="4",area="south")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 13
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="cheap",name="rosa's bed and breakfast",stars="4",area="south")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",stars="4",kind="hotel") [1.000000]
   User > negate(area="dontcare",stars="4",kind="hotel")
   Turn 2
   Usr > [('negate(area="dontcare",stars="4",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4",area="west")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > inform(type="placetostay",stars="4",kind="hotel")
   Turn 4
   Usr > [(u'inform(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 6
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 7
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 3
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 4
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > inform(type="placetostay",kind="hotel") [1.000000]
   User > inform(type="placetostay",kind="hotel")
   Turn 5
   Usr > [(u'inform(type="placetostay",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel55",stars="0")
   Semi > confirm(name="city centre north b and b") [1.000000]
   User > confirm(name="city centre north b and b")
   Turn 6
   Usr > [('confirm(name="city centre north b and b")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel55",stars="0")
   Semi > confirm(name="city centre north b and b") [1.000000]
   User > confirm(name="city centre north b and b")
   Turn 7
   Usr > [('confirm(name="city centre north b and b")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel55",stars="0")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 8
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel55",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="cheap",type="placetostay") [1.000000]
   User > inform(pricerange="cheap",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 6
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive",type="placetostay",stars="3") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="3")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="3")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 2
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Saving deepq-network...
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 18:49:15: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 18:49:15: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -3.38 +- 1.61
RESULTS:: 18:49:15: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -3.38 +- 1.61
Average success = 3.00 +- 3.38
RESULTS:: 18:49:15: root                               EvaluationManager.py <_prstr>207 :  Average success = 3.00 +- 3.38
Average turns   = 5.98 +- 1.05
RESULTS:: 18:49:15: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 5.98 +- 1.05
*** Evaluating env11-dqn-CH-MLN-00.35: error-rate=0 num-dialogs=100 ***
RESULTS:: 18:49:15: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.35: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.35.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.35
loaded replay size:  4157
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > deny(pricerange="expensive",pricerange="cheap") [1.000000]
   User > deny(pricerange="expensive",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="expensive",pricerange="cheap")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel50",stars="3")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel50",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 16, suc = 1, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="2",type="placetostay") [1.000000]
   User > inform(stars="2",type="placetostay")
   Turn 4
   Usr > [(u'inform(stars="2",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 3
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(phone,name="guesthouse42") [1.000000]
   User > request(phone,name="guesthouse42")
   Turn 7
   Usr > [(u'request(phone,name="guesthouse42")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 4
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 5
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > request(price,postcode) [1.000000]
   User > request(price,postcode)
   Turn 6
   Usr > [(u'request(price,postcode)', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > request(price,name="the lensfield hotel") [1.000000]
   User > request(price,name="the lensfield hotel")
   Turn 8
   Usr > [(u'request(price,name="the lensfield hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 2
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3",pricerange="moderate") [1.000000]
   User > negate(stars="3",pricerange="moderate")
   Turn 3
   Usr > [('negate(stars="3",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 3
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > inform(pricerange="cheap",name="guesthouse37",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="cheap",name="guesthouse37",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="cheap",name="guesthouse37",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 2
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0",type="placetostay") [1.000000]
   User > negate(stars="0",type="placetostay")
   Turn 2
   Usr > [(u'negate(stars="0",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 3
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 5
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 3
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 6
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 3
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(phone,name="huntingdon marriott hotel") [1.000000]
   User > request(phone,name="huntingdon marriott hotel")
   Turn 4
   Usr > [(u'request(phone,name="huntingdon marriott hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 5
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 6
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > confirm(name="cityroomz") [1.000000]
   User > confirm(name="cityroomz")
   Turn 6
   Usr > [('confirm(name="cityroomz")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 3
   Usr > [('negate(stars="3")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 2
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 3
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 4
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 5
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",kind="guesthouse")
   Turn 3
   Usr > [('inform(pricerange="moderate",kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 5
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 5
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 2
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 5
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 6
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 5
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > confirm(name="leverton house") [1.000000]
   User > confirm(name="leverton house")
   Turn 7
   Usr > [('confirm(name="leverton house")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 3
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 6
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > negate(stars="3",type="placetostay") [1.000000]
   User > negate(stars="3",type="placetostay")
   Turn 3
   Usr > [(u'negate(stars="3",type="placetostay")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 3
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="expensive",name="hotel33",stars="0")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="hotel33",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="hotel33",stars="0")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 6
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(pricerange="expensive",name="hotel33",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="expensive",name="hotel33",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 2
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 7
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 3
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > request(phone,name="city centre north b and b") [1.000000]
   User > request(phone,name="city centre north b and b")
   Turn 5
   Usr > [(u'request(phone,name="city centre north b and b")', 1.0)]
   Sys > inform(pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > request(phone,name="city centre north b and b") [1.000000]
   User > request(phone,name="city centre north b and b")
   Turn 6
   Usr > [(u'request(phone,name="city centre north b and b")', 1.0)]
   Sys > inform(pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 3
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 6
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > reqalts(stars="dontcare") [1.000000]
   User > reqalts(stars="dontcare")
   Turn 4
   Usr > [('reqalts(stars="dontcare")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > inform(type="placetostay",stars="3",kind="hotel")
   Turn 6
   Usr > [(u'inform(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 8
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > request(addr,name="the lensfield hotel") [1.000000]
   User > request(addr,name="the lensfield hotel")
   Turn 6
   Usr > [(u'request(addr,name="the lensfield hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 7
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap",type="placetostay") [1.000000]
   User > negate(pricerange="cheap",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 4
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 5
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 6
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 7
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="4",pricerange="moderate") [1.000000]
   User > inform(stars="4",pricerange="moderate")
   Turn 4
   Usr > [('inform(stars="4",pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",kind="guesthouse")
   Turn 7
   Usr > [('inform(pricerange="moderate",kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 2
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 3
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > request(addr,name="leverton house") [1.000000]
   User > request(addr,name="leverton house")
   Turn 4
   Usr > [(u'request(addr,name="leverton house")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 5
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 7
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap",type="placetostay") [1.000000]
   User > negate(pricerange="cheap",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 3
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 6
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",type="placetostay") [1.000000]
   User > negate(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 3
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 7
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts(stars="dontcare") [1.000000]
   User > reqalts(stars="dontcare")
   Turn 3
   Usr > [('reqalts(stars="dontcare")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 4
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(phone,hasinternet) [1.000000]
   User > request(phone,hasinternet)
   Turn 6
   Usr > [(u'request(phone,hasinternet)', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive",kind="guesthouse") [1.000000]
   User > inform(pricerange="expensive",kind="guesthouse")
   Turn 3
   Usr > [('inform(pricerange="expensive",kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts(pricerange="moderate") [1.000000]
   User > reqalts(pricerange="moderate")
   Turn 3
   Usr > [(u'reqalts(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 7
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 5
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(postcode,addr) [1.000000]
   User > request(postcode,addr)
   Turn 5
   Usr > [(u'request(postcode,addr)', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 6
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",stars="4",kind="hotel") [1.000000]
   User > negate(pricerange="expensive",stars="4",kind="hotel")
   Turn 2
   Usr > [('negate(pricerange="expensive",stars="4",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts(kind="dontcare") [1.000000]
   User > reqalts(kind="dontcare")
   Turn 3
   Usr > [('reqalts(kind="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 4
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 7
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",type="placetostay") [1.000000]
   User > negate(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="0",kind="hotel") [1.000000]
   User > inform(stars="0",kind="hotel")
   Turn 3
   Usr > [('inform(stars="0",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="hotel120",stars="0")
   Semi > request(phone,addr) [1.000000]
   User > request(phone,addr)
   Turn 4
   Usr > [(u'request(phone,addr)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="hotel120",stars="0")
   Semi > request(phone,addr) [1.000000]
   User > request(phone,addr)
   Turn 5
   Usr > [(u'request(phone,addr)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="hotel120",stars="0")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="hotel120",stars="0")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 7
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="hotel120",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 5
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 6
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 4
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="leverton house",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="leverton house",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="leverton house",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 8
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="leverton house",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 5
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 7
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 3
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 2
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 5
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",kind="guesthouse")
   Turn 6
   Usr > [('inform(pricerange="moderate",kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 3
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 2
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 3
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 2
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 6
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",stars="3") [1.000000]
   User > inform(pricerange="moderate",stars="3")
   Turn 8
   Usr > [('inform(pricerange="moderate",stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",type="placetostay",stars="0",kind="hotel") [1.000000]
   User > negate(pricerange="expensive",type="placetostay",stars="0",kind="hotel")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="hotel120",stars="0")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 3
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="hotel120",stars="0")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 4
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="hotel120",stars="0")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 5
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="hotel120",stars="0")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 6
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="hotel120",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3",type="placetostay") [1.000000]
   User > negate(stars="3",type="placetostay")
   Turn 2
   Usr > [(u'negate(stars="3",type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="guesthouse") [1.000000]
   User > inform(="dontcare",kind="guesthouse")
   Turn 4
   Usr > [('inform(="dontcare",kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="cheap",stars="4",kind="hotel") [1.000000]
   User > inform(pricerange="cheap",stars="4",kind="hotel")
   Turn 2
   Usr > [('inform(pricerange="cheap",stars="4",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 3
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 5
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 6
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 2
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 4
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > reqalts(stars="dontcare") [1.000000]
   User > reqalts(stars="dontcare")
   Turn 5
   Usr > [('reqalts(stars="dontcare")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 2
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 5
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="2",type="placetostay") [1.000000]
   User > inform(stars="2",type="placetostay")
   Turn 2
   Usr > [(u'inform(stars="2",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 3
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 5
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(hasinternet,postcode) [1.000000]
   User > request(hasinternet,postcode)
   Turn 3
   Usr > [(u'request(hasinternet,postcode)', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 4
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 5
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 6
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 2
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",stars="3") [1.000000]
   User > inform(pricerange="moderate",stars="3")
   Turn 3
   Usr > [('inform(pricerange="moderate",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3",type="placetostay") [1.000000]
   User > negate(stars="3",type="placetostay")
   Turn 2
   Usr > [(u'negate(stars="3",type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",kind="guesthouse")
   Turn 3
   Usr > [('inform(pricerange="moderate",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(hasinternet,addr) [1.000000]
   User > request(hasinternet,addr)
   Turn 4
   Usr > [(u'request(hasinternet,addr)', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 7
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3",type="placetostay",kind="hotel") [1.000000]
   User > negate(stars="3",type="placetostay",kind="hotel")
   Turn 2
   Usr > [(u'negate(stars="3",type="placetostay",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > negate(pricerange="moderate") [1.000000]
   User > negate(pricerange="moderate")
   Turn 3
   Usr > [('negate(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 5
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 2
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts(stars="dontcare") [1.000000]
   User > reqalts(stars="dontcare")
   Turn 4
   Usr > [('reqalts(stars="dontcare")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 5
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 7
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 2
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(type="placetostay",stars="0") [1.000000]
   User > inform(type="placetostay",stars="0")
   Turn 3
   Usr > [(u'inform(type="placetostay",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 5
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(price,name="cityroomz") [1.000000]
   User > request(price,name="cityroomz")
   Turn 7
   Usr > [(u'request(price,name="cityroomz")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 2
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 4
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="expensive",name="hotel33",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="hotel33",stars="0")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="hotel33",stars="0")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 7
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="expensive",name="hotel33",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3",type="placetostay") [1.000000]
   User > negate(stars="3",type="placetostay")
   Turn 2
   Usr > [(u'negate(stars="3",type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="guesthouse") [1.000000]
   User > inform(="dontcare",kind="guesthouse")
   Turn 4
   Usr > [('inform(="dontcare",kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 2
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 3
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 17, suc = 1, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 2
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > inform(stars="2",kind="hotel") [1.000000]
   User > inform(stars="2",kind="hotel")
   Turn 3
   Usr > [('inform(stars="2",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > confirm(name="lovell lodge") [1.000000]
   User > confirm(name="lovell lodge")
   Turn 5
   Usr > [('confirm(name="lovell lodge")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 7
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 8
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 9
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 5
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",kind="guesthouse")
   Turn 6
   Usr > [('inform(pricerange="moderate",kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 2
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 4
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > negate(pricerange="moderate",type="placetostay") [1.000000]
   User > negate(pricerange="moderate",type="placetostay")
   Turn 4
   Usr > [(u'negate(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 6
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 2
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > negate(stars="3",kind="hotel") [1.000000]
   User > negate(stars="3",kind="hotel")
   Turn 4
   Usr > [('negate(stars="3",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(name="the lensfield hotel") [1.000000]
   User > confirm(name="the lensfield hotel")
   Turn 7
   Usr > [('confirm(name="the lensfield hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 2
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts(pricerange="dontcare") [1.000000]
   User > reqalts(pricerange="dontcare")
   Turn 3
   Usr > [('reqalts(pricerange="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(price,addr) [1.000000]
   User > request(price,addr)
   Turn 4
   Usr > [(u'request(price,addr)', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(price,addr) [1.000000]
   User > request(price,addr)
   Turn 6
   Usr > [(u'request(price,addr)', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 2
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 3
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 7
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 3
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(pricerange="expensive",name="hotel33",stars="0")
   Semi > inform(kind="guesthouse",pricerange="expensive") [1.000000]
   User > inform(kind="guesthouse",pricerange="expensive")
   Turn 4
   Usr > [('inform(kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="hotel33",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 2
   Usr > [('negate(stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 4
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",kind="hotel") [1.000000]
   User > inform(pricerange="moderate",kind="hotel")
   Turn 5
   Usr > [('inform(pricerange="moderate",kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 2
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 3
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 3
   Usr > [('negate(stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 4
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 6
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="2") [1.000000]
   User > negate(stars="2")
   Turn 2
   Usr > [('negate(stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",type="placetostay") [1.000000]
   User > negate(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="4",kind="guesthouse") [1.000000]
   User > inform(stars="4",kind="guesthouse")
   Turn 5
   Usr > [('inform(stars="4",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse36",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse36",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive",type="placetostay",stars="4") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="4")
   Turn 3
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 5
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 6
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="2",kind="hotel") [1.000000]
   User > negate(stars="2",kind="hotel")
   Turn 2
   Usr > [('negate(stars="2",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 3
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > deny(pricerange="expensive",pricerange="moderate") [1.000000]
   User > deny(pricerange="expensive",pricerange="moderate")
   Turn 4
   Usr > [('deny(pricerange="expensive",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(hasinternet,name="lovell lodge") [1.000000]
   User > request(hasinternet,name="lovell lodge")
   Turn 5
   Usr > [(u'request(hasinternet,name="lovell lodge")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(hasinternet,name="lovell lodge") [1.000000]
   User > request(hasinternet,name="lovell lodge")
   Turn 6
   Usr > [(u'request(hasinternet,name="lovell lodge")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 7
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 5
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 2
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 4
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 5
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > request(hasinternet,name="leverton house") [1.000000]
   User > request(hasinternet,name="leverton house")
   Turn 3
   Usr > [(u'request(hasinternet,name="leverton house")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(type="placetostay",stars="4",pricerange="cheap") [1.000000]
   User > inform(type="placetostay",stars="4",pricerange="cheap")
   Turn 6
   Usr > [(u'inform(type="placetostay",stars="4",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts(stars="3") [1.000000]
   User > reqalts(stars="3")
   Turn 3
   Usr > [(u'reqalts(stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 3
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 6
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > negate(stars="3",kind="hotel") [1.000000]
   User > negate(stars="3",kind="hotel")
   Turn 3
   Usr > [('negate(stars="3",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 4
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 5
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 7
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 5
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 6
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 7
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 18:55:08: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 18:55:08: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -4.99 +- 1.37
RESULTS:: 18:55:08: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -4.99 +- 1.37
Average success = 3.00 +- 3.38
RESULTS:: 18:55:08: root                               EvaluationManager.py <_prstr>207 :  Average success = 3.00 +- 3.38
Average turns   = 7.39 +- 0.26
RESULTS:: 18:55:08: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 7.39 +- 0.26
RESULTS:: 18:55:08: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.35->env11-dqn-CH-MLN-00.36: iter=35, error-rate=0, num-dialogs=100 ***
RESULTS:: 18:55:08: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.35->env11-dqn-CH-MLN-00.36: iter=35, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.35.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.35
loaded replay size:  4157
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel50",stars="3")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 2
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel50",stars="3")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 3
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel50",stars="3")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel50",stars="3")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 5
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel50",stars="3")
   Semi > request(addr,name="hotel50") [1.000000]
   User > request(addr,name="hotel50")
   Turn 6
   Usr > [(u'request(addr,name="hotel50")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel50",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="2") [1.000000]
   User > confirm(stars="2")
   Turn 2
   Usr > [('confirm(stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 3
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 4
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 5
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="0",type="placetostay") [1.000000]
   User > inform(stars="0",type="placetostay")
   Turn 2
   Usr > [(u'inform(stars="0",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="guesthouse") [1.000000]
   User > inform(="dontcare",kind="guesthouse")
   Turn 3
   Usr > [('inform(="dontcare",kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > confirm(name="guesthouse42") [1.000000]
   User > confirm(name="guesthouse42")
   Turn 5
   Usr > [('confirm(name="guesthouse42")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse",type="placetostay") [1.000000]
   User > inform(kind="guesthouse",type="placetostay")
   Turn 9
   Usr > [(u'inform(kind="guesthouse",type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(area="north")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 15
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",name="alpha-milton guest house",area="north",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > ack() [1.000000]
   User > ack()
   Turn 16
   Usr > [('ack()', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 17
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(stars)
   Semi > request(name="alpha-milton guest house",hasinternet) [1.000000]
   User > request(name="alpha-milton guest house",hasinternet)
   Turn 18
   Usr > [(u'request(name="alpha-milton guest house",hasinternet)', 1.0)]
   Sys > request(area)
   Semi > request(name="alpha-milton guest house",hasinternet) [1.000000]
   User > request(name="alpha-milton guest house",hasinternet)
   Turn 19
   Usr > [(u'request(name="alpha-milton guest house",hasinternet)', 1.0)]
   Sys > inform(name="alpha-milton guest house",hasinternet="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 20
   Usr > [('thankyou()', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 21
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 22
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 23
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 24
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 25
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 1, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay",stars="2",kind="hotel") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay",stars="2",kind="hotel")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay",stars="2",kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="expensive",name="express by holiday inn cambridge",kind="hotel")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse60",area="south",kind="hotel",pricerange="cheap",stars="2")
   Semi > request(phone,name="guesthouse60") [1.000000]
   User > request(phone,name="guesthouse60")
   Turn 5
   Usr > [(u'request(phone,name="guesthouse60")', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse60",area="south",kind="hotel",pricerange="cheap",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse60",area="south",kind="hotel",pricerange="cheap",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 8
   Usr > [(u'request(phone)', 1.0)]
   Sys > select(stars="2",stars="0")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 9
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse60",area="south",kind="hotel",pricerange="cheap",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 10
   Usr > [(u'request(phone)', 1.0)]
   Sys > reqmore()
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 11
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse60",area="south",kind="hotel",pricerange="cheap",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 12
   Usr > [(u'request(phone)', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 13
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse60",area="south",kind="hotel",pricerange="cheap",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 14
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse60",area="south",kind="hotel",pricerange="cheap",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 15
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse60",area="south",kind="hotel",pricerange="cheap",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 16
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse60",area="south",kind="hotel",pricerange="cheap",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 17
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -17, suc = 0, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 3
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 3
   Usr > [('negate(stars="0")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0",area="centre")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0",area="centre")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 6
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0",area="centre")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 7
   Usr > [(u'request(price)', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",type="placetostay",pricerange="moderate") [1.000000]
   User > inform(="dontcare",type="placetostay",pricerange="moderate")
   Turn 8
   Usr > [(u'inform(="dontcare",type="placetostay",pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse41",stars="0",area="west")
   Semi > request(price,postcode) [1.000000]
   User > request(price,postcode)
   Turn 9
   Usr > [(u'request(price,postcode)', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse41",stars="0",area="west")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 11
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse41",stars="0",area="west")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 12
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse41",stars="0",area="west")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap",stars="4") [1.000000]
   User > inform(pricerange="cheap",stars="4")
   Turn 4
   Usr > [('inform(pricerange="cheap",stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="leverton house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="leverton house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="leverton house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="leverton house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="leverton house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 10
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="the cambridge belfry",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > inform(type="placetostay",stars="4",kind="hotel")
   Turn 3
   Usr > [(u'inform(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 4
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="huntingdon marriott hotel",kind="hotel")
   Semi > request(hasinternet,addr) [1.000000]
   User > request(hasinternet,addr)
   Turn 6
   Usr > [(u'request(hasinternet,addr)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="huntingdon marriott hotel",kind="hotel")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="huntingdon marriott hotel",kind="hotel")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 8
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > request(area)
   Semi > request(name="huntingdon marriott hotel",hasinternet) [1.000000]
   User > request(name="huntingdon marriott hotel",hasinternet)
   Turn 9
   Usr > [(u'request(name="huntingdon marriott hotel",hasinternet)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="huntingdon marriott hotel",kind="hotel")
   Semi > request(hasinternet,addr) [1.000000]
   User > request(hasinternet,addr)
   Turn 10
   Usr > [(u'request(hasinternet,addr)', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="huntingdon marriott hotel",kind="hotel")
   Semi > request(hasinternet,name="huntingdon marriott hotel") [1.000000]
   User > request(hasinternet,name="huntingdon marriott hotel")
   Turn 11
   Usr > [(u'request(hasinternet,name="huntingdon marriott hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="huntingdon marriott hotel",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",stars="0") [1.000000]
   User > inform(pricerange="moderate",stars="0")
   Turn 3
   Usr > [('inform(pricerange="moderate",stars="0")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",kind="guesthouse")
   Turn 5
   Usr > [('inform(pricerange="moderate",kind="guesthouse")', 1.0)]
   Sys > select(stars="0",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 6
   Usr > [('inform(stars="0")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 5
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4",area="west")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 7
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="huntingdon marriott hotel",price) [1.000000]
   User > request(name="huntingdon marriott hotel",price)
   Turn 8
   Usr > [(u'request(name="huntingdon marriott hotel",price)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4",area="west")
   Semi > ack() [1.000000]
   User > ack()
   Turn 9
   Usr > [('ack()', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",price="a cheapest single room is 125 pounds and a cheapest double room is 145 pounds and a cheapest family room is 145 pounds")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 10
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4",area="west")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 11
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4",area="west")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 12
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4",area="west")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 13
   Usr > [(u'request(addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0",type="placetostay") [1.000000]
   User > negate(stars="0",type="placetostay")
   Turn 3
   Usr > [(u'negate(stars="0",type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm(kind="guesthouse") [1.000000]
   User > affirm(kind="guesthouse")
   Turn 6
   Usr > [('affirm(kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > confirm(name="leverton house") [1.000000]
   User > confirm(name="leverton house")
   Turn 7
   Usr > [('confirm(name="leverton house")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 4
   Usr > [('negate(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 5
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 11
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 12
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 13
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > negate(kind="guesthouse") [1.000000]
   User > negate(kind="guesthouse")
   Turn 14
   Usr > [('negate(kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 15
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -16, suc = 0, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap",stars="4",kind="hotel") [1.000000]
   User > negate(pricerange="cheap",stars="4",kind="hotel")
   Turn 2
   Usr > [('negate(pricerange="cheap",stars="4",kind="hotel")', 1.0)]
   Sys > request(area)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 6
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="guesthouse73",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > confirm(stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare",stars="3",kind="hotel") [1.000000]
   User > inform(hasparking="dontcare",stars="3",kind="hotel")
   Turn 4
   Usr > [('inform(hasparking="dontcare",stars="3",kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay") [1.000000]
   User > negate(area="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(area="dontcare",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4",area="north")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0",area="centre")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0",area="centre")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 5
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0",area="centre")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 6
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0",area="centre")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 7
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="cityroomz",kind="hotel",pricerange="moderate")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 8
   Usr > [('deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0",area="centre")
   Semi > confirm(name="cityroomz") [1.000000]
   User > confirm(name="cityroomz")
   Turn 9
   Usr > [('confirm(name="cityroomz")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0",area="centre")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 3
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 6
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse",type="placetostay") [1.000000]
   User > inform(kind="guesthouse",type="placetostay")
   Turn 7
   Usr > [(u'inform(kind="guesthouse",type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 8
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > inform(name="express by holiday inn cambridge",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 10
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse49",area="west",kind="guesthouse",pricerange="expensive",stars="2")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 11
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse49",area="west",kind="guesthouse",pricerange="expensive",stars="2")
   Semi > request(hasinternet,name="guesthouse49") [1.000000]
   User > request(hasinternet,name="guesthouse49")
   Turn 12
   Usr > [(u'request(hasinternet,name="guesthouse49")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse49",area="west",kind="guesthouse",pricerange="expensive",stars="2")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 13
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse49",area="west",kind="guesthouse",pricerange="expensive",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 4
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 6
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="rosa's bed and breakfast",stars="4",area="south")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="the cambridge belfry",stars="4",area="west")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="allenbell",stars="4",area="east")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 9
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="alexander bed and breakfast",stars="4",area="centre")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 11
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="autumn house",stars="4",area="east")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 12
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="finches bed and breakfast",stars="4",area="west")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 13
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="finches bed and breakfast",kind="guesthouse",hasinternet="1")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 14
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 15
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse73",area="centre",kind="hotel",pricerange="cheap",stars="4")
   Semi > confirm(name="finches bed and breakfast") [1.000000]
   User > confirm(name="finches bed and breakfast")
   Turn 16
   Usr > [('confirm(name="finches bed and breakfast")', 1.0)]
   Sys > inform(name="guesthouse73")
   Semi > request(hasinternet,name="guesthouse73") [1.000000]
   User > request(hasinternet,name="guesthouse73")
   Turn 17
   Usr > [(u'request(hasinternet,name="guesthouse73")', 1.0)]
   Sys > inform(name="guesthouse73",hasinternet="1")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 18
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="guesthouse73",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 19
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="guesthouse73")
   Semi > bye() [1.000000]
   User > bye()
   Turn 20
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 0, suc = 1, turn = 20
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="home from home",postcode) [1.000000]
   User > request(name="home from home",postcode)
   Turn 7
   Usr > [(u'request(name="home from home",postcode)', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 8
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="kirkwood house",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 9
   Usr > [(u'request(postcode)', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 11
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > inform(name="home from home",kind="guesthouse",postcode="cb4 1la")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4",area="north")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4",area="north")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 17
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4",area="north")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 18
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="home from home",kind="guesthouse")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 19
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4",area="north")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 20
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 21
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 22
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4",area="north")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 23
   Usr > [('reqalts()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 24
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4",area="north")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 25
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="hotel") [1.000000]
   User > inform(="dontcare",kind="hotel")
   Turn 2
   Usr > [('inform(="dontcare",kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel91",addr="hotel91addr")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel91",postcode="hotel91postcode")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 4
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel91",area="west")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 6
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(name="hotel91",stars="3")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 7
   Usr > [('negate(stars="0")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 8
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="hotel91",hasinternet="1")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 10
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="hotel91",price="hotel91price")
   Semi > ack() [1.000000]
   User > ack()
   Turn 11
   Usr > [('ack()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 12
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="hotel91",price="hotel91price")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 3
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(stars="0") [1.000000]
   User > affirm(stars="0")
   Turn 4
   Usr > [('affirm(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm(kind="hotel",pricerange="cheap") [1.000000]
   User > affirm(kind="hotel",pricerange="cheap")
   Turn 5
   Usr > [('affirm(kind="hotel",pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse214",price="guesthouse214price")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay",stars="4") [1.000000]
   User > affirm(type="placetostay",stars="4")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="4")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive",kind="guesthouse") [1.000000]
   User > inform(pricerange="expensive",kind="guesthouse")
   Turn 4
   Usr > [('inform(pricerange="expensive",kind="guesthouse")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(area="north")', 1.0)]
   Sys > inform(name="hotel167",postcode="hotel167postcode")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 7
   Usr > [(u'request(phone)', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel167",phone="12233600167")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",stars="3") [1.000000]
   User > negate(pricerange="expensive",stars="3")
   Turn 2
   Usr > [('negate(pricerange="expensive",stars="3")', 1.0)]
   Sys > request(area)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="express by holiday inn cambridge",stars="2")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 5
   Usr > [('negate(stars="3")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",stars="3") [1.000000]
   User > negate(pricerange="expensive",stars="3")
   Turn 2
   Usr > [('negate(pricerange="expensive",stars="3")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm(kind="guesthouse") [1.000000]
   User > affirm(kind="guesthouse")
   Turn 5
   Usr > [('affirm(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 7
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 8
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 9
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 10
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 11
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap",type="placetostay") [1.000000]
   User > inform(pricerange="cheap",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(stars="0") [1.000000]
   User > affirm(stars="0")
   Turn 8
   Usr > [('affirm(stars="0")', 1.0)]
   Sys > select(stars="0",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 9
   Usr > [('inform(stars="0")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 6
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",stars="3",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",stars="3",kind="guesthouse")
   Turn 3
   Usr > [('inform(pricerange="moderate",stars="3",kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 5
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="0") [1.000000]
   User > affirm(stars="0")
   Turn 2
   Usr > [('affirm(stars="0")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 3
   Usr > [('deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 4
   Usr > [('inform(stars="0")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",kind="guesthouse")
   Turn 5
   Usr > [('inform(pricerange="moderate",kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 9
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 3
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4",pricerange="cheap") [1.000000]
   User > inform(stars="4",pricerange="cheap")
   Turn 3
   Usr > [('inform(stars="4",pricerange="cheap")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 4
   Usr > [('inform(stars="4")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 14
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -16, suc = 0, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 2
   Usr > [('deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 3
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm(stars="2") [1.000000]
   User > affirm(stars="2")
   Turn 6
   Usr > [('affirm(stars="2")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",type="placetostay") [1.000000]
   User > negate(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="guesthouse195",postcode="guesthouse195postcode")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",type="placetostay") [1.000000]
   User > negate(pricerange="expensive",type="placetostay")
   Turn 3
   Usr > [(u'negate(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 6
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="kirkwood house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="acorn guest house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="a and b guest house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="arbury lodge guesthouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="archway house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="avalon",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="aylesbray lodge guest house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 15
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 16
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="carolina bed and breakfast",stars="4",area="east")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="warkworth house",stars="4",area="east")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="guesthouse65",stars="4",area="west")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 19
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="hotel79",stars="4",area="centre")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 20
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hotel82",stars="4",area="north")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 21
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="guesthouse89",stars="4",area="east")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 22
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hotel92",stars="4",area="south")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 23
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="guesthouse97",stars="4",area="centre")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 24
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="guesthouse142",stars="4",area="south")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 25
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hotel159",stars="4",area="centre")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > affirm(type="placetostay",stars="4") [1.000000]
   User > affirm(type="placetostay",stars="4")
   Turn 3
   Usr > [(u'affirm(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",type="placetostay",stars="0") [1.000000]
   User > negate(pricerange="expensive",type="placetostay",stars="0")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 2
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 3
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 4
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 6
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="rosa's bed and breakfast",stars="4")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 7
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="rosa's bed and breakfast",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 8
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 9
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 10
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="allenbell",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 11
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="alexander bed and breakfast",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 8, suc = 1, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",stars="4") [1.000000]
   User > negate(pricerange="expensive",stars="4")
   Turn 2
   Usr > [('negate(pricerange="expensive",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(kind="hotel",pricerange="cheap") [1.000000]
   User > affirm(kind="hotel",pricerange="cheap")
   Turn 2
   Usr > [('affirm(kind="hotel",pricerange="cheap")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse60",stars="2")
   Semi > request(price,name="guesthouse60") [1.000000]
   User > request(price,name="guesthouse60")
   Turn 3
   Usr > [(u'request(price,name="guesthouse60")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 4
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > select(stars="2",stars="0")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 5
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="cheap",name="hotel62",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="0",stars="2",pricerange="cheap",name="guesthouse76",kind="hotel")
   Semi > request(price,name="guesthouse76") [1.000000]
   User > request(price,name="guesthouse76")
   Turn 7
   Usr > [(u'request(price,name="guesthouse76")', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="cheap",name="hotel137",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 8
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="0",stars="2",pricerange="cheap",name="guesthouse166",kind="hotel")
   Semi > request(price,name="guesthouse166") [1.000000]
   User > request(price,name="guesthouse166")
   Turn 9
   Usr > [(u'request(price,name="guesthouse166")', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="cheap",name="guesthouse176",kind="hotel")
   Semi > request(price,name="guesthouse176") [1.000000]
   User > request(price,name="guesthouse176")
   Turn 10
   Usr > [(u'request(price,name="guesthouse176")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="cheap",name="guesthouse179",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 12
   Usr > [(u'request(price)', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 13
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="2",pricerange="cheap",name="guesthouse199",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 14
   Usr > [(u'request(price)', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 2
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(kind="hotel",pricerange="moderate") [1.000000]
   User > inform(kind="hotel",pricerange="moderate")
   Turn 3
   Usr > [('inform(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 16, suc = 1, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="guesthouse144",pricerange="cheap")
   Semi > negate(pricerange="moderate") [1.000000]
   User > negate(pricerange="moderate")
   Turn 4
   Usr > [('negate(pricerange="moderate")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 13
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 14
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 15
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 16
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 17
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 18
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 19
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 20
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 21
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 22
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -22, suc = 0, turn = 22
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > confirm(stars="4")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 3
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > inform(pricerange="expensive",stars="2",kind="guesthouse") [1.000000]
   User > inform(pricerange="expensive",stars="2",kind="guesthouse")
   Turn 4
   Usr > [('inform(pricerange="expensive",stars="2",kind="guesthouse")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="expensive",name="guesthouse49",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 3
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4",area="north")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 4
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="cityroomz",stars="0",area="centre")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 5
   Usr > [(u'request(phone)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="3") [1.000000]
   User > negate(hasparking="dontcare",stars="3")
   Turn 2
   Usr > [('negate(hasparking="dontcare",stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 5
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="hotel") [1.000000]
   User > inform(="dontcare",kind="hotel")
   Turn 9
   Usr > [('inform(="dontcare",kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 10, suc = 1, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(stars="4")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",kind="hotel",pricerange="expensive") [1.000000]
   User > negate(hasparking="dontcare",kind="hotel",pricerange="expensive")
   Turn 3
   Usr > [('negate(hasparking="dontcare",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > request(area)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 4
   Usr > [('inform(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="3",kind="guesthouse") [1.000000]
   User > negate(hasparking="dontcare",stars="3",kind="guesthouse")
   Turn 2
   Usr > [('negate(hasparking="dontcare",stars="3",kind="guesthouse")', 1.0)]
   Sys > reqmore()
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 5
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 7
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 8
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 9
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 10
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 11
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",stars="4") [1.000000]
   User > negate(area="dontcare",stars="4")
   Turn 4
   Usr > [('negate(area="dontcare",stars="4")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(hasparking="dontcare",kind="hotel",pricerange="cheap") [1.000000]
   User > inform(hasparking="dontcare",kind="hotel",pricerange="cheap")
   Turn 5
   Usr > [('inform(hasparking="dontcare",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="1",name="the cambridge belfry",area="west",kind="hotel",pricerange="cheap",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse73",area="centre",kind="hotel",pricerange="cheap",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 7
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="0",name="hotel75",area="south",kind="hotel",pricerange="cheap",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 8
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse83",area="north",kind="hotel",pricerange="cheap",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 9
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse85",area="centre",kind="hotel",pricerange="cheap",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 10
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse194",area="east",kind="hotel",pricerange="cheap",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 11
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="0",name="hotel238",area="east",kind="hotel",pricerange="cheap",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 12
   Usr > [(u'request(phone)', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(hasparking="1",name="hotel242",area="south",kind="hotel",pricerange="cheap",stars="4")
   Semi > confirm(name="hotel238") [1.000000]
   User > confirm(name="hotel238")
   Turn 15
   Usr > [('confirm(name="hotel238")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay",stars="3",kind="hotel") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay",stars="3",kind="hotel")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(name="the lensfield hotel",hasparking="1")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 5
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(kind)
   Semi > request(name="limehouse",phone) [1.000000]
   User > request(name="limehouse",phone)
   Turn 5
   Usr > [(u'request(name="limehouse",phone)', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 6
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > request(kind)
   Semi > request(name="limehouse",phone) [1.000000]
   User > request(name="limehouse",phone)
   Turn 8
   Usr > [(u'request(name="limehouse",phone)', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 10
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > request(kind)
   Semi > request(name="limehouse",phone) [1.000000]
   User > request(name="limehouse",phone)
   Turn 11
   Usr > [(u'request(name="limehouse",phone)', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 12
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="home from home",stars="4",area="north")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 13
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="home from home",price) [1.000000]
   User > request(name="home from home",price)
   Turn 14
   Usr > [(u'request(name="home from home",price)', 1.0)]
   Sys > reqmore()
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 15
   Usr > [(u'request(phone)', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 16
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="kirkwood house",stars="4",area="north")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 17
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 18
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="acorn guest house",stars="4",area="north")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 19
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 20
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="acorn guest house",price) [1.000000]
   User > request(name="acorn guest house",price)
   Turn 21
   Usr > [(u'request(name="acorn guest house",price)', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 22
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="a and b guest house",stars="4",area="east")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 23
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 24
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="arbury lodge guesthouse",stars="4",area="north")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 25
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(kind)
   Semi > request(name="arbury lodge guesthouse",price) [1.000000]
   User > request(name="arbury lodge guesthouse",price)
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="2") [1.000000]
   User > negate(stars="2")
   Turn 3
   Usr > [('negate(stars="2")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="guesthouse40",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="guesthouse61",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 8
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="hotel64",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 9
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="hotel69",stars="2")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="hotel69",price) [1.000000]
   User > request(name="hotel69",price)
   Turn 11
   Usr > [(u'request(name="hotel69",price)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 12
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="guesthouse84",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="hotel90",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="hotel112",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 16
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hotel133",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="guesthouse136",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 19
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hotel152",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 20
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hotel156",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 21
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hotel160",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 22
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="hotel168",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 23
   Usr > [('reqalts()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 24
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hotel208",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 25
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hotel212",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive",type="placetostay",stars="3",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="3",kind="hotel")
   Turn 3
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 16, suc = 1, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 3
   Usr > [('negate(stars="0")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 4
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(hasparking="1")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="guesthouse41",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 6
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 7
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="guesthouse46",stars="0",area="north")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 8
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 3
   Usr > [('negate(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 4
   Usr > [('negate(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(type="placetostay",kind="guesthouse") [1.000000]
   User > affirm(type="placetostay",kind="guesthouse")
   Turn 5
   Usr > [(u'affirm(type="placetostay",kind="guesthouse")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 6
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 7
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 8
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hobsons house",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3",pricerange="moderate") [1.000000]
   User > inform(stars="3",pricerange="moderate")
   Turn 10
   Usr > [('inform(stars="3",pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 12
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 13
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 14
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -16, suc = 0, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 3
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(stars="4",kind="hotel") [1.000000]
   User > affirm(stars="4",kind="hotel")
   Turn 5
   Usr > [('affirm(stars="4",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay",stars="3") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay",stars="3")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay",stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="hotel",pricerange="moderate") [1.000000]
   User > affirm(kind="hotel",pricerange="moderate")
   Turn 5
   Usr > [('affirm(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 6
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse43",hasinternet) [1.000000]
   User > request(name="guesthouse43",hasinternet)
   Turn 7
   Usr > [(u'request(name="guesthouse43",hasinternet)', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > request(hasinternet,postcode) [1.000000]
   User > request(hasinternet,postcode)
   Turn 8
   Usr > [(u'request(hasinternet,postcode)', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 10
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 12
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 14
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="guesthouse43",hasinternet) [1.000000]
   User > request(name="guesthouse43",hasinternet)
   Turn 15
   Usr > [(u'request(name="guesthouse43",hasinternet)', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 16
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > request(hasinternet,postcode) [1.000000]
   User > request(hasinternet,postcode)
   Turn 17
   Usr > [(u'request(hasinternet,postcode)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -17, suc = 0, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 4
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive",stars="4",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",stars="4",kind="hotel")
   Turn 3
   Usr > [('inform(pricerange="expensive",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > select(stars="0",stars="3")
   Semi > inform(stars="0",type="placetostay",kind="hotel",pricerange="moderate") [1.000000]
   User > inform(stars="0",type="placetostay",kind="hotel",pricerange="moderate")
   Turn 4
   Usr > [(u'inform(stars="0",type="placetostay",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 5
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="0",name="cityroomz",area="centre",kind="hotel",pricerange="moderate",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay") [1.000000]
   User > negate(area="dontcare",type="placetostay")
   Turn 5
   Usr > [(u'negate(area="dontcare",type="placetostay")', 1.0)]
   Sys > confirm(stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 6
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="hotel",pricerange="moderate") [1.000000]
   User > affirm(kind="hotel",pricerange="moderate")
   Turn 7
   Usr > [('affirm(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 11
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > affirm(stars="0") [1.000000]
   User > affirm(stars="0")
   Turn 3
   Usr > [('affirm(stars="0")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 4
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",kind="hotel") [1.000000]
   User > negate(area="dontcare",kind="hotel")
   Turn 5
   Usr > [('negate(area="dontcare",kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",name="hotel120",area="south",kind="hotel",pricerange="expensive",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="0",name="hotel122",area="west",kind="hotel",pricerange="expensive",stars="0")
   Semi > confirm(name="hotel120") [1.000000]
   User > confirm(name="hotel120")
   Turn 7
   Usr > [('confirm(name="hotel120")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 8
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",name="hotel127",area="centre",kind="hotel",pricerange="expensive",stars="0")
   Semi > confirm(name="hotel120") [1.000000]
   User > confirm(name="hotel120")
   Turn 10
   Usr > [('confirm(name="hotel120")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 11
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="3",type="placetostay") [1.000000]
   User > inform(stars="3",type="placetostay")
   Turn 3
   Usr > [(u'inform(stars="3",type="placetostay")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="guesthouse",pricerange="moderate") [1.000000]
   User > affirm(kind="guesthouse",pricerange="moderate")
   Turn 5
   Usr > [('affirm(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 6
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 7
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 8
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 9
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 11
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",kind="hotel",pricerange="expensive") [1.000000]
   User > negate(hasparking="dontcare",kind="hotel",pricerange="expensive")
   Turn 2
   Usr > [('negate(hasparking="dontcare",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 3
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 7
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > confirm(stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 3
   Usr > [('negate(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 5
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="home from home",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(hasinternet,addr) [1.000000]
   User > request(hasinternet,addr)
   Turn 7
   Usr > [(u'request(hasinternet,addr)', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 8
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(area)
   Semi > request(name="huntingdon marriott hotel",hasinternet) [1.000000]
   User > request(name="huntingdon marriott hotel",hasinternet)
   Turn 10
   Usr > [(u'request(name="huntingdon marriott hotel",hasinternet)', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 11
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 12
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 13
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 3
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="4",kind="hotel") [1.000000]
   User > negate(hasparking="dontcare",stars="4",kind="hotel")
   Turn 4
   Usr > [('negate(hasparking="dontcare",stars="4",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 7
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 8
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 10
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 11
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="3",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",stars="3",kind="hotel")
   Turn 3
   Usr > [('inform(pricerange="expensive",stars="3",kind="hotel")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 4
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 8
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 10
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 13
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > confirm(name="the lensfield hotel") [1.000000]
   User > confirm(name="the lensfield hotel")
   Turn 14
   Usr > [('confirm(name="the lensfield hotel")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 15
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 16
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 17
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 18
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 19
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 20
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 21
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 22
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -22, suc = 0, turn = 22
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 3
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare",type="placetostay") [1.000000]
   User > inform(area="dontcare",type="placetostay")
   Turn 5
   Usr > [(u'inform(area="dontcare",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0",area="centre")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 7
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0",area="centre")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0",area="centre")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 10
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",stars="0",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",stars="0",kind="guesthouse")
   Turn 2
   Usr > [('inform(pricerange="moderate",stars="0",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 7
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="0",pricerange="moderate",name="guesthouse74",kind="guesthouse")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 7
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 8
   Usr > [('inform(stars="0")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 9
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="3") [1.000000]
   User > inform(="dontcare",stars="3")
   Turn 4
   Usr > [('inform(="dontcare",stars="3")', 1.0)]
   Sys > reqmore()
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="hotel59",price="hotel59price")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 2
   Usr > [(u'request(postcode)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 7
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 3
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse36",stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 6
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 10
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 12
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 13
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 3
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 4
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="moderate",name="ashley hotel",kind="hotel")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 6
   Usr > [(u'request(postcode)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="moderate",name="guesthouse40",kind="hotel")
   Semi > confirm(name="ashley hotel") [1.000000]
   User > confirm(name="ashley hotel")
   Turn 8
   Usr > [('confirm(name="ashley hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="0",stars="2",pricerange="moderate",name="hotel64",kind="hotel")
   Semi > confirm(name="ashley hotel") [1.000000]
   User > confirm(name="ashley hotel")
   Turn 10
   Usr > [('confirm(name="ashley hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="0",stars="2",pricerange="moderate",name="hotel69",kind="hotel")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 12
   Usr > [(u'request(postcode)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 13
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="0",stars="2",pricerange="moderate",name="hotel112",kind="hotel")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 14
   Usr > [(u'request(postcode)', 1.0)]
   Sys > request(kind)
   Semi > request(name="hotel112",postcode) [1.000000]
   User > request(name="hotel112",postcode)
   Turn 15
   Usr > [(u'request(name="hotel112",postcode)', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 16
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > request(kind)
   Semi > request(name="hotel112",postcode) [1.000000]
   User > request(name="hotel112",postcode)
   Turn 17
   Usr > [(u'request(name="hotel112",postcode)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 18
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 19
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 20
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 21
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 22
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > select(stars="2",stars="0")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 23
   Usr > [('inform(stars="2")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 24
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 25
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > affirm(type="placetostay",stars="4",kind="hotel")
   Turn 3
   Usr > [(u'affirm(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 3
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4",kind="guesthouse") [1.000000]
   User > inform(stars="4",kind="guesthouse")
   Turn 6
   Usr > [('inform(stars="4",kind="guesthouse")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 7
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 8
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 9
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 4
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > reqmore()
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 7
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > reqmore()
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 8
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 9
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 10
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="2") [1.000000]
   User > negate(stars="2")
   Turn 2
   Usr > [('negate(stars="2")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",type="placetostay",kind="hotel") [1.000000]
   User > inform(pricerange="moderate",type="placetostay",kind="hotel")
   Turn 3
   Usr > [(u'inform(pricerange="moderate",type="placetostay",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse40",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 2
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(stars="3") [1.000000]
   User > affirm(stars="3")
   Turn 4
   Usr > [('affirm(stars="3")', 1.0)]
   Sys > inform(name="guesthouse61",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 5
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 7
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 9
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 10
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 4
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 5
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 7
   Usr > [(u'deny(stars="4",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap",type="placetostay",stars="4") [1.000000]
   User > inform(pricerange="cheap",type="placetostay",stars="4")
   Turn 6
   Usr > [(u'inform(pricerange="cheap",type="placetostay",stars="4")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 7
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 8
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 9
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap",kind="hotel") [1.000000]
   User > inform(pricerange="cheap",kind="hotel")
   Turn 11
   Usr > [('inform(pricerange="cheap",kind="hotel")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > inform(type="placetostay",stars="4") [1.000000]
   User > inform(type="placetostay",stars="4")
   Turn 5
   Usr > [(u'inform(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="kirkwood house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="acorn guest house",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 4
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 7
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 8
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="0",type="placetostay") [1.000000]
   User > negate(stars="0",type="placetostay")
   Turn 3
   Usr > [(u'negate(stars="0",type="placetostay")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 10
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 15
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive",stars="3") [1.000000]
   User > inform(pricerange="expensive",stars="3")
   Turn 2
   Usr > [('inform(pricerange="expensive",stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 3
   Usr > [(u'request(addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 2
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare",kind="guesthouse") [1.000000]
   User > inform(hasparking="dontcare",kind="guesthouse")
   Turn 3
   Usr > [('inform(hasparking="dontcare",kind="guesthouse")', 1.0)]
   Sys > reqmore()
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse36",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Saving deepq-network...
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 19:02:59: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 19:02:59: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -6.66 +- 1.91
RESULTS:: 19:02:59: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -6.66 +- 1.91
Average success = 2.00 +- 2.78
RESULTS:: 19:02:59: root                               EvaluationManager.py <_prstr>207 :  Average success = 2.00 +- 2.78
Average turns   = 9.66 +- 1.22
RESULTS:: 19:02:59: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 9.66 +- 1.22
*** Evaluating env11-dqn-CH-MLN-00.36: error-rate=0 num-dialogs=100 ***
RESULTS:: 19:02:59: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.36: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.36.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.36
loaded replay size:  5023
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap",type="placetostay",stars="3") [1.000000]
   User > inform(pricerange="cheap",type="placetostay",stars="3")
   Turn 3
   Usr > [(u'inform(pricerange="cheap",type="placetostay",stars="3")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 4
   Usr > [(u'request(postcode)', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap",kind="hotel") [1.000000]
   User > inform(pricerange="cheap",kind="hotel")
   Turn 6
   Usr > [('inform(pricerange="cheap",kind="hotel")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 7
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 8
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 9
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="2") [1.000000]
   User > negate(stars="2")
   Turn 3
   Usr > [('negate(stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="ashley hotel",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse40",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse61",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel64",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel69",stars="2")
   Semi > request(phone,addr) [1.000000]
   User > request(phone,addr)
   Turn 9
   Usr > [(u'request(phone,addr)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 12
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 13
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",stars="0") [1.000000]
   User > inform(pricerange="moderate",stars="0")
   Turn 2
   Usr > [('inform(pricerange="moderate",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 3
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse41",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse42",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 7
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse46",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 9
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel68",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 11
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse74",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 12
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse74",stars="0")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 13
   Usr > [(u'request(addr)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 14
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 15
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 16
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 17
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -17, suc = 0, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 3
   Usr > [('negate(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 4
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [('affirm()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 8
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 9
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap",type="placetostay",stars="2") [1.000000]
   User > inform(pricerange="cheap",type="placetostay",stars="2")
   Turn 2
   Usr > [(u'inform(pricerange="cheap",type="placetostay",stars="2")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 3
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse60",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 16, suc = 1, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap",type="placetostay",stars="4") [1.000000]
   User > inform(pricerange="cheap",type="placetostay",stars="4")
   Turn 3
   Usr > [(u'inform(pricerange="cheap",type="placetostay",stars="4")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap",kind="hotel") [1.000000]
   User > inform(pricerange="cheap",kind="hotel")
   Turn 7
   Usr > [('inform(pricerange="cheap",kind="hotel")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts(stars="dontcare") [1.000000]
   User > reqalts(stars="dontcare")
   Turn 4
   Usr > [('reqalts(stars="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 5
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > confirm(stars="dontcare")
   Semi > affirm(stars="0") [1.000000]
   User > affirm(stars="0")
   Turn 6
   Usr > [('affirm(stars="0")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="guesthouse41",stars="0")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 7
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap",kind="hotel") [1.000000]
   User > inform(pricerange="cheap",kind="hotel")
   Turn 3
   Usr > [('inform(pricerange="cheap",kind="hotel")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 7
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive",type="placetostay",stars="4",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="4",kind="hotel")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay",stars="0") [1.000000]
   User > inform(pricerange="moderate",type="placetostay",stars="0")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 3
   Usr > [(u'request(price)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",kind="guesthouse")
   Turn 6
   Usr > [('inform(pricerange="moderate",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 7
   Usr > [(u'request(price)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(price,name="guesthouse42") [1.000000]
   User > request(price,name="guesthouse42")
   Turn 9
   Usr > [(u'request(price,name="guesthouse42")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(price,name="guesthouse42") [1.000000]
   User > request(price,name="guesthouse42")
   Turn 11
   Usr > [(u'request(price,name="guesthouse42")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 12
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 13
   Usr > [(u'request(price)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 14
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 15
   Usr > [(u'request(price)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 16
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(price,name="guesthouse42") [1.000000]
   User > request(price,name="guesthouse42")
   Turn 17
   Usr > [(u'request(price,name="guesthouse42")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 18
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 19
   Usr > [(u'request(price)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 20
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(price,name="guesthouse42") [1.000000]
   User > request(price,name="guesthouse42")
   Turn 21
   Usr > [(u'request(price,name="guesthouse42")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 22
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 23
   Usr > [('ack()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 24
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(price,name="guesthouse42") [1.000000]
   User > request(price,name="guesthouse42")
   Turn 25
   Usr > [(u'request(price,name="guesthouse42")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="4",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",stars="4",kind="hotel")
   Turn 4
   Usr > [('inform(pricerange="expensive",stars="4",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 3
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 6
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse41",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 7
   Usr > [(u'request(price)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap",type="placetostay",stars="4",kind="hotel") [1.000000]
   User > inform(pricerange="cheap",type="placetostay",stars="4",kind="hotel")
   Turn 2
   Usr > [(u'inform(pricerange="cheap",type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="3") [1.000000]
   User > inform(="dontcare",stars="3")
   Turn 4
   Usr > [('inform(="dontcare",stars="3")', 1.0)]
   Sys > reqmore()
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [('affirm()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 7
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 8
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 9
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap",type="placetostay") [1.000000]
   User > inform(pricerange="cheap",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap",stars="4") [1.000000]
   User > inform(pricerange="cheap",stars="4")
   Turn 5
   Usr > [('inform(pricerange="cheap",stars="4")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap",kind="hotel") [1.000000]
   User > inform(pricerange="cheap",kind="hotel")
   Turn 7
   Usr > [('inform(pricerange="cheap",kind="hotel")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",type="placetostay",stars="0",kind="guesthouse")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap",type="placetostay") [1.000000]
   User > inform(pricerange="cheap",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap",stars="4",kind="hotel") [1.000000]
   User > inform(pricerange="cheap",stars="4",kind="hotel")
   Turn 4
   Usr > [('inform(pricerange="cheap",stars="4",kind="hotel")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 7
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="kirkwood house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 6
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="acorn guest house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 8
   Usr > [(u'negate(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 9
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse41",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 11
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 12
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse42",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 13
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 14
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse46",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 15
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel68",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 4, suc = 1, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap",type="placetostay",stars="3") [1.000000]
   User > inform(pricerange="cheap",type="placetostay",stars="3")
   Turn 5
   Usr > [(u'inform(pricerange="cheap",type="placetostay",stars="3")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 7
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 9
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 10
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 11
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 12
   Usr > [(u'request(phone)', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 13
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 14
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 15
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive",type="placetostay",stars="0") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="0")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="0")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",kind="hotel")
   Turn 3
   Usr > [('inform(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",stars="0") [1.000000]
   User > inform(pricerange="moderate",stars="0")
   Turn 2
   Usr > [('inform(pricerange="moderate",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse41",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse42",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse46",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 9
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel68",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 11
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 12
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse74",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 13
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 14
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel78",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 15
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel78",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -16, suc = 0, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 7
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="4") [1.000000]
   User > inform(pricerange="expensive",stars="4")
   Turn 4
   Usr > [('inform(pricerange="expensive",stars="4")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="3") [1.000000]
   User > inform(pricerange="expensive",stars="3")
   Turn 3
   Usr > [('inform(pricerange="expensive",stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 7
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="3") [1.000000]
   User > inform(pricerange="expensive",stars="3")
   Turn 3
   Usr > [('inform(pricerange="expensive",stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 4
   Usr > [(u'request(price)', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 7
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 8
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap",stars="0") [1.000000]
   User > inform(pricerange="cheap",stars="0")
   Turn 2
   Usr > [('inform(pricerange="cheap",stars="0")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 4
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="kirkwood house",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 7
   Usr > [(u'deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 8
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 9
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 10
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 11
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 12
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",stars="3",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",stars="3",kind="guesthouse")
   Turn 2
   Usr > [('inform(pricerange="moderate",stars="3",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 3
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [('affirm()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 8
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm(kind="guesthouse") [1.000000]
   User > affirm(kind="guesthouse")
   Turn 4
   Usr > [('affirm(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap",type="placetostay") [1.000000]
   User > inform(pricerange="cheap",type="placetostay")
   Turn 3
   Usr > [(u'inform(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap",type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > inform(pricerange="cheap",type="placetostay",stars="4",kind="guesthouse")
   Turn 5
   Usr > [(u'inform(pricerange="cheap",type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 7
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 4
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 3
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay",stars="3") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="3")
   Turn 3
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="4") [1.000000]
   User > inform(pricerange="expensive",stars="4")
   Turn 3
   Usr > [('inform(pricerange="expensive",stars="4")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",kind="hotel")
   Turn 4
   Usr > [('inform(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 2
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > request(price,name="guesthouse89") [1.000000]
   User > request(price,name="guesthouse89")
   Turn 3
   Usr > [(u'request(price,name="guesthouse89")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="4",kind="guesthouse") [1.000000]
   User > inform(pricerange="expensive",stars="4",kind="guesthouse")
   Turn 5
   Usr > [('inform(pricerange="expensive",stars="4",kind="guesthouse")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",kind="hotel")
   Turn 5
   Usr > [('inform(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap",type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > inform(pricerange="cheap",type="placetostay",stars="4",kind="guesthouse")
   Turn 4
   Usr > [(u'inform(pricerange="cheap",type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay",stars="4",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="4",kind="hotel")
   Turn 3
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap",stars="2",kind="hotel") [1.000000]
   User > inform(pricerange="cheap",stars="2",kind="hotel")
   Turn 4
   Usr > [('inform(pricerange="cheap",stars="2",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse60",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="kirkwood house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 7
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="acorn guest house",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 8
   Usr > [(u'request(addr)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 3
   Usr > [('negate(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 7
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 8
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 9
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="2",kind="guesthouse") [1.000000]
   User > inform(pricerange="expensive",stars="2",kind="guesthouse")
   Turn 5
   Usr > [('inform(pricerange="expensive",stars="2",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse49",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 7
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 8
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",stars="0") [1.000000]
   User > inform(pricerange="moderate",stars="0")
   Turn 2
   Usr > [('inform(pricerange="moderate",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse41",stars="0")
   Semi > request(phone,postcode) [1.000000]
   User > request(phone,postcode)
   Turn 4
   Usr > [(u'request(phone,postcode)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="3",kind="hotel") [1.000000]
   User > inform(stars="3",kind="hotel")
   Turn 3
   Usr > [('inform(stars="3",kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [('affirm()', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [('affirm()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 8
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="0",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",stars="0",kind="hotel")
   Turn 5
   Usr > [('inform(pricerange="expensive",stars="0",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3",kind="guesthouse") [1.000000]
   User > negate(stars="3",kind="guesthouse")
   Turn 3
   Usr > [('negate(stars="3",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 7
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 8
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap",type="placetostay",stars="4") [1.000000]
   User > inform(pricerange="cheap",type="placetostay",stars="4")
   Turn 2
   Usr > [(u'inform(pricerange="cheap",type="placetostay",stars="4")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap",kind="hotel") [1.000000]
   User > inform(pricerange="cheap",kind="hotel")
   Turn 5
   Usr > [('inform(pricerange="cheap",kind="hotel")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 6
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 4
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > confirm(name="home from home") [1.000000]
   User > confirm(name="home from home")
   Turn 6
   Usr > [('confirm(name="home from home")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > confirm(name="home from home") [1.000000]
   User > confirm(name="home from home")
   Turn 8
   Usr > [('confirm(name="home from home")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel92",stars="4")
   Semi > confirm(name="home from home") [1.000000]
   User > confirm(name="home from home")
   Turn 10
   Usr > [('confirm(name="home from home")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse97",stars="4")
   Semi > confirm(name="home from home") [1.000000]
   User > confirm(name="home from home")
   Turn 12
   Usr > [('confirm(name="home from home")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 13
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse142",stars="4")
   Semi > confirm(name="home from home") [1.000000]
   User > confirm(name="home from home")
   Turn 14
   Usr > [('confirm(name="home from home")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 15
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel163",stars="4")
   Semi > request(price,addr) [1.000000]
   User > request(price,addr)
   Turn 16
   Usr > [(u'request(price,addr)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 17
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 18
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 19
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 20
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 21
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 22
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -22, suc = 0, turn = 22
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="2",type="placetostay",kind="hotel") [1.000000]
   User > negate(stars="2",type="placetostay",kind="hotel")
   Turn 3
   Usr > [(u'negate(stars="2",type="placetostay",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 16, suc = 1, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="3") [1.000000]
   User > inform(pricerange="expensive",stars="3")
   Turn 3
   Usr > [('inform(pricerange="expensive",stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 7
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 8
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 6
   Usr > [('inform(stars="3")', 1.0)]
   Sys > reqmore()
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 7
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [('affirm()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 9
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 6
   Usr > [('inform(stars="3")', 1.0)]
   Sys > reqmore()
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 7
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 8
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3",kind="hotel",pricerange="moderate") [1.000000]
   User > inform(stars="3",kind="hotel",pricerange="moderate")
   Turn 2
   Usr > [('inform(stars="3",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 5
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 3
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="4") [1.000000]
   User > inform(pricerange="expensive",stars="4")
   Turn 4
   Usr > [('inform(pricerange="expensive",stars="4")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",kind="hotel")
   Turn 5
   Usr > [('inform(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 3
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="0",type="placetostay",kind="hotel") [1.000000]
   User > negate(stars="0",type="placetostay",kind="hotel")
   Turn 4
   Usr > [(u'negate(stars="0",type="placetostay",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="cityroomz",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="kirkwood house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 6
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="acorn guest house",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay",stars="0",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="0",kind="hotel")
   Turn 4
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 3
   Usr > [('negate(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [('affirm()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 7
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 8
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > reqmore()
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 3
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="ashley hotel",stars="2")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 5
   Usr > [(u'request(postcode)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse40",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse61",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel64",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel69",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 10
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse84",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel90",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 13
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 14
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel112",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel133",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse136",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel152",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel156",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 19
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel160",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 20
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel168",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 21
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel208",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 22
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel212",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 23
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse214",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 24
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 25
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse219",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="3") [1.000000]
   User > inform(="dontcare",stars="3")
   Turn 4
   Usr > [('inform(="dontcare",stars="3")', 1.0)]
   Sys > reqmore()
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 7
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [('affirm()', 1.0)]
   Sys > reqmore()
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 3
   Usr > [(u'request(phone)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",kind="hotel") [1.000000]
   User > inform(pricerange="moderate",kind="hotel")
   Turn 4
   Usr > [('inform(pricerange="moderate",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 5
   Usr > [(u'request(phone)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 7
   Usr > [(u'request(phone)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel92",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 9
   Usr > [('ack()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse97",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 11
   Usr > [('ack()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse142",stars="4")
   Semi > request(phone,price) [1.000000]
   User > request(phone,price)
   Turn 13
   Usr > [(u'request(phone,price)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 14
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 16
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 17
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 18
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 19
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -19, suc = 0, turn = 19
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="4",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",stars="4",kind="hotel")
   Turn 3
   Usr > [('inform(pricerange="expensive",stars="4",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive",type="placetostay",stars="4",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="4",kind="hotel")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 3
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > confirm(stars="4")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 4
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="0",type="placetostay",kind="hotel") [1.000000]
   User > negate(stars="0",type="placetostay",kind="hotel")
   Turn 5
   Usr > [(u'negate(stars="0",type="placetostay",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="cityroomz",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",kind="guesthouse")
   Turn 2
   Usr > [('inform(pricerange="moderate",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 3
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive",stars="0") [1.000000]
   User > inform(pricerange="expensive",stars="0")
   Turn 2
   Usr > [('inform(pricerange="expensive",stars="0")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",kind="guesthouse") [1.000000]
   User > inform(pricerange="expensive",kind="guesthouse")
   Turn 3
   Usr > [('inform(pricerange="expensive",kind="guesthouse")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel",stars="3") [1.000000]
   User > inform(kind="hotel",stars="3")
   Turn 4
   Usr > [('inform(kind="hotel",stars="3")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [('affirm()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 7
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 8
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 9
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 5
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 6
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="kirkwood house",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 7
   Usr > [(u'request(price)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 4
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 8
   Usr > [(u'request(phone)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 10
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > request(phone,hasinternet) [1.000000]
   User > request(phone,hasinternet)
   Turn 12
   Usr > [(u'request(phone,hasinternet)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 13
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 14
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 15
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare",kind="guesthouse",pricerange="expensive") [1.000000]
   User > inform(hasparking="dontcare",kind="guesthouse",pricerange="expensive")
   Turn 2
   Usr > [('inform(hasparking="dontcare",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",stars="2") [1.000000]
   User > inform(pricerange="moderate",stars="2")
   Turn 2
   Usr > [('inform(pricerange="moderate",stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="ashley hotel",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse40",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse61",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 4
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="4") [1.000000]
   User > inform(pricerange="expensive",stars="4")
   Turn 5
   Usr > [('inform(pricerange="expensive",stars="4")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="4") [1.000000]
   User > inform(pricerange="expensive",stars="4")
   Turn 4
   Usr > [('inform(pricerange="expensive",stars="4")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",kind="guesthouse") [1.000000]
   User > inform(pricerange="expensive",kind="guesthouse")
   Turn 5
   Usr > [('inform(pricerange="expensive",kind="guesthouse")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay",stars="4") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="4")
   Turn 3
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="4")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",kind="hotel")
   Turn 4
   Usr > [('inform(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 3
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="ashley hotel",stars="2")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 5
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse40",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse40",stars="2")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 8
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse61",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 10
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel64",stars="2")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 12
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 13
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel69",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 14
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 15
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse84",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 16
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 17
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel90",stars="2")
   Semi > confirm(name="hotel64") [1.000000]
   User > confirm(name="hotel64")
   Turn 18
   Usr > [('confirm(name="hotel64")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 19
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel90",stars="2")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 20
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 21
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel90",stars="2")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 22
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 23
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel90",stars="2")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 24
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 25
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="hotel90",stars="2")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 3
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",stars="4") [1.000000]
   User > inform(pricerange="moderate",stars="4")
   Turn 6
   Usr > [('inform(pricerange="moderate",stars="4")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",kind="hotel") [1.000000]
   User > inform(pricerange="moderate",kind="hotel")
   Turn 9
   Usr > [('inform(pricerange="moderate",kind="hotel")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap",kind="hotel") [1.000000]
   User > inform(pricerange="cheap",kind="hotel")
   Turn 2
   Usr > [('inform(pricerange="cheap",kind="hotel")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 7
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="kirkwood house",stars="4")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 5
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="acorn guest house",stars="4")
   Semi > confirm(name="kirkwood house") [1.000000]
   User > confirm(name="kirkwood house")
   Turn 6
   Usr > [('confirm(name="kirkwood house")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="acorn guest house",stars="4")
   Semi > request(price,name="acorn guest house") [1.000000]
   User > request(price,name="acorn guest house")
   Turn 8
   Usr > [(u'request(price,name="acorn guest house")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="acorn guest house",stars="4")
   Semi > request(price,addr) [1.000000]
   User > request(price,addr)
   Turn 10
   Usr > [(u'request(price,addr)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 12
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 13
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 14
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 15
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 5
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap",type="placetostay",stars="0") [1.000000]
   User > inform(pricerange="cheap",type="placetostay",stars="0")
   Turn 5
   Usr > [(u'inform(pricerange="cheap",type="placetostay",stars="0")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 7
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap",type="placetostay") [1.000000]
   User > inform(pricerange="cheap",type="placetostay")
   Turn 6
   Usr > [(u'inform(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="4",kind="guesthouse")
   Turn 4
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 19:09:07: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 19:09:07: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -7.61 +- 1.40
RESULTS:: 19:09:07: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -7.61 +- 1.40
Average success = 1.00 +- 1.97
RESULTS:: 19:09:07: root                               EvaluationManager.py <_prstr>207 :  Average success = 1.00 +- 1.97
Average turns   = 9.01 +- 0.84
RESULTS:: 19:09:07: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 9.01 +- 0.84
RESULTS:: 19:09:07: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.36->env11-dqn-CH-MLN-00.37: iter=36, error-rate=0, num-dialogs=100 ***
RESULTS:: 19:09:07: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.36->env11-dqn-CH-MLN-00.37: iter=36, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.36.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.36
loaded replay size:  5023
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap",stars="3") [1.000000]
   User > inform(pricerange="cheap",stars="3")
   Turn 2
   Usr > [('inform(pricerange="cheap",stars="3")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay",stars="2") [1.000000]
   User > inform(pricerange="moderate",type="placetostay",stars="2")
   Turn 3
   Usr > [(u'inform(pricerange="moderate",type="placetostay",stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(stars="4")
   Semi > inform(stars="3",kind="hotel",pricerange="expensive") [1.000000]
   User > inform(stars="3",kind="hotel",pricerange="expensive")
   Turn 2
   Usr > [('inform(stars="3",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="3") [1.000000]
   User > inform(="dontcare",stars="3")
   Turn 3
   Usr > [('inform(="dontcare",stars="3")', 1.0)]
   Sys > reqmore()
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [('affirm()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 7
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 4
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="leverton house",stars="4",area="east")
   Semi > confirm(stars="2") [1.000000]
   User > confirm(stars="2")
   Turn 5
   Usr > [('confirm(stars="2")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="rosa's bed and breakfast",stars="4",area="south")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 7
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="guesthouse37",stars="2",area="south")
   Semi > inform(type="placetostay",kind="hotel") [1.000000]
   User > inform(type="placetostay",kind="hotel")
   Turn 8
   Usr > [(u'inform(type="placetostay",kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse60",area="south",kind="hotel",pricerange="cheap",stars="2")
   Semi > confirm(name="guesthouse37") [1.000000]
   User > confirm(name="guesthouse37")
   Turn 9
   Usr > [('confirm(name="guesthouse37")', 1.0)]
   Sys > inform(hasparking="1",name="hotel62",area="centre",kind="hotel",pricerange="cheap",stars="2")
   Semi > confirm(name="guesthouse37") [1.000000]
   User > confirm(name="guesthouse37")
   Turn 10
   Usr > [('confirm(name="guesthouse37")', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse76",area="west",kind="hotel",pricerange="cheap",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap",type="placetostay") [1.000000]
   User > inform(pricerange="cheap",type="placetostay")
   Turn 5
   Usr > [(u'inform(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap",stars="4") [1.000000]
   User > inform(pricerange="cheap",stars="4")
   Turn 6
   Usr > [('inform(pricerange="cheap",stars="4")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 7
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0",type="placetostay",kind="guesthouse") [1.000000]
   User > negate(stars="0",type="placetostay",kind="guesthouse")
   Turn 3
   Usr > [(u'negate(stars="0",type="placetostay",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 4
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 9
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > confirm(stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 7
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 8
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay",stars="4") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="4")
   Turn 4
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="4")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",kind="hotel")
   Turn 5
   Usr > [('inform(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 3
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4",area="north")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 4
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0",area="centre")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="0",pricerange="moderate") [1.000000]
   User > inform(stars="0",pricerange="moderate")
   Turn 6
   Usr > [('inform(stars="0",pricerange="moderate")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 7
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse41",stars="0",area="west")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="4",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",stars="4",kind="hotel")
   Turn 3
   Usr > [('inform(pricerange="expensive",stars="4",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 7
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 9
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 10
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse",type="placetostay") [1.000000]
   User > inform(kind="guesthouse",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="guesthouse",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="0",pricerange="moderate") [1.000000]
   User > inform(="dontcare",stars="0",pricerange="moderate")
   Turn 3
   Usr > [('inform(="dontcare",stars="0",pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse42",area="centre",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse74",area="centre",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 10, suc = 1, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap",stars="4",kind="hotel") [1.000000]
   User > inform(pricerange="cheap",stars="4",kind="hotel")
   Turn 2
   Usr > [('inform(pricerange="cheap",stars="4",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 3
   Usr > [(u'request(phone)', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 4
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 7
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(area)
   Semi > inform(stars="3",type="placetostay",kind="guesthouse") [1.000000]
   User > inform(stars="3",type="placetostay",kind="guesthouse")
   Turn 3
   Usr > [(u'inform(stars="3",type="placetostay",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hobsons house",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 7
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 9
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 10
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 11
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 13
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 14
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 16
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 17
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 18
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 19
   Usr > [('inform(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 20
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -20, suc = 0, turn = 20
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay",stars="4") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="4")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay",stars="4")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap",kind="hotel") [1.000000]
   User > inform(pricerange="cheap",kind="hotel")
   Turn 3
   Usr > [('inform(pricerange="cheap",kind="hotel")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4",area="west")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 5
   Usr > [(u'request(addr)', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > reqmore()
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 7
   Usr > [(u'request(addr)', 1.0)]
   Sys > request(stars)
   Semi > request(name="the cambridge belfry",addr) [1.000000]
   User > request(name="the cambridge belfry",addr)
   Turn 8
   Usr > [(u'request(name="the cambridge belfry",addr)', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 9
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 12
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 14
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 15
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 16
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 17
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > reqmore()
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 18
   Usr > [(u'request(addr)', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 19
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="the cambridge belfry",addr="back lane, cambourne")
   Semi > bye() [1.000000]
   User > bye()
   Turn 20
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 0, suc = 1, turn = 20
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 3
   Usr > [('inform(stars="0")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 5
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0",area="centre")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 6
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse41",stars="0",area="west")
   Semi > request(hasinternet,postcode) [1.000000]
   User > request(hasinternet,postcode)
   Turn 8
   Usr > [(u'request(hasinternet,postcode)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 9
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="limehouse",kind="guesthouse")
   Semi > negate(stars="2") [1.000000]
   User > negate(stars="2")
   Turn 4
   Usr > [('negate(stars="2")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > inform(hasparking="0",stars="2",pricerange="moderate",name="guesthouse61",kind="guesthouse")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 6
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="expensive",name="guesthouse49",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 8
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 9
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 10
   Usr > [('inform(stars="2")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 11
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 12
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse49",addr="guesthouse49addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 14
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 15
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -16, suc = 0, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4",area="north")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(stars)
   Semi > request(name="limehouse",hasinternet) [1.000000]
   User > request(name="limehouse",hasinternet)
   Turn 5
   Usr > [(u'request(name="limehouse",hasinternet)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(area)
   Semi > request(name="limehouse",hasinternet) [1.000000]
   User > request(name="limehouse",hasinternet)
   Turn 10
   Usr > [(u'request(name="limehouse",hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 5
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap",type="placetostay") [1.000000]
   User > inform(pricerange="cheap",type="placetostay")
   Turn 3
   Usr > [(u'inform(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 4
   Usr > [('negate(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",pricerange="cheap",name="hotel34",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 7
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 8
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 9
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",name="hotel50",area="south",kind="hotel",pricerange="cheap",stars="3")
   Semi > request(postcode,name="hotel50") [1.000000]
   User > request(postcode,name="hotel50")
   Turn 10
   Usr > [(u'request(postcode,name="hotel50")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse63",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 3
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 17, suc = 1, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 2
   Usr > [('negate(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 6
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="guesthouse") [1.000000]
   User > affirm(kind="guesthouse")
   Turn 7
   Usr > [('affirm(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 10, suc = 1, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="0",kind="guesthouse") [1.000000]
   User > inform(="dontcare",stars="0",kind="guesthouse")
   Turn 2
   Usr > [('inform(="dontcare",stars="0",kind="guesthouse")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="0",pricerange="moderate",name="guesthouse74",kind="guesthouse")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",name="hotel78",area="north",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse94",area="north",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse108",area="east",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse116",area="east",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse121",area="west",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse143",area="south",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse153",area="south",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse223",area="west",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="none",name!="guesthouse42",name!="guesthouse74",name!="hotel78",name!="guesthouse94",name!="guesthouse108",name!="guesthouse116",name!="guesthouse121",name!="guesthouse143",name!="guesthouse153",name!="guesthouse223",hasparking="dontcare",pricerange="moderate",kind="guesthouse",stars="0",area="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 19
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 1, suc = 1, turn = 19
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="4",kind="hotel") [1.000000]
   User > negate(hasparking="dontcare",stars="4",kind="hotel")
   Turn 2
   Usr > [('negate(hasparking="dontcare",stars="4",kind="hotel")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm(pricerange="expensive") [1.000000]
   User > affirm(pricerange="expensive")
   Turn 4
   Usr > [('affirm(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",kind="guesthouse") [1.000000]
   User > inform(="dontcare",kind="guesthouse")
   Turn 2
   Usr > [('inform(="dontcare",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="limehouse",stars="4",area="north")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 3
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4",area="west")
   Semi > reqalts(area="dontcare") [1.000000]
   User > reqalts(area="dontcare")
   Turn 5
   Usr > [('reqalts(area="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 6
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 2
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="3",kind="hotel") [1.000000]
   User > inform(stars="3",kind="hotel")
   Turn 3
   Usr > [('inform(stars="3",kind="hotel")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 4
   Usr > [('negate(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 5
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse43",stars="3")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 7
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 8
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse43",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 9
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse43",stars="3")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 10
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse43",stars="3")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 12
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse43",stars="3")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 13
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 14
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse43",stars="3")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 15
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse43",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -16, suc = 0, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",kind="hotel")
   Semi > inform(kind="hotel",pricerange="expensive") [1.000000]
   User > inform(kind="hotel",pricerange="expensive")
   Turn 5
   Usr > [('inform(kind="hotel",pricerange="expensive")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",pricerange="expensive")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",kind="hotel")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 7
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="university arms hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 4
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(postcode,name="huntingdon marriott hotel") [1.000000]
   User > request(postcode,name="huntingdon marriott hotel")
   Turn 5
   Usr > [(u'request(postcode,name="huntingdon marriott hotel")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",kind="hotel",postcode="pe29 6fl")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 3
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(stars="0",stars="3")
   Semi > inform(stars="0",type="placetostay") [1.000000]
   User > inform(stars="0",type="placetostay")
   Turn 7
   Usr > [(u'inform(stars="0",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 3
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 5
   Usr > [('inform(stars="4")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 6
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > negate(stars="0",type="placetostay") [1.000000]
   User > negate(stars="0",type="placetostay")
   Turn 3
   Usr > [(u'negate(stars="0",type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",kind="hotel") [1.000000]
   User > inform(="dontcare",kind="hotel")
   Turn 4
   Usr > [('inform(="dontcare",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > reqmore()
   Semi > affirm(stars="3") [1.000000]
   User > affirm(stars="3")
   Turn 3
   Usr > [('affirm(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="guesthouse") [1.000000]
   User > inform(="dontcare",kind="guesthouse")
   Turn 5
   Usr > [('inform(="dontcare",kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 14
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="2") [1.000000]
   User > affirm(stars="2")
   Turn 2
   Usr > [('affirm(stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="ashley hotel",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="ashley hotel",stars="2")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 5
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse40",stars="2")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 6
   Usr > [(u'request(addr)', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel64",stars="2")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 8
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel64",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 9
   Usr > [('ack()', 1.0)]
   Sys > request(kind)
   Semi > request(name="hotel64",addr) [1.000000]
   User > request(name="hotel64",addr)
   Turn 10
   Usr > [(u'request(name="hotel64",addr)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel64",stars="2")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 11
   Usr > [(u'request(addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="3") [1.000000]
   User > affirm(stars="3")
   Turn 2
   Usr > [('affirm(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="guesthouse") [1.000000]
   User > inform(="dontcare",kind="guesthouse")
   Turn 3
   Usr > [('inform(="dontcare",kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 4
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",postcode="pe29 6fl")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 8
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 9
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 10
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 4
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(stars="3",kind="hotel") [1.000000]
   User > inform(stars="3",kind="hotel")
   Turn 6
   Usr > [('inform(stars="3",kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 7
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > negate(stars="0",pricerange="moderate") [1.000000]
   User > negate(stars="0",pricerange="moderate")
   Turn 3
   Usr > [('negate(stars="0",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 4
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 5
   Usr > [(u'request(price)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0",kind="guesthouse",pricerange="moderate") [1.000000]
   User > negate(stars="0",kind="guesthouse",pricerange="moderate")
   Turn 3
   Usr > [('negate(stars="0",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 4
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="0") [1.000000]
   User > inform(pricerange="expensive",stars="0")
   Turn 2
   Usr > [('inform(pricerange="expensive",stars="0")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 3
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="hotel33",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="hotel33",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="hotel33",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="hotel33",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > affirm(type="placetostay",stars="3",kind="hotel")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse43",stars="3")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(name="guesthouse43") [1.000000]
   User > inform(name="guesthouse43")
   Turn 4
   Usr > [('inform(name="guesthouse43")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse47",stars="3")
   Semi > confirm(name="guesthouse43") [1.000000]
   User > confirm(name="guesthouse43")
   Turn 6
   Usr > [('confirm(name="guesthouse43")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse47",stars="3")
   Semi > confirm(name="guesthouse43") [1.000000]
   User > confirm(name="guesthouse43")
   Turn 7
   Usr > [('confirm(name="guesthouse43")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse47",stars="3")
   Semi > confirm(name="guesthouse43") [1.000000]
   User > confirm(name="guesthouse43")
   Turn 8
   Usr > [('confirm(name="guesthouse43")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse47",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="4") [1.000000]
   User > affirm(type="placetostay",stars="4")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 4
   Usr > [('inform(stars="4")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel92",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 2
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse89",postcode="guesthouse89postcode")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 16, suc = 1, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 3
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(postcode,name="lovell lodge") [1.000000]
   User > request(postcode,name="lovell lodge")
   Turn 4
   Usr > [(u'request(postcode,name="lovell lodge")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 5
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 6
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 7
   Usr > [(u'request(postcode)', 1.0)]
   Sys > request(area)
   Semi > request(name="lovell lodge",postcode) [1.000000]
   User > request(name="lovell lodge",postcode)
   Turn 8
   Usr > [(u'request(name="lovell lodge",postcode)', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(postcode,name="lovell lodge") [1.000000]
   User > request(postcode,name="lovell lodge")
   Turn 9
   Usr > [(u'request(postcode,name="lovell lodge")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 11
   Usr > [('thankyou()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 13
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="ashley hotel",stars="2")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 14
   Usr > [(u'request(postcode)', 1.0)]
   Sys > confirm(area="north")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(area="north")', 1.0)]
   Sys > inform(pricerange="moderate",name="ashley hotel",stars="2",area="north")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 16
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="ashley hotel",stars="2",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 17
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -17, suc = 0, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 2
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse142",pricerange="moderate")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 3
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse142",stars="4")
   Semi > inform(pricerange="expensive",type="placetostay",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",kind="hotel")
   Turn 4
   Usr > [(u'inform(pricerange="expensive",type="placetostay",kind="hotel")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse142",addr="guesthouse142addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse142",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse142",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse142",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse142",postcode="guesthouse142postcode")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 10
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse142",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse142",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 13
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="guesthouse142",area="south")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse142",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse142",pricerange="moderate")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 16
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="guesthouse142",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse142",area="south")
   Semi > confirm(name="guesthouse142") [1.000000]
   User > confirm(name="guesthouse142")
   Turn 18
   Usr > [('confirm(name="guesthouse142")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -18, suc = 0, turn = 18
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 3
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse40",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel64",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel69",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel112",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel152",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel156",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel160",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel168",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse214",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="none",name!="lovell lodge",name!="ashley hotel",name!="guesthouse40",name!="hotel64",name!="hotel69",name!="hotel112",name!="hotel152",name!="hotel156",name!="hotel160",name!="hotel168",name!="guesthouse214",kind="hotel",pricerange="moderate",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 16
   Usr > [('thankyou()', 1.0)]
   Sys > request(stars)
   Semi > request(name="ashley hotel",price) [1.000000]
   User > request(name="ashley hotel",price)
   Turn 17
   Usr > [(u'request(name="ashley hotel",price)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse214",stars="2")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 18
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse214",stars="2")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 19
   Usr > [(u'request(price)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -19, suc = 0, turn = 19
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(price,addr) [1.000000]
   User > request(price,addr)
   Turn 3
   Usr > [(u'request(price,addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap",stars="4") [1.000000]
   User > negate(pricerange="cheap",stars="4")
   Turn 2
   Usr > [('negate(pricerange="cheap",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay",stars="3") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay",stars="3")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay",stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="hotel",pricerange="expensive") [1.000000]
   User > affirm(kind="hotel",pricerange="expensive")
   Turn 3
   Usr > [('affirm(kind="hotel",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="gonville hotel",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(name="gonville hotel",postcode="cb1 1ly")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="hotel59",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 9
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="hotel86",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="expensive",name="hotel96",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="expensive",name="hotel100",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="expensive",name="guesthouse157",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 15
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 16
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="expensive",name="hotel172",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 18
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="hotel172",price="hotel172price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 19
   Usr > [('reqalts()', 1.0)]
   Sys > request(area)
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 20
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse187",area="east",kind="hotel",pricerange="expensive",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 21
   Usr > [('reqalts()', 1.0)]
   Sys > request(area)
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 22
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse204",area="west",kind="hotel",pricerange="expensive",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 23
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="none",name!="the lensfield hotel",name!="gonville hotel",name!="hotel59",name!="hotel86",name!="hotel96",name!="hotel100",name!="guesthouse157",name!="hotel172",name!="guesthouse187",name!="guesthouse204",hasparking="dontcare",pricerange="expensive",kind="hotel",stars="3",area="dontcare")
   Semi > request(name="gonville hotel",postcode) [1.000000]
   User > request(name="gonville hotel",postcode)
   Turn 24
   Usr > [('request(name="gonville hotel",postcode)', 1.0)]
   Sys > inform(name="gonville hotel",postcode="cb1 1ly")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 25
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="gonville hotel",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 1, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 5
   Usr > [('inform(stars="4")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 6
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4",area="west")
   Semi > inform(kind="guesthouse",pricerange="expensive") [1.000000]
   User > inform(kind="guesthouse",pricerange="expensive")
   Turn 7
   Usr > [('inform(kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 8
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse36",area="north",kind="guesthouse",pricerange="expensive",stars="4")
   Semi > confirm(name="huntingdon marriott hotel") [1.000000]
   User > confirm(name="huntingdon marriott hotel")
   Turn 9
   Usr > [('confirm(name="huntingdon marriott hotel")', 1.0)]
   Sys > bye()
Saving deepq-network...
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 19:14:38: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 19:14:38: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -2.65 +- 1.47
RESULTS:: 19:14:38: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -2.65 +- 1.47
Average success = 7.00 +- 5.06
RESULTS:: 19:14:38: root                               EvaluationManager.py <_prstr>207 :  Average success = 7.00 +- 5.06
Average turns   = 5.65 +- 1.10
RESULTS:: 19:14:38: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 5.65 +- 1.10
*** Evaluating env11-dqn-CH-MLN-00.37: error-rate=0 num-dialogs=100 ***
RESULTS:: 19:14:38: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.37: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.37.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.37
loaded replay size:  5488
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap",stars="3") [1.000000]
   User > negate(pricerange="cheap",stars="3")
   Turn 2
   Usr > [('negate(pricerange="cheap",stars="3")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 4
   Usr > [(u'request(addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse40",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel64",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel69",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel112",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel152",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel156",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel160",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel168",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse214",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="none",name!="lovell lodge",name!="ashley hotel",name!="guesthouse40",name!="hotel64",name!="hotel69",name!="hotel112",name!="hotel152",name!="hotel156",name!="hotel160",name!="hotel168",name!="guesthouse214",kind="hotel",pricerange="moderate",stars="2")
   Semi > request(name="ashley hotel",hasinternet) [1.000000]
   User > request(name="ashley hotel",hasinternet)
   Turn 13
   Usr > [(u'request(name="ashley hotel",hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 3
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 4
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="3",pricerange="moderate") [1.000000]
   User > inform(="dontcare",stars="3",pricerange="moderate")
   Turn 5
   Usr > [('inform(="dontcare",stars="3",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 6
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="0") [1.000000]
   User > affirm(stars="0")
   Turn 2
   Usr > [('affirm(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts(pricerange="dontcare") [1.000000]
   User > reqalts(pricerange="dontcare")
   Turn 3
   Usr > [('reqalts(pricerange="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="cheap",type="placetostay",stars="4") [1.000000]
   User > inform(pricerange="cheap",type="placetostay",stars="4")
   Turn 2
   Usr > [(u'inform(pricerange="cheap",type="placetostay",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="0") [1.000000]
   User > affirm(type="placetostay",stars="0")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",type="placetostay",stars="4") [1.000000]
   User > negate(pricerange="expensive",type="placetostay",stars="4")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 6
   Usr > [(u'request(addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap",type="placetostay") [1.000000]
   User > negate(pricerange="cheap",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 4
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="gonville hotel",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="hotel59",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="2",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse49",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse49",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse49",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts(pricerange="dontcare") [1.000000]
   User > reqalts(pricerange="dontcare")
   Turn 3
   Usr > [('reqalts(pricerange="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0",type="placetostay") [1.000000]
   User > negate(stars="0",type="placetostay")
   Turn 3
   Usr > [(u'negate(stars="0",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse41",stars="0")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 5
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="guesthouse41",postcode="guesthouse41postcode")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 6
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse46",stars="0")
   Semi > confirm(name="guesthouse41") [1.000000]
   User > confirm(name="guesthouse41")
   Turn 7
   Usr > [('confirm(name="guesthouse41")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse46",stars="0")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 8
   Usr > [(u'request(postcode)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 4
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 4
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="3") [1.000000]
   User > inform(="dontcare",stars="3")
   Turn 7
   Usr > [('inform(="dontcare",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare",kind="guesthouse",pricerange="moderate") [1.000000]
   User > inform(hasparking="dontcare",kind="guesthouse",pricerange="moderate")
   Turn 8
   Usr > [('inform(hasparking="dontcare",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate") [1.000000]
   User > affirm(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(price,name="guesthouse42") [1.000000]
   User > request(price,name="guesthouse42")
   Turn 3
   Usr > [(u'request(price,name="guesthouse42")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(price,name="guesthouse42") [1.000000]
   User > request(price,name="guesthouse42")
   Turn 4
   Usr > [(u'request(price,name="guesthouse42")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 5
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 7
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="cheap",type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > inform(pricerange="cheap",type="placetostay",stars="4",kind="guesthouse")
   Turn 2
   Usr > [(u'inform(pricerange="cheap",type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="leverton house",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 3
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 17, suc = 1, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",type="placetostay") [1.000000]
   User > negate(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",type="placetostay") [1.000000]
   User > negate(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 6
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="4") [1.000000]
   User > inform(pricerange="expensive",stars="4")
   Turn 2
   Usr > [('inform(pricerange="expensive",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3",kind="guesthouse",pricerange="moderate") [1.000000]
   User > negate(stars="3",kind="guesthouse",pricerange="moderate")
   Turn 3
   Usr > [('negate(stars="3",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="guesthouse",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="2",kind="guesthouse",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse49",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 2
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 18, suc = 1, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 4
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(hasinternet,name="cityroomz") [1.000000]
   User > request(hasinternet,name="cityroomz")
   Turn 6
   Usr > [(u'request(hasinternet,name="cityroomz")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 3
   Usr > [('negate(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 5
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 2
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 6
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 7
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="cheap",type="placetostay") [1.000000]
   User > inform(pricerange="cheap",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="4",kind="hotel") [1.000000]
   User > affirm(stars="4",kind="hotel")
   Turn 2
   Usr > [('affirm(stars="4",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > reqalts(stars="dontcare") [1.000000]
   User > reqalts(stars="dontcare")
   Turn 3
   Usr > [('reqalts(stars="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > confirm(name="lovell lodge") [1.000000]
   User > confirm(name="lovell lodge")
   Turn 6
   Usr > [('confirm(name="lovell lodge")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > confirm(name="lovell lodge") [1.000000]
   User > confirm(name="lovell lodge")
   Turn 7
   Usr > [('confirm(name="lovell lodge")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 8
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(kind="hotel",pricerange="moderate") [1.000000]
   User > affirm(kind="hotel",pricerange="moderate")
   Turn 2
   Usr > [('affirm(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 3
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 17, suc = 1, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 3
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="cityroomz",kind="hotel",price="a single room ranges from 47 pounds 50 and to 50 pounds and a cheapest double room is 67 pounds 50 and a cheapest family room is 77 pounds 50")
   Semi > inform(kind="guesthouse",pricerange="moderate") [1.000000]
   User > inform(kind="guesthouse",pricerange="moderate")
   Turn 7
   Usr > [('inform(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 8
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 9
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > affirm(type="placetostay",stars="3",kind="guesthouse")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",pricerange="moderate") [1.000000]
   User > inform(="dontcare",pricerange="moderate")
   Turn 4
   Usr > [('inform(="dontcare",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare",type="placetostay") [1.000000]
   User > inform(hasparking="dontcare",type="placetostay")
   Turn 6
   Usr > [(u'inform(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="3") [1.000000]
   User > inform(="dontcare",stars="3")
   Turn 4
   Usr > [('inform(="dontcare",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 6
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="hotel",pricerange="moderate") [1.000000]
   User > inform(="dontcare",kind="hotel",pricerange="moderate")
   Turn 7
   Usr > [('inform(="dontcare",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse47",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 10
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="hotel117",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="hotel134",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="guesthouse141",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 16
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hotel149",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 18
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hotel169",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 19
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 20
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="guesthouse190",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 21
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -21, suc = 0, turn = 21
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 4
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 5
   Usr > [(u'request(addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="3",kind="guesthouse") [1.000000]
   User > affirm(stars="3",kind="guesthouse")
   Turn 2
   Usr > [('affirm(stars="3",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",pricerange="moderate") [1.000000]
   User > inform(="dontcare",pricerange="moderate")
   Turn 3
   Usr > [('inform(="dontcare",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 3
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="ashley hotel",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse40",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse61",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse61",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse61",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse61",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 3
   Usr > [('negate(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay",kind="guesthouse") [1.000000]
   User > inform(="dontcare",type="placetostay",kind="guesthouse")
   Turn 5
   Usr > [(u'inform(="dontcare",type="placetostay",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 3
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse41",stars="0")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 5
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse46",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 3
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 8
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="3",kind="hotel",pricerange="moderate") [1.000000]
   User > affirm(stars="3",kind="hotel",pricerange="moderate")
   Turn 2
   Usr > [('affirm(stars="3",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > reqalts(hasparking="0") [1.000000]
   User > reqalts(hasparking="0")
   Turn 4
   Usr > [(u'reqalts(hasparking="0")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 5
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 7
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 8
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 6
   Usr > [(u'request(postcode)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(hasinternet,addr) [1.000000]
   User > request(hasinternet,addr)
   Turn 3
   Usr > [(u'request(hasinternet,addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="3",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",pricerange="expensive") [1.000000]
   User > inform(="dontcare",pricerange="expensive")
   Turn 2
   Usr > [('inform(="dontcare",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="guesthouse63",kind="guesthouse")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 3
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 2
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse40",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel64",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel69",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel112",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel152",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel156",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel160",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel168",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse214",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="none",name!="lovell lodge",name!="ashley hotel",name!="guesthouse40",name!="hotel64",name!="hotel69",name!="hotel112",name!="hotel152",name!="hotel156",name!="hotel160",name!="hotel168",name!="guesthouse214",kind="hotel",pricerange="moderate",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 14
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 15
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="lovell lodge",addr="365 milton road")
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 4, suc = 1, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 2
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="2",kind="hotel",pricerange="moderate") [1.000000]
   User > affirm(stars="2",kind="hotel",pricerange="moderate")
   Turn 2
   Usr > [('affirm(stars="2",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > confirm(name="lovell lodge") [1.000000]
   User > confirm(name="lovell lodge")
   Turn 4
   Usr > [('confirm(name="lovell lodge")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 5
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 7
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="4") [1.000000]
   User > affirm(type="placetostay",stars="4")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 5
   Usr > [(u'deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="cheap",type="placetostay") [1.000000]
   User > inform(pricerange="cheap",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="4") [1.000000]
   User > affirm(type="placetostay",stars="4")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(kind="hotel",pricerange="moderate") [1.000000]
   User > inform(kind="hotel",pricerange="moderate")
   Turn 3
   Usr > [('inform(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 16, suc = 1, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="4",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",stars="4",kind="hotel")
   Turn 2
   Usr > [('inform(pricerange="expensive",stars="4",kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse67",phone="1223360067")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse67",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse67",hasparking="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse67",area="west")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse67",area="west")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse67",price="guesthouse67price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse67",area="west")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 9
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse67",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",type="placetostay") [1.000000]
   User > negate(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 19:18:38: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 19:18:38: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -2.74 +- 1.15
RESULTS:: 19:18:38: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -2.74 +- 1.15
Average success = 3.00 +- 3.38
RESULTS:: 19:18:38: root                               EvaluationManager.py <_prstr>207 :  Average success = 3.00 +- 3.38
Average turns   = 4.14 +- 0.71
RESULTS:: 19:18:38: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 4.14 +- 0.71
RESULTS:: 19:18:38: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.37->env11-dqn-CH-MLN-00.38: iter=37, error-rate=0, num-dialogs=100 ***
RESULTS:: 19:18:38: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.37->env11-dqn-CH-MLN-00.38: iter=37, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.37.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.37
loaded replay size:  5488
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="2",type="placetostay") [1.000000]
   User > inform(stars="2",type="placetostay")
   Turn 3
   Usr > [(u'inform(stars="2",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 4
   Usr > [(u'request(addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0",kind="guesthouse",pricerange="moderate") [1.000000]
   User > negate(stars="0",kind="guesthouse",pricerange="moderate")
   Turn 3
   Usr > [('negate(stars="0",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 2
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive",stars="3") [1.000000]
   User > inform(pricerange="expensive",stars="3")
   Turn 3
   Usr > [('inform(pricerange="expensive",stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse",stars="3") [1.000000]
   User > inform(kind="guesthouse",stars="3")
   Turn 5
   Usr > [('inform(kind="guesthouse",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",pricerange="moderate") [1.000000]
   User > inform(="dontcare",pricerange="moderate")
   Turn 6
   Usr > [('inform(="dontcare",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 11
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > negate(pricerange="cheap",type="placetostay") [1.000000]
   User > negate(pricerange="cheap",type="placetostay")
   Turn 3
   Usr > [(u'negate(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4",area="west")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 5
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse60",stars="2",area="south")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="guesthouse60",price="guesthouse60price")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel62",stars="2",area="centre")
   Semi > confirm(name="guesthouse60") [1.000000]
   User > confirm(name="guesthouse60")
   Turn 9
   Usr > [('confirm(name="guesthouse60")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse76",stars="2",area="west")
   Semi > request(price,addr) [1.000000]
   User > request(price,addr)
   Turn 10
   Usr > [(u'request(price,addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > reqmore()
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 4
   Usr > [('inform(stars="4")', 1.0)]
   Sys > reqmore()
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 5
   Usr > [('inform(stars="3")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(stars="4",kind="hotel",pricerange="cheap") [1.000000]
   User > inform(stars="4",kind="hotel",pricerange="cheap")
   Turn 3
   Usr > [('inform(stars="4",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 16, suc = 1, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0",type="placetostay") [1.000000]
   User > negate(stars="0",type="placetostay")
   Turn 2
   Usr > [(u'negate(stars="0",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 3
   Usr > [(u'request(postcode)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive",stars="2") [1.000000]
   User > inform(pricerange="expensive",stars="2")
   Turn 2
   Usr > [('inform(pricerange="expensive",stars="2")', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 3
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse49",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 3
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4",area="north")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 5
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="leverton house",stars="4",area="east")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",name="the cambridge belfry",area="west",kind="hotel",pricerange="cheap",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 8
   Usr > [(u'request(addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="hotel200",area="south")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 2
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(price,name="limehouse") [1.000000]
   User > request(price,name="limehouse")
   Turn 3
   Usr > [(u'request(price,name="limehouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > reqalts(stars="2") [1.000000]
   User > reqalts(stars="2")
   Turn 2
   Usr > [(u'reqalts(stars="2")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="express by holiday inn cambridge",price) [1.000000]
   User > request(name="express by holiday inn cambridge",price)
   Turn 5
   Usr > [(u'request(name="express by holiday inn cambridge",price)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4",area="north")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay",stars="3",kind="hotel") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="3",kind="hotel")
   Turn 4
   Usr > [(u'inform(="dontcare",type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="0",name="hotel50",area="south",kind="hotel",pricerange="cheap",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(hasparking="1",name="hotel56",area="north",kind="hotel",pricerange="cheap",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > affirm(stars="0") [1.000000]
   User > affirm(stars="0")
   Turn 2
   Usr > [('affirm(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="hotel33",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse41",stars="0")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse41",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare",kind="hotel") [1.000000]
   User > inform(hasparking="dontcare",kind="hotel")
   Turn 2
   Usr > [('inform(hasparking="dontcare",kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 3
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",pricerange="cheap") [1.000000]
   User > negate(hasparking="dontcare",pricerange="cheap")
   Turn 4
   Usr > [('negate(hasparking="dontcare",pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 6
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 7
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 8
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 10
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 11
   Usr > [('thankyou()', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 12
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 13
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="hobsons house",phone) [1.000000]
   User > request(name="hobsons house",phone)
   Turn 14
   Usr > [(u'request(name="hobsons house",phone)', 1.0)]
   Sys > inform(hasparking="1",name="hobsons house",area="west",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 15
   Usr > [(u'request(phone)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 16
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="0",name="alpha-milton guest house",area="north",kind="guesthouse",pricerange="moderate",stars="3")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 17
   Usr > [(u'request(phone)', 1.0)]
   Sys > request(area)
   Semi > request(name="alpha-milton guest house",phone) [1.000000]
   User > request(name="alpha-milton guest house",phone)
   Turn 18
   Usr > [(u'request(name="alpha-milton guest house",phone)', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 19
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 20
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 21
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 22
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > request(stars)
   Semi > request(name="alpha-milton guest house",phone) [1.000000]
   User > request(name="alpha-milton guest house",phone)
   Turn 23
   Usr > [(u'request(name="alpha-milton guest house",phone)', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 24
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(stars)
   Semi > request(name="alpha-milton guest house",phone) [1.000000]
   User > request(name="alpha-milton guest house",phone)
   Turn 25
   Usr > [(u'request(name="alpha-milton guest house",phone)', 1.0)]
   Sys > request(area)
   Semi > request(name="alpha-milton guest house",phone) [1.000000]
   User > request(name="alpha-milton guest house",phone)
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 6
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 9
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse41",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 10
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse41",stars="0")
   Semi > request(hasinternet,name="guesthouse41") [1.000000]
   User > request(hasinternet,name="guesthouse41")
   Turn 11
   Usr > [(u'request(hasinternet,name="guesthouse41")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > reqalts(stars="dontcare") [1.000000]
   User > reqalts(stars="dontcare")
   Turn 3
   Usr > [('reqalts(stars="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 5
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay") [1.000000]
   User > negate(area="dontcare",type="placetostay")
   Turn 4
   Usr > [(u'negate(area="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",name="limehouse",area="north",kind="guesthouse",pricerange="moderate",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 5
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="1",name="leverton house",area="east",kind="guesthouse",pricerange="cheap",stars="4")
   Semi > reqalts(area="dontcare") [1.000000]
   User > reqalts(area="dontcare")
   Turn 6
   Usr > [('reqalts(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",name="rosa's bed and breakfast",area="south",kind="guesthouse",pricerange="cheap",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 7
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 3
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="hobsons house",hasinternet) [1.000000]
   User > request(name="hobsons house",hasinternet)
   Turn 5
   Usr > [(u'request(name="hobsons house",hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="lovell lodge",hasinternet="1")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 4
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(name="lovell lodge") [1.000000]
   User > confirm(name="lovell lodge")
   Turn 5
   Usr > [('confirm(name="lovell lodge")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(name="lovell lodge") [1.000000]
   User > confirm(name="lovell lodge")
   Turn 6
   Usr > [('confirm(name="lovell lodge")', 1.0)]
   Sys > inform(pricerange="expensive",name="gonville hotel",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="expensive",name="gonville hotel",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(area)
   Semi > request(name="gonville hotel",price) [1.000000]
   User > request(name="gonville hotel",price)
   Turn 9
   Usr > [(u'request(name="gonville hotel",price)', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(stars="3") [1.000000]
   User > affirm(stars="3")
   Turn 10
   Usr > [('affirm(stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="gonville hotel",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 11
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 3
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 4
   Usr > [(u'request(phone)', 1.0)]
   Sys > request(kind)
   Semi > request(name="lovell lodge",phone) [1.000000]
   User > request(name="lovell lodge",phone)
   Turn 5
   Usr > [(u'request(name="lovell lodge",phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > inform(pricerange="expensive",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",kind="hotel")
   Turn 2
   Usr > [('inform(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 3
   Usr > [(u'request(postcode)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(kind="guesthouse",stars="3") [1.000000]
   User > inform(kind="guesthouse",stars="3")
   Turn 2
   Usr > [('inform(kind="guesthouse",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 3
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 7
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 9
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 10
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="hotel82",kind="hotel")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 4
   Usr > [('negate(stars="3")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > inform(pricerange="moderate",kind="hotel") [1.000000]
   User > inform(pricerange="moderate",kind="hotel")
   Turn 5
   Usr > [('inform(pricerange="moderate",kind="hotel")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(name="the lensfield hotel",postcode="cb2 1en")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 4
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 4
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 16, suc = 1, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 3
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="3",kind="guesthouse") [1.000000]
   User > inform(stars="3",kind="guesthouse")
   Turn 3
   Usr > [('inform(stars="3",kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 5
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 7
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 9
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 10
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 11
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 13
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 15
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -16, suc = 0, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4",area="north")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4",area="west")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 4
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4",area="west")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",stars="2",pricerange="moderate") [1.000000]
   User > inform(kind="hotel",stars="2",pricerange="moderate")
   Turn 3
   Usr > [('inform(kind="hotel",stars="2",pricerange="moderate")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="moderate",name="lovell lodge",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(pricerange="moderate",stars="3") [1.000000]
   User > inform(pricerange="moderate",stars="3")
   Turn 3
   Usr > [('inform(pricerange="moderate",stars="3")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",kind="guesthouse") [1.000000]
   User > inform(="dontcare",kind="guesthouse")
   Turn 4
   Usr > [('inform(="dontcare",kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [('affirm()', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 9
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 10
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 11
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > negate(pricerange="moderate") [1.000000]
   User > negate(pricerange="moderate")
   Turn 5
   Usr > [('negate(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 6
   Usr > [(u'request(postcode)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 3
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 16, suc = 1, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="4",pricerange="expensive") [1.000000]
   User > inform(stars="4",pricerange="expensive")
   Turn 5
   Usr > [('inform(stars="4",pricerange="expensive")', 1.0)]
   Sys > request(stars)
   Semi > request(name="huntingdon marriott hotel",addr) [1.000000]
   User > request(name="huntingdon marriott hotel",addr)
   Turn 6
   Usr > [(u'request(name="huntingdon marriott hotel",addr)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 7
   Usr > [(u'request(addr)', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="huntingdon marriott hotel",addr) [1.000000]
   User > request(name="huntingdon marriott hotel",addr)
   Turn 8
   Usr > [(u'request(name="huntingdon marriott hotel",addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 2
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare",type="placetostay",pricerange="expensive") [1.000000]
   User > inform(="dontcare",type="placetostay",pricerange="expensive")
   Turn 5
   Usr > [(u'inform(="dontcare",type="placetostay",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="cityroomz",stars="0",area="centre")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="guesthouse41",stars="0",area="west")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="guesthouse42",stars="0",area="centre")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 9
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse46",area="north",kind="hotel",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0",pricerange="moderate") [1.000000]
   User > inform(stars="0",pricerange="moderate")
   Turn 11
   Usr > [('inform(stars="0",pricerange="moderate")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 12
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",name="hotel68",area="west",kind="hotel",pricerange="moderate",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 13
   Usr > [('thankyou()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 14
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 15
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse80",area="north",kind="hotel",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="hotel81",area="east",kind="hotel",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse88",area="south",kind="hotel",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse88",area="south",kind="hotel",pricerange="moderate",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 19
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -19, suc = 0, turn = 19
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay",stars="0") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay",stars="0")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay",stars="0")', 1.0)]
   Sys > inform(hasparking="0",pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 3
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > confirm(name="cityroomz") [1.000000]
   User > confirm(name="cityroomz")
   Turn 4
   Usr > [('confirm(name="cityroomz")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 5
   Usr > [(u'request(price)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive",type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="0",kind="guesthouse")
   Turn 3
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 3
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 4
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 9
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 10
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 3
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="2") [1.000000]
   User > negate(hasparking="dontcare",stars="2")
   Turn 2
   Usr > [('negate(hasparking="dontcare",stars="2")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(stars="2",stars="0")
   Semi > inform(stars="2",pricerange="moderate") [1.000000]
   User > inform(stars="2",pricerange="moderate")
   Turn 6
   Usr > [('inform(stars="2",pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="moderate",name="guesthouse40",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(name="guesthouse204",hasinternet="1")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 3
   Usr > [(u'request(phone)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay",stars="4") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay",stars="4")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay",stars="4")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",kind="hotel")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 5
   Usr > [('deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 3
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel",pricerange="moderate") [1.000000]
   User > inform(kind="hotel",pricerange="moderate")
   Turn 2
   Usr > [('inform(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse40",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel64",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 8
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel69",stars="2",area="south")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",name="hotel112",area="north",kind="hotel",pricerange="moderate",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="hotel152",area="centre",kind="hotel",pricerange="moderate",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="hotel156",area="south",kind="hotel",pricerange="moderate",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="hotel160",area="east",kind="hotel",pricerange="moderate",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",name="hotel168",area="centre",kind="hotel",pricerange="moderate",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel168",phone="12233600168")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 18
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse214",area="west",kind="hotel",pricerange="moderate",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 19
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="none",name!="lovell lodge",name!="ashley hotel",name!="guesthouse40",name!="hotel64",name!="hotel69",name!="hotel112",name!="hotel152",name!="hotel156",name!="hotel160",name!="hotel168",name!="guesthouse214",hasparking="dontcare",pricerange="moderate",kind="hotel",stars="2",area="dontcare")
   Semi > ack() [1.000000]
   User > ack()
   Turn 20
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="1",name="lovell lodge",area="north",kind="hotel",pricerange="moderate",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 21
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -1, suc = 1, turn = 21
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(stars="4",kind="hotel") [1.000000]
   User > affirm(stars="4",kind="hotel")
   Turn 2
   Usr > [('affirm(stars="4",kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 3
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse199",price="guesthouse199price")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 4
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="guesthouse199",postcode="guesthouse199postcode")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="huntingdon marriott hotel",kind="hotel")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 6
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",pricerange="expensive")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 7
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",area="west")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="4",kind="hotel") [1.000000]
   User > negate(hasparking="dontcare",stars="4",kind="hotel")
   Turn 2
   Usr > [('negate(hasparking="dontcare",stars="4",kind="hotel")', 1.0)]
   Sys > inform(name="hotel86",stars="3")
   Semi > negate(stars="4") [1.000000]
   User > negate(stars="4")
   Turn 3
   Usr > [('negate(stars="4")', 1.0)]
   Sys > inform(name="hotel86",price="hotel86price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel86",postcode="hotel86postcode")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 5
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 6
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(hasparking="1",name="huntingdon marriott hotel",area="west",kind="hotel",pricerange="expensive",stars="4")
   Semi > deny(pricerange="expensive",pricerange="moderate") [1.000000]
   User > deny(pricerange="expensive",pricerange="moderate")
   Turn 7
   Usr > [('deny(pricerange="expensive",pricerange="moderate")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 8
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(hasparking="1",name="hotel82",area="north",kind="hotel",pricerange="moderate",stars="4")
   Semi > request(phone,name="hotel82") [1.000000]
   User > request(phone,name="hotel82")
   Turn 9
   Usr > [(u'request(phone,name="hotel82")', 1.0)]
   Sys > inform(name="hotel82",phone="1223360082")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 10
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > reqmore()
   Semi > negate() [1.000000]
   User > negate()
   Turn 11
   Usr > [('negate()', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse89",area="east",kind="hotel",pricerange="moderate",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="hotel92",area="south",kind="hotel",pricerange="moderate",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 15
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse97",area="centre",kind="hotel",pricerange="moderate",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse142",area="south",kind="hotel",pricerange="moderate",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 18
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 19
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 20
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",name="hotel163",area="west",kind="hotel",pricerange="moderate",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 21
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 22
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",name="hotel165",area="centre",kind="hotel",pricerange="moderate",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 23
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse191",area="east",kind="hotel",pricerange="moderate",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 24
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 25
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",name="hotel193",area="west",kind="hotel",pricerange="moderate",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > reqmore()
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 5
   Usr > [('inform(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 2
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="cheap",type="placetostay") [1.000000]
   User > inform(pricerange="cheap",type="placetostay")
   Turn 3
   Usr > [(u'inform(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 7
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 16
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 18
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 19
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 20
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 21
   Usr > [('reqalts()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 22
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 23
   Usr > [('reqalts()', 1.0)]
   Sys > reqmore()
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 24
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",name="the cambridge belfry",area="west",kind="hotel",pricerange="cheap",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 25
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 1, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="guesthouse49",pricerange="expensive")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse49",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 6
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(hasparking="1",name="the lensfield hotel",area="south",kind="hotel",pricerange="expensive",stars="3")
   Semi > inform(type="placetostay",pricerange="expensive") [1.000000]
   User > inform(type="placetostay",pricerange="expensive")
   Turn 7
   Usr > [(u'inform(type="placetostay",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",name="gonville hotel",area="centre",kind="hotel",pricerange="expensive",stars="3")
   Semi > confirm(name="the lensfield hotel") [1.000000]
   User > confirm(name="the lensfield hotel")
   Turn 8
   Usr > [('confirm(name="the lensfield hotel")', 1.0)]
   Sys > inform(name="gonville hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 9
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="1",name="gonville hotel",area="centre",kind="hotel",pricerange="expensive",stars="3")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 10
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="gonville hotel",price="a single room ranges from 79 pounds and to 136 pounds and a double room ranges from 95 pounds and to 159 pounds 50 and a family room ranges from 119 pounds and to 184 pounds 50")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay",stars="4") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay",stars="4")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay",stars="4")', 1.0)]
   Sys > bye()
Saving deepq-network...
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 19:23:55: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 19:23:55: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -2.22 +- 1.47
RESULTS:: 19:23:55: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -2.22 +- 1.47
Average success = 1.00 +- 1.97
RESULTS:: 19:23:55: root                               EvaluationManager.py <_prstr>207 :  Average success = 1.00 +- 1.97
Average turns   = 4.82 +- 1.06
RESULTS:: 19:23:55: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 4.82 +- 1.06
*** Evaluating env11-dqn-CH-MLN-00.38: error-rate=0 num-dialogs=100 ***
RESULTS:: 19:23:55: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.38: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.38.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.38
loaded replay size:  5870
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="3") [1.000000]
   User > negate(hasparking="dontcare",stars="3")
   Turn 2
   Usr > [('negate(hasparking="dontcare",stars="3")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 3
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="0",pricerange="cheap",name="hotel34",stars="3")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="cheap",name="hotel50",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="guesthouse") [1.000000]
   User > inform(="dontcare",kind="guesthouse")
   Turn 3
   Usr > [('inform(="dontcare",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 4
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="hotel") [1.000000]
   User > inform(="dontcare",kind="hotel")
   Turn 2
   Usr > [('inform(="dontcare",kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="expensive",name="express by holiday inn cambridge",kind="hotel")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 3
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="0",stars="2",pricerange="cheap",name="guesthouse60",kind="hotel")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 4
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="guesthouse60",hasinternet="0")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 5
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse60",pricerange="cheap")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse60",kind="hotel")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 7
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="guesthouse60",addr="guesthouse60addr")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay",stars="4",kind="hotel") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay",stars="4",kind="hotel")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > inform(name="alpha-milton guest house",pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 3
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(name="alpha-milton guest house",addr="63 milton road")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(name="hobsons house") [1.000000]
   User > inform(name="hobsons house")
   Turn 5
   Usr > [('inform(name="hobsons house")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hobsons house",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="4") [1.000000]
   User > negate(hasparking="dontcare",stars="4")
   Turn 2
   Usr > [('negate(hasparking="dontcare",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="guesthouse",pricerange="expensive") [1.000000]
   User > inform(="dontcare",kind="guesthouse",pricerange="expensive")
   Turn 2
   Usr > [('inform(="dontcare",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 2
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay",stars="2") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay",stars="2")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay",stars="2")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="lovell lodge",postcode="cb4 1sr")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(name="lovell lodge",addr="365 milton road")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 6
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="lovell lodge",pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 7
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="lovell lodge",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 8
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(name="lovell lodge",hasparking="1")
   Semi > request(stars,addr) [1.000000]
   User > request(stars,addr)
   Turn 9
   Usr > [(u'request(stars,addr)', 1.0)]
   Sys > inform(name="lovell lodge",stars="2",addr="365 milton road")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 10
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="guesthouse63",kind="guesthouse")
   Semi > confirm(name="lovell lodge") [1.000000]
   User > confirm(name="lovell lodge")
   Turn 11
   Usr > [('confirm(name="lovell lodge")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay",stars="4") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay",stars="4")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay",stars="3",kind="hotel") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay",stars="3",kind="hotel")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="4") [1.000000]
   User > negate(hasparking="dontcare",stars="4")
   Turn 2
   Usr > [('negate(hasparking="dontcare",stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="3") [1.000000]
   User > negate(hasparking="dontcare",stars="3")
   Turn 2
   Usr > [('negate(hasparking="dontcare",stars="3")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 3
   Usr > [(u'request(phone)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 2
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="hotel82",phone="1223360082")
   Semi > bye() [1.000000]
   User > bye()
   Turn 3
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 17, suc = 1, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="hotel",pricerange="expensive") [1.000000]
   User > inform(="dontcare",kind="hotel",pricerange="expensive")
   Turn 2
   Usr > [('inform(="dontcare",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 19:26:53: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 19:26:53: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -1.75 +- 0.64
RESULTS:: 19:26:54: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -1.75 +- 0.64
Average success = 1.00 +- 1.97
RESULTS:: 19:26:54: root                               EvaluationManager.py <_prstr>207 :  Average success = 1.00 +- 1.97
Average turns   = 2.35 +- 0.30
RESULTS:: 19:26:54: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 2.35 +- 0.30
RESULTS:: 19:26:54: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.38->env11-dqn-CH-MLN-00.39: iter=38, error-rate=0, num-dialogs=100 ***
RESULTS:: 19:26:54: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.38->env11-dqn-CH-MLN-00.39: iter=38, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.38.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.38
loaded replay size:  5870
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 6
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",stars="2") [1.000000]
   User > negate(hasparking="dontcare",stars="2")
   Turn 2
   Usr > [('negate(hasparking="dontcare",stars="2")', 1.0)]
   Sys > inform(name="hotel226",price="hotel226price")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 3
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="hotel226",hasinternet="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="hotel226",pricerange="expensive")
   Semi > negate(pricerange="cheap",kind="hotel") [1.000000]
   User > negate(pricerange="cheap",kind="hotel")
   Turn 5
   Usr > [('negate(pricerange="cheap",kind="hotel")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="2",pricerange="cheap",name="guesthouse60",kind="hotel")
   Semi > confirm(name="hotel226") [1.000000]
   User > confirm(name="hotel226")
   Turn 7
   Usr > [('confirm(name="hotel226")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 8
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 3
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 5
   Usr > [(u'request(postcode)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > reqalts(stars="dontcare") [1.000000]
   User > reqalts(stars="dontcare")
   Turn 4
   Usr > [('reqalts(stars="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 5
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="leverton house",kind="guesthouse")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 9
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="1",pricerange="cheap",name="rosa's bed and breakfast",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 10
   Usr > [(u'request(phone)', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="rosa's bed and breakfast",phone) [1.000000]
   User > request(name="rosa's bed and breakfast",phone)
   Turn 11
   Usr > [(u'request(name="rosa\'s bed and breakfast",phone)', 1.0)]
   Sys > inform(name="rosa's bed and breakfast",phone="01223512596")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 12
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="rosa's bed and breakfast",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 13
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="rosa's bed and breakfast",addr="53 roseford road")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 14
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 15
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="rosa's bed and breakfast",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 16
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="rosa's bed and breakfast",postcode="cb2 2ha")
   Semi > request(hasparking,phone) [1.000000]
   User > request(hasparking,phone)
   Turn 17
   Usr > [(u'request(hasparking,phone)', 1.0)]
   Sys > inform(name="rosa's bed and breakfast",hasparking="1",phone="01223512596")
   Semi > request(pricerange) [1.000000]
   User > request(pricerange)
   Turn 18
   Usr > [('request(pricerange)', 1.0)]
   Sys > inform(name="rosa's bed and breakfast",pricerange="cheap")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 19
   Usr > [('request(stars)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -19, suc = 0, turn = 19
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay",stars="4",kind="hotel") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay",stars="4",kind="hotel")
   Turn 2
   Usr > [(u'negate(hasparking="dontcare",type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > inform(name="hotel122",kind="hotel")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 3
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="hotel122",pricerange="expensive")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 5
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="hotel122",stars="0")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 6
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel122",pricerange="expensive")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 7
   Usr > [(u'request(price)', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 8
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="hotel122",price="hotel122price")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 9
   Usr > [('thankyou()', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="hotel122",kind) [1.000000]
   User > request(name="hotel122",kind)
   Turn 10
   Usr > [('request(name="hotel122",kind)', 1.0)]
   Sys > inform(name="hotel122",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",stars="0",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",stars="0",kind="guesthouse")
   Turn 2
   Usr > [('inform(pricerange="moderate",stars="0",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > confirm(name="guesthouse42") [1.000000]
   User > confirm(name="guesthouse42")
   Turn 9
   Usr > [('confirm(name="guesthouse42")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 10
   Usr > [('inform(stars="0")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 12
   Usr > [('inform(stars="0")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 13
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 16
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 19
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 20
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -20, suc = 0, turn = 20
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 3
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > reqalts(stars="dontcare") [1.000000]
   User > reqalts(stars="dontcare")
   Turn 4
   Usr > [('reqalts(stars="dontcare")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 6
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 7
   Usr > [('inform(stars="4")', 1.0)]
   Sys > request(area)
   Semi > request(name="limehouse",price) [1.000000]
   User > request(name="limehouse",price)
   Turn 8
   Usr > [(u'request(name="limehouse",price)', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 9
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 10
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 2
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 3
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="guesthouse42",addr="guesthouse42addr")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",stars="4") [1.000000]
   User > negate(area="dontcare",stars="4")
   Turn 6
   Usr > [('negate(area="dontcare",stars="4")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 7
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",name="the cambridge belfry",area="west",kind="hotel",pricerange="cheap",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 8
   Usr > [(u'request(postcode)', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="the cambridge belfry",postcode="cb23 6bw")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 10
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="the cambridge belfry",addr="back lane, cambourne")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="3") [1.000000]
   User > affirm(stars="3")
   Turn 2
   Usr > [('affirm(stars="3")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3",kind="guesthouse") [1.000000]
   User > inform(stars="3",kind="guesthouse")
   Turn 3
   Usr > [('inform(stars="3",kind="guesthouse")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 4
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3",pricerange="moderate") [1.000000]
   User > inform(stars="3",pricerange="moderate")
   Turn 5
   Usr > [('inform(stars="3",pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hobsons house",kind="guesthouse")
   Semi > reqalts(stars="0") [1.000000]
   User > reqalts(stars="0")
   Turn 6
   Usr > [(u'reqalts(stars="0")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > ack() [1.000000]
   User > ack()
   Turn 9
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 10, suc = 1, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse247",pricerange="cheap")
   Semi > inform(type="placetostay",stars="4") [1.000000]
   User > inform(type="placetostay",stars="4")
   Turn 3
   Usr > [(u'inform(type="placetostay",stars="4")', 1.0)]
   Sys > inform(name="guesthouse247",pricerange="cheap")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse247",kind="hotel")
   Semi > request(postcode,name="guesthouse247") [1.000000]
   User > request(postcode,name="guesthouse247")
   Turn 5
   Usr > [(u'request(postcode,name="guesthouse247")', 1.0)]
   Sys > request(area)
   Semi > request(name="guesthouse247",postcode) [1.000000]
   User > request(name="guesthouse247",postcode)
   Turn 6
   Usr > [(u'request(name="guesthouse247",postcode)', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse247",postcode="guesthouse247postcode")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="the lensfield hotel",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 7
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 8
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 10
   Usr > [(u'request(phone)', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 11
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(name="the lensfield hotel",phone="01223355017")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 6, suc = 1, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 4
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 5
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 7
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="guesthouse42",addr="guesthouse42addr")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 9
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 10
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(area="north")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(area="north")', 1.0)]
   Sys > inform(name="guesthouse42",pricerange="moderate")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 12
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="guesthouse42",area="centre")
   Semi > ack() [1.000000]
   User > ack()
   Turn 13
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse42",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 6, suc = 1, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel91",price="hotel91price")
   Semi > inform(stars="2",kind="guesthouse") [1.000000]
   User > inform(stars="2",kind="guesthouse")
   Turn 3
   Usr > [('inform(stars="2",kind="guesthouse")', 1.0)]
   Sys > select(stars="2",stars="0")
   Semi > inform(stars="2",pricerange="expensive") [1.000000]
   User > inform(stars="2",pricerange="expensive")
   Turn 4
   Usr > [('inform(stars="2",pricerange="expensive")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse49",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel45",postcode="hotel45postcode")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel45",area="north")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel45",addr="hotel45addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 6
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 7
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > inform(name="hotel82",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > inform(name="hotel82",price="hotel82price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel82",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel82",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel82",phone="1223360082")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 14
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="hotel82",phone="1223360082")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel82",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel82",postcode="hotel82postcode")
   Semi > bye() [1.000000]
   User > bye()
   Turn 17
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -17, suc = 0, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse141",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 4
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse141",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse141",price="guesthouse141price")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse141",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse141",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse141",phone="12233600141")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse141",addr="guesthouse141addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse141",kind="hotel")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 11
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse141",pricerange="moderate")
   Semi > confirm(name="guesthouse141") [1.000000]
   User > confirm(name="guesthouse141")
   Turn 12
   Usr > [('confirm(name="guesthouse141")', 1.0)]
   Sys > inform(name="guesthouse141")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse141")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 15
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse141")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse141")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse141")
   Semi > bye() [1.000000]
   User > bye()
   Turn 18
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -18, suc = 0, turn = 18
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="hotel170",hasparking="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 6
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel50",stars="3")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 7
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel56",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="hotel56",phone="1223360056")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 9
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel56",stars="3")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 10
   Usr > [(u'request(postcode)', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 12
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(name="hotel56",postcode="hotel56postcode")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 7, suc = 1, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 3
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(name="guesthouse46",phone="1223360046")
   Semi > reqalts(kind="dontcare") [1.000000]
   User > reqalts(kind="dontcare")
   Turn 4
   Usr > [('reqalts(kind="dontcare")', 1.0)]
   Sys > inform(name="guesthouse46",hasparking="1")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse46",kind="hotel")
   Semi > inform(kind="hotel",pricerange="expensive") [1.000000]
   User > inform(kind="hotel",pricerange="expensive")
   Turn 6
   Usr > [('inform(kind="hotel",pricerange="expensive")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > inform(name="guesthouse46",hasinternet="0")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 8
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse46",pricerange="moderate")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 9
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse46",pricerange="moderate")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 10
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > inform(name="guesthouse46",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 12
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse46",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 13
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse46",hasinternet="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="leverton house",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 6
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="leverton house",price="a single room ranges from 40 pounds and to 60 pounds and a double room ranges from 60 pounds and to 75 pounds and a family room ranges from 90 pounds and to 130 pounds")
   Semi > reqalts(stars="4") [1.000000]
   User > reqalts(stars="4")
   Turn 7
   Usr > [(u'reqalts(stars="4")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 8
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="leverton house",price="a single room ranges from 40 pounds and to 60 pounds and a double room ranges from 60 pounds and to 75 pounds and a family room ranges from 90 pounds and to 130 pounds")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 9
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(name="leverton house",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 10
   Usr > [('thankyou()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel165",area="centre")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="hotel165",postcode="hotel165postcode")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel165",hasparking="0")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 5
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel165",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel165",stars="4")
   Semi > request(hasparking) [1.000000]
   User > request(hasparking)
   Turn 7
   Usr > [('request(hasparking)', 1.0)]
   Sys > inform(name="hotel165",hasparking="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 8
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel165",hasinternet="0")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 9
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="hotel165",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 10
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="hotel165",price="hotel165price")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 11
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel165",kind="hotel")
   Semi > negate(kind="guesthouse") [1.000000]
   User > negate(kind="guesthouse")
   Turn 12
   Usr > [('negate(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse36",stars="4")
   Semi > request(hasparking) [1.000000]
   User > request(hasparking)
   Turn 13
   Usr > [('request(hasparking)', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse36",stars="4")
   Semi > request(hasparking) [1.000000]
   User > request(hasparking)
   Turn 14
   Usr > [('request(hasparking)', 1.0)]
   Sys > inform(name="guesthouse36",hasparking="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 15
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="guesthouse36",phone="1223360036")
   Semi > ack() [1.000000]
   User > ack()
   Turn 16
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse36",area="north")
   Semi > ack() [1.000000]
   User > ack()
   Turn 17
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse36",hasparking="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 18
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="guesthouse36",price="guesthouse36price")
   Semi > bye() [1.000000]
   User > bye()
   Turn 19
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 1, suc = 1, turn = 19
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse40",hasparking="1")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse40",stars="2")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 7
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="the lensfield hotel",kind="hotel",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 4
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="3") [1.000000]
   User > inform(="dontcare",stars="3")
   Turn 5
   Usr > [('inform(="dontcare",stars="3")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="the lensfield hotel",postcode) [1.000000]
   User > request(name="the lensfield hotel",postcode)
   Turn 8
   Usr > [(u'request(name="the lensfield hotel",postcode)', 1.0)]
   Sys > reqmore()
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 9
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="the lensfield hotel",postcode="cb2 1en")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 10
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="guesthouse63",kind="guesthouse")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 11
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="the lensfield hotel",postcode="cb2 1en")
   Semi > deny(name="the lensfield hotel",name="guesthouse63") [1.000000]
   User > deny(name="the lensfield hotel",name="guesthouse63")
   Turn 12
   Usr > [('deny(name="the lensfield hotel",name="guesthouse63")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 13
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="guesthouse63",kind="guesthouse")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 14
   Usr > [(u'request(postcode)', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse63",postcode) [1.000000]
   User > request(name="guesthouse63",postcode)
   Turn 16
   Usr > [(u'request(name="guesthouse63",postcode)', 1.0)]
   Sys > inform(name="guesthouse63",postcode="guesthouse63postcode")
   Semi > bye() [1.000000]
   User > bye()
   Turn 17
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 3, suc = 1, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 3
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 4
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 5
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="city centre north b and b",phone="01223312843")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(name="city centre north b and b",hasparking="1")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 7
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 3
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 4
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="hotel82",hasinternet="1")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",stars="4") [1.000000]
   User > inform(pricerange="moderate",stars="4")
   Turn 6
   Usr > [('inform(pricerange="moderate",stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel92",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 8
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 3
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 4
   Usr > [('negate(stars="3")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 7
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 8
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 9
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 10
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="alpha-milton guest house",kind="guesthouse")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 11
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="bridge guest house",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 8, suc = 1, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="0",kind="guesthouse") [1.000000]
   User > affirm(stars="0",kind="guesthouse")
   Turn 2
   Usr > [('affirm(stars="0",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 3
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 4
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="guesthouse42",phone="1223360042")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 5
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 6
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="leverton house",kind="guesthouse",addr="732-734 newmarket road")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 7
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 3
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="leverton house",phone) [1.000000]
   User > request(name="leverton house",phone)
   Turn 5
   Usr > [(u'request(name="leverton house",phone)', 1.0)]
   Sys > inform(name="leverton house",kind="guesthouse",phone="01223292094")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 7
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 8
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 10, suc = 1, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="2",type="placetostay") [1.000000]
   User > inform(stars="2",type="placetostay")
   Turn 3
   Usr > [(u'inform(stars="2",type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > reqalts(stars="dontcare") [1.000000]
   User > reqalts(stars="dontcare")
   Turn 4
   Usr > [('reqalts(stars="dontcare")', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > request(stars)
   Semi > request(name="express by holiday inn cambridge",price) [1.000000]
   User > request(name="express by holiday inn cambridge",price)
   Turn 7
   Usr > [(u'request(name="express by holiday inn cambridge",price)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="express by holiday inn cambridge",price) [1.000000]
   User > request(name="express by holiday inn cambridge",price)
   Turn 8
   Usr > [(u'request(name="express by holiday inn cambridge",price)', 1.0)]
   Sys > inform(name="express by holiday inn cambridge",kind="hotel",price="a single room ranges from 90 pounds and to 110 pounds and a double room ranges from 90 pounds and to 110 pounds and a family room ranges from 90 pounds and to 110 pounds")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 9
   Usr > [('deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="hotel33",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 10
   Usr > [(u'request(price)', 1.0)]
   Sys > reqmore()
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 11
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="express by holiday inn cambridge",price="a single room ranges from 90 pounds and to 110 pounds and a double room ranges from 90 pounds and to 110 pounds and a family room ranges from 90 pounds and to 110 pounds",hasinternet="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(phone,name="huntingdon marriott hotel") [1.000000]
   User > request(phone,name="huntingdon marriott hotel")
   Turn 5
   Usr > [(u'request(phone,name="huntingdon marriott hotel")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",phone="01480446000")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 6
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 7
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="university arms hotel",stars="4")
   Semi > confirm(name="huntingdon marriott hotel") [1.000000]
   User > confirm(name="huntingdon marriott hotel")
   Turn 8
   Usr > [('confirm(name="huntingdon marriott hotel")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 9
   Usr > [('thankyou()', 1.0)]
   Sys > request(stars)
   Semi > request(name="huntingdon marriott hotel",phone) [1.000000]
   User > request(name="huntingdon marriott hotel",phone)
   Turn 10
   Usr > [(u'request(name="huntingdon marriott hotel",phone)', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",phone="01480446000")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 11
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",pricerange="expensive")
   Semi > request(kind) [1.000000]
   User > request(kind)
   Turn 12
   Usr > [('request(kind)', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",kind="hotel")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 13
   Usr > [('request(stars)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 6, suc = 1, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4",area="north")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 3
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4",area="west")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 4
   Usr > [('negate(stars="3")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",addr="kingfisher way, hinchinbrook business park, huntingdon")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 5
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",price="a cheapest single room is 125 pounds and a cheapest double room is 145 pounds and a cheapest family room is 145 pounds")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 6
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",postcode="pe29 6fl")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 7
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3",area="south")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 8
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="the lensfield hotel",price="a single room ranges from 65 pounds and to 85 pounds and a double room ranges from 90 pounds and to 120 pounds and a family room ranges from 125 pounds and to 135 pounds")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 9
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="the lensfield hotel",postcode="cb2 1en")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 10
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="the lensfield hotel",phone="01223355017")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(stars="4",kind="hotel") [1.000000]
   User > inform(stars="4",kind="hotel")
   Turn 5
   Usr > [('inform(stars="4",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 7
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 3
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 6
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="kirkwood house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="kirkwood house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="kirkwood house",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 9
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(pricerange="moderate",name="kirkwood house",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 3
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="cheap",name="rosa's bed and breakfast",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 7
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 8
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 9
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="allenbell",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="allenbell",price="a single room ranges from 35 pounds and to 50 pounds and a double room ranges from 60 pounds and to 75 pounds and a family room ranges from 90 pounds and to 100 pounds")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="allenbell",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="hotel33",stars="0")
   Semi > inform(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > inform(type="placetostay",stars="0",kind="hotel")
   Turn 5
   Usr > [(u'inform(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="hotel120",stars="0")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 6
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 7
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel120",hasinternet="0")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 8
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="hotel120",addr="hotel120addr")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 3
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse36",kind="guesthouse")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="0",stars="4",pricerange="expensive",name="guesthouse36",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",stars="4") [1.000000]
   User > negate(pricerange="expensive",stars="4")
   Turn 2
   Usr > [('negate(pricerange="expensive",stars="4")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse",pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="leverton house",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 3
   Usr > [(u'request(addr)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="express by holiday inn cambridge",stars="2")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 2
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="hotel51",stars="2")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 3
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse60",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel62",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse76",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts(pricerange="expensive") [1.000000]
   User > reqalts(pricerange="expensive")
   Turn 3
   Usr > [(u'reqalts(pricerange="expensive")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 4
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 5
   Usr > [(u'deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(hasparking="1",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",price="a cheapest single room is 125 pounds and a cheapest double room is 145 pounds and a cheapest family room is 145 pounds")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 7
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 9
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 10
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="university arms hotel",kind="hotel")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 11
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="guesthouse87",kind="hotel")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 12
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="guesthouse87",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 13
   Usr > [('thankyou()', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="guesthouse87",price) [1.000000]
   User > request(name="guesthouse87",price)
   Turn 14
   Usr > [(u'request(name="guesthouse87",price)', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse87",price="guesthouse87price")
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 4, suc = 1, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(name="hotel148",hasparking="0")
   Semi > inform(stars="3",kind="guesthouse") [1.000000]
   User > inform(stars="3",kind="guesthouse")
   Turn 3
   Usr > [('inform(stars="3",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="hobsons house",stars="3",area="west")
   Semi > request(phone,name="hobsons house") [1.000000]
   User > request(phone,name="hobsons house")
   Turn 4
   Usr > [(u'request(phone,name="hobsons house")', 1.0)]
   Sys > request(stars)
   Semi > request(name="hobsons house",phone) [1.000000]
   User > request(name="hobsons house",phone)
   Turn 5
   Usr > [(u'request(name="hobsons house",phone)', 1.0)]
   Sys > request(area)
   Semi > request(name="hobsons house",phone) [1.000000]
   User > request(name="hobsons house",phone)
   Turn 6
   Usr > [(u'request(name="hobsons house",phone)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 2
   Usr > [('deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 3
   Usr > [('inform(stars="0")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0",area="centre")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse41",stars="0",area="west")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse46",stars="0",area="north")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel68",stars="0",area="west")
   Semi > confirm(name="guesthouse46") [1.000000]
   User > confirm(name="guesthouse46")
   Turn 8
   Usr > [('confirm(name="guesthouse46")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse80",stars="0",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3",kind="hotel",pricerange="moderate") [1.000000]
   User > negate(stars="3",kind="hotel",pricerange="moderate")
   Turn 3
   Usr > [('negate(stars="3",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse43",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="hotel235",hasparking="1")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 4
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(name="hotel235",price="hotel235price")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(kind="guesthouse") [1.000000]
   User > affirm(kind="guesthouse")
   Turn 2
   Usr > [('affirm(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="hobsons house",stars="3")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="alpha-milton guest house",stars="3")
   Semi > confirm(name="hobsons house") [1.000000]
   User > confirm(name="hobsons house")
   Turn 5
   Usr > [('confirm(name="hobsons house")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 6
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="bridge guest house",stars="3")
   Semi > confirm(name="hobsons house") [1.000000]
   User > confirm(name="hobsons house")
   Turn 7
   Usr > [('confirm(name="hobsons house")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="guesthouse215",postcode="guesthouse215postcode")
   Semi > request(phone,price) [1.000000]
   User > request(phone,price)
   Turn 3
   Usr > [(u'request(phone,price)', 1.0)]
   Sys > request(area)
   Semi > request(name="guesthouse215",phone) [1.000000]
   User > request(name="guesthouse215",phone)
   Turn 4
   Usr > [(u'request(name="guesthouse215",phone)', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 5
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse215",price="guesthouse215price",phone="12233600215")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse215",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 7
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 8
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 9
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="guesthouse215",phone="12233600215")
   Semi > confirm(name="the cambridge belfry") [1.000000]
   User > confirm(name="the cambridge belfry")
   Turn 10
   Usr > [('confirm(name="the cambridge belfry")', 1.0)]
   Sys > inform(name="guesthouse215")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 11
   Usr > [(u'request(phone)', 1.0)]
   Sys > reqmore()
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 12
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="guesthouse215",price="guesthouse215price",phone="12233600215")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 13
   Usr > [(u'request(phone)', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse215",phone="12233600215")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 15
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 16
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 17
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 18
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(name="guesthouse215",kind="guesthouse")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 19
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="guesthouse215",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 20
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 21
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse73",area="centre",kind="hotel",pricerange="cheap",stars="4")
   Semi > confirm(name="guesthouse215") [1.000000]
   User > confirm(name="guesthouse215")
   Turn 22
   Usr > [('confirm(name="guesthouse215")', 1.0)]
   Sys > inform(name="guesthouse215")
   Semi > request(hasparking) [1.000000]
   User > request(hasparking)
   Turn 23
   Usr > [('request(hasparking)', 1.0)]
   Sys > inform(name="guesthouse215",hasparking="1")
   Semi > request(area) [1.000000]
   User > request(area)
   Turn 24
   Usr > [('request(area)', 1.0)]
   Sys > inform(name="guesthouse215",area="north")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 25
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="guesthouse215")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay",stars="3") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="3")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 4
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="the lensfield hotel",kind="hotel",addr="53-57 lensfield road")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 5
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="the lensfield hotel",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 4
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 5
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > inform(type="placetostay",stars="4",kind="hotel",pricerange="moderate") [1.000000]
   User > inform(type="placetostay",stars="4",kind="hotel",pricerange="moderate")
   Turn 6
   Usr > [(u'inform(type="placetostay",stars="4",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > confirm(name="home from home") [1.000000]
   User > confirm(name="home from home")
   Turn 7
   Usr > [('confirm(name="home from home")', 1.0)]
   Sys > inform(name="hotel82")
   Semi > ack() [1.000000]
   User > ack()
   Turn 8
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel82")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 2
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="ashley hotel",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="ashley hotel",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="ashley hotel",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse40",stars="2")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 7
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",kind="hotel")
   Turn 2
   Usr > [('inform(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > inform(name="hotel152",area="centre")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 3
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="hotel152",price="hotel152price")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 4
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="hotel152",postcode="hotel152postcode")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > reqmore()
   Semi > negate() [1.000000]
   User > negate()
   Turn 7
   Usr > [('negate()', 1.0)]
   Sys > inform(name="hotel152",hasinternet="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 3
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 4
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse41",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="guesthouse41",kind="hotel")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 6
   Usr > [('deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 7
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="guesthouse42",pricerange="moderate")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 8
   Usr > [(u'request(price)', 1.0)]
   Sys > request(area)
   Semi > request(name="guesthouse42",price) [1.000000]
   User > request(name="guesthouse42",price)
   Turn 9
   Usr > [(u'request(name="guesthouse42",price)', 1.0)]
   Sys > inform(name="guesthouse42",price="guesthouse42price")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 10
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 11
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 8, suc = 1, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse",type="placetostay") [1.000000]
   User > inform(kind="guesthouse",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="guesthouse",type="placetostay")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 3
   Usr > [('negate(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 4
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hobsons house",kind="guesthouse")
   Semi > reqalts(stars="dontcare") [1.000000]
   User > reqalts(stars="dontcare")
   Turn 5
   Usr > [('reqalts(stars="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hobsons house",kind="guesthouse")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > confirm(stars="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(stars="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hobsons house",kind="guesthouse")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="hobsons house",phone) [1.000000]
   User > request(name="hobsons house",phone)
   Turn 11
   Usr > [(u'request(name="hobsons house",phone)', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 13
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > request(name="hobsons house",phone) [1.000000]
   User > request(name="hobsons house",phone)
   Turn 14
   Usr > [(u'request(name="hobsons house",phone)', 1.0)]
   Sys > reqmore()
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 15
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > reqmore()
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 16
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="hobsons house",hasinternet="1",phone="01223304906")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 17
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="hobsons house",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 18
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 2, suc = 1, turn = 18
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 2
   Usr > [('deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",type="placetostay") [1.000000]
   User > negate(hasparking="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'negate(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="limehouse",kind="guesthouse")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 5
   Usr > [('negate(stars="3")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hobsons house",kind="guesthouse")
   Semi > reqalts(stars="dontcare") [1.000000]
   User > reqalts(stars="dontcare")
   Turn 6
   Usr > [('reqalts(stars="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="home from home",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 7
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="kirkwood house",kind="guesthouse")
   Semi > confirm(name="home from home") [1.000000]
   User > confirm(name="home from home")
   Turn 8
   Usr > [('confirm(name="home from home")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="acorn guest house",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",type="placetostay") [1.000000]
   User > negate(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="limehouse",phone) [1.000000]
   User > request(name="limehouse",phone)
   Turn 4
   Usr > [(u'request(name="limehouse",phone)', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",kind="hotel") [1.000000]
   User > negate(area="dontcare",kind="hotel")
   Turn 5
   Usr > [('negate(area="dontcare",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 6
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -2, suc = 0, turn = 2
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",stars="4") [1.000000]
   User > negate(pricerange="expensive",stars="4")
   Turn 2
   Usr > [('negate(pricerange="expensive",stars="4")', 1.0)]
   Sys > inform(name="carolina bed and breakfast",phone="01223247015")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 3
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="carolina bed and breakfast",price="a cheapest single room is 45 pounds and a cheapest double room is 75 pounds and a family room ranges from 100 pounds and to 120 pounds")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 4
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="carolina bed and breakfast",hasinternet="1")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="carolina bed and breakfast",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 6
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="carolina bed and breakfast",pricerange="moderate")
   Semi > negate(pricerange="expensive",kind="hotel") [1.000000]
   User > negate(pricerange="expensive",kind="hotel")
   Turn 7
   Usr > [('negate(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > inform(name="carolina bed and breakfast",area="east")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 9
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(name="carolina bed and breakfast",area="east")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 10
   Usr > [(u'request(price)', 1.0)]
   Sys > request(kind)
   Semi > request(name="carolina bed and breakfast",price) [1.000000]
   User > request(name="carolina bed and breakfast",price)
   Turn 11
   Usr > [(u'request(name="carolina bed and breakfast",price)', 1.0)]
   Sys > reqmore()
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 12
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="carolina bed and breakfast",price="a cheapest single room is 45 pounds and a cheapest double room is 75 pounds and a family room ranges from 100 pounds and to 120 pounds",hasinternet="1")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 13
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="carolina bed and breakfast",price="a cheapest single room is 45 pounds and a cheapest double room is 75 pounds and a family room ranges from 100 pounds and to 120 pounds")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 14
   Usr > [('thankyou()', 1.0)]
   Sys > reqmore()
   Semi > negate() [1.000000]
   User > negate()
   Turn 15
   Usr > [('negate()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 16
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(name="carolina bed and breakfast",postcode="cb1 3nx")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 17
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="huntingdon marriott hotel",kind="hotel")
   Semi > confirm(name="carolina bed and breakfast") [1.000000]
   User > confirm(name="carolina bed and breakfast")
   Turn 18
   Usr > [('confirm(name="carolina bed and breakfast")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 19
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="carolina bed and breakfast")
   Semi > request(hasparking) [1.000000]
   User > request(hasparking)
   Turn 20
   Usr > [('request(hasparking)', 1.0)]
   Sys > inform(name="carolina bed and breakfast",hasparking="1")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 21
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="carolina bed and breakfast",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 22
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 23
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="carolina bed and breakfast")
   Semi > request(hasparking) [1.000000]
   User > request(hasparking)
   Turn 24
   Usr > [('request(hasparking)', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 25
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(name="carolina bed and breakfast",hasparking="1")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse111",kind="guesthouse")
   Semi > negate(kind="hotel",type="placetostay") [1.000000]
   User > negate(kind="hotel",type="placetostay")
   Turn 3
   Usr > [(u'negate(kind="hotel",type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse111",area="west")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 4
   Usr > [('inform(stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(pricerange="expensive") [1.000000]
   User > affirm(pricerange="expensive")
   Turn 5
   Usr > [('affirm(pricerange="expensive")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 7
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="university arms hotel",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 8
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="university arms hotel",postcode="cb2 1ad")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > affirm(type="placetostay",stars="0",kind="hotel")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="cityroomz",postcode="cb1 2tz")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="cityroomz",postcode="cb1 2tz")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="cityroomz",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="cityroomz",postcode="cb1 2tz")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="cityroomz",addr="sleeperz hotel, station road")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="cityroomz",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="cityroomz",hasparking="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 5
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 6
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(name="home from home",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 7
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 8
   Usr > [(u'request(addr)', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 9
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(name="hotel82",addr="hotel82addr")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 10, suc = 1, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel139",hasinternet="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 4
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(name="hotel139",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel139",postcode="hotel139postcode")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel139",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel139",price="hotel139price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel139",area="centre")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="0",kind="hotel") [1.000000]
   User > inform(="dontcare",stars="0",kind="hotel")
   Turn 10
   Usr > [('inform(="dontcare",stars="0",kind="hotel")', 1.0)]
   Sys > inform(name="hotel139",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel139",hasinternet="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel139",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel139",hasinternet="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 15
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel139",price="hotel139price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel139",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel139",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel139",area="centre")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 19
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel139",postcode="hotel139postcode")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 20
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(name="hotel139",stars="3")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 21
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(name="hotel139",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 22
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel139",addr="hotel139addr")
   Semi > bye() [1.000000]
   User > bye()
   Turn 23
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -23, suc = 0, turn = 23
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="hobsons house",hasinternet) [1.000000]
   User > request(name="hobsons house",hasinternet)
   Turn 5
   Usr > [(u'request(name="hobsons house",hasinternet)', 1.0)]
   Sys > inform(name="hobsons house",kind="guesthouse",hasinternet="1")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 6
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(name="hobsons house",stars="3")
   Semi > reqalts(stars="dontcare") [1.000000]
   User > reqalts(stars="dontcare")
   Turn 7
   Usr > [('reqalts(stars="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 9
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 8, suc = 1, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [('affirm()', 1.0)]
   Sys > inform(name="guesthouse214",area="west")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",stars="4",kind="hotel") [1.000000]
   User > negate(pricerange="expensive",stars="4",kind="hotel")
   Turn 4
   Usr > [('negate(pricerange="expensive",stars="4",kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse214",addr="guesthouse214addr")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="hotel131",stars="3")
   Semi > negate(stars="2",type="placetostay") [1.000000]
   User > negate(stars="2",type="placetostay")
   Turn 3
   Usr > [(u'negate(stars="2",type="placetostay")', 1.0)]
   Sys > inform(name="hotel131",kind="guesthouse")
   Semi > negate(kind="hotel",pricerange="moderate") [1.000000]
   User > negate(kind="hotel",pricerange="moderate")
   Turn 4
   Usr > [('negate(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 5
   Usr > [(u'request(price)', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(hasparking="1")', 1.0)]
   Sys > inform(name="lovell lodge",price="a cheapest single room is 50 pounds and a cheapest double room is 65 pounds and a cheapest family room is 70 pounds")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="moderate",name="ashley hotel",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 8
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="ashley hotel",price="a cheapest double room is 75 pounds and a cheapest family room is 85 pounds")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="3") [1.000000]
   User > affirm(type="placetostay",stars="3")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="guesthouse") [1.000000]
   User > inform(="dontcare",kind="guesthouse")
   Turn 4
   Usr > [('inform(="dontcare",kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="alpha-milton guest house",kind="guesthouse")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 5
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > request(area)
   Semi > request(name="alpha-milton guest house",hasinternet) [1.000000]
   User > request(name="alpha-milton guest house",hasinternet)
   Turn 6
   Usr > [(u'request(name="alpha-milton guest house",hasinternet)', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="alpha-milton guest house",hasinternet) [1.000000]
   User > request(name="alpha-milton guest house",hasinternet)
   Turn 7
   Usr > [(u'request(name="alpha-milton guest house",hasinternet)', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="alpha-milton guest house",kind="guesthouse")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="bridge guest house",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="alpha-milton guest house",hasinternet="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 8, suc = 1, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4",type="placetostay") [1.000000]
   User > inform(stars="4",type="placetostay")
   Turn 2
   Usr > [(u'inform(stars="4",type="placetostay")', 1.0)]
   Sys > reqmore()
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",pricerange="moderate") [1.000000]
   User > inform(="dontcare",pricerange="moderate")
   Turn 4
   Usr > [('inform(="dontcare",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel82",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel82",pricerange="moderate")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 7
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse89",price="guesthouse89price")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="guesthouse89",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse89",area="east")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 5
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="guesthouse89",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(area)
   Semi > request(name="guesthouse89",hasinternet) [1.000000]
   User > request(name="guesthouse89",hasinternet)
   Turn 7
   Usr > [(u'request(name="guesthouse89",hasinternet)', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel198",price="hotel198price")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="hotel198",area="centre")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="hotel198",hasparking="1")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="hotel198",stars="0")
   Semi > negate(stars="4") [1.000000]
   User > negate(stars="4")
   Turn 7
   Usr > [('negate(stars="4")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 3
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay",stars="3",pricerange="expensive") [1.000000]
   User > inform(="dontcare",type="placetostay",stars="3",pricerange="expensive")
   Turn 5
   Usr > [(u'inform(="dontcare",type="placetostay",stars="3",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel237",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 3
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="cityroomz",hasinternet="1")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(name="cityroomz",price="a single room ranges from 47 pounds 50 and to 50 pounds and a cheapest double room is 67 pounds 50 and a cheapest family room is 77 pounds 50")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(name="hotel132",stars="0")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0",kind="guesthouse") [1.000000]
   User > negate(stars="0",kind="guesthouse")
   Turn 4
   Usr > [('negate(stars="0",kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > confirm(name="hotel132") [1.000000]
   User > confirm(name="hotel132")
   Turn 5
   Usr > [('confirm(name="hotel132")', 1.0)]
   Sys > inform(name="guesthouse42")
   Semi > request(price,name="guesthouse42") [1.000000]
   User > request(price,name="guesthouse42")
   Turn 6
   Usr > [(u'request(price,name="guesthouse42")', 1.0)]
   Sys > inform(name="guesthouse42",price="guesthouse42price")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 7
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="guesthouse42",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="kirkwood house",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="kirkwood house",addr="172 chesterton road")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 5
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(pricerange="expensive",name="hotel33",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 6
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel33",kind="guesthouse")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 7
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="hotel33",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 8
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel33",kind="guesthouse")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 9
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="hotel33",hasinternet) [1.000000]
   User > request(name="hotel33",hasinternet)
   Turn 10
   Usr > [(u'request(name="hotel33",hasinternet)', 1.0)]
   Sys > inform(name="hotel33",hasinternet="0",stars="0")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 11
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel33",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 8, suc = 1, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3",kind="hotel",pricerange="moderate") [1.000000]
   User > negate(stars="3",kind="hotel",pricerange="moderate")
   Turn 4
   Usr > [('negate(stars="3",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse43",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse47",kind="hotel")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="hotel117",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="hotel117",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="hotel134",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 13
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="hotel134",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 15
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="guesthouse141",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 17
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hotel149",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 18
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -18, suc = 0, turn = 18
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 2
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(area)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="hotel82",postcode="hotel82postcode")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 6
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="guesthouse89",postcode="guesthouse89postcode")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(name="guesthouse84",kind="guesthouse")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 4
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(name="guesthouse84",stars="2")
   Semi > deny(stars="2",stars="3") [1.000000]
   User > deny(stars="2",stars="3")
   Turn 5
   Usr > [('deny(stars="2",stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 7
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="the lensfield hotel",kind) [1.000000]
   User > request(name="the lensfield hotel",kind)
   Turn 8
   Usr > [('request(name="the lensfield hotel",kind)', 1.0)]
   Sys > inform(name="the lensfield hotel",kind="hotel")
   Semi > negate(kind="guesthouse") [1.000000]
   User > negate(kind="guesthouse")
   Turn 9
   Usr > [('negate(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse63",stars="3")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 10
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="the lensfield hotel",postcode="cb2 1en")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 11
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="guesthouse63",kind="guesthouse")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 13
   Usr > [(u'request(postcode)', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 14
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 15
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(name="the lensfield hotel",postcode="cb2 1en")
   Semi > deny(name="the lensfield hotel",name="guesthouse63") [1.000000]
   User > deny(name="the lensfield hotel",name="guesthouse63")
   Turn 16
   Usr > [('deny(name="the lensfield hotel",name="guesthouse63")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 17
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 18
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="guesthouse63",phone="1223360063")
   Semi > request(kind,postcode) [1.000000]
   User > request(kind,postcode)
   Turn 19
   Usr > [(u'request(kind,postcode)', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 20
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 21
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse63",kind="guesthouse",postcode="guesthouse63postcode")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 22
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse63",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 23
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 1, turn = 23
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 3
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(name="guesthouse153",phone="12233600153")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse153",pricerange="moderate")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(stars="2",stars="0")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 6
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse88",area="south")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse88",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse88",price="guesthouse88price")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse88",postcode="guesthouse88postcode")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 7
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="guesthouse88",hasinternet="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel149",hasparking="1")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 3
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel149",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 4
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel149",hasinternet="0")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 5
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel149",kind="hotel")
   Semi > negate(kind="guesthouse") [1.000000]
   User > negate(kind="guesthouse")
   Turn 7
   Usr > [('negate(kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel149",postcode="hotel149postcode")
   Semi > ack() [1.000000]
   User > ack()
   Turn 8
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel149",addr="hotel149addr")
   Semi > ack() [1.000000]
   User > ack()
   Turn 9
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel149",hasinternet="0")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 10
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="hotel149",stars="3")
   Semi > negate(stars="4") [1.000000]
   User > negate(stars="4")
   Turn 11
   Usr > [('negate(stars="4")', 1.0)]
   Sys > inform(name="hotel149",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 12
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 13
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [('affirm()', 1.0)]
   Sys > inform(name="hotel149",postcode="hotel149postcode")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 15
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="hotel149",stars="3")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 16
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="hotel149",kind="hotel")
   Semi > negate(kind="guesthouse") [1.000000]
   User > negate(kind="guesthouse")
   Turn 17
   Usr > [('negate(kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel149",hasparking="1")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 18
   Usr > [(u'request(price)', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 19
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 20
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel149",price="hotel149price")
   Semi > request(postcode,name="hotel149") [1.000000]
   User > request(postcode,name="hotel149")
   Turn 21
   Usr > [('request(postcode,name="hotel149")', 1.0)]
   Sys > request(stars)
   Semi > request(name="hotel149",postcode) [1.000000]
   User > request(name="hotel149",postcode)
   Turn 22
   Usr > [('request(name="hotel149",postcode)', 1.0)]
   Sys > inform(name="hotel149",postcode="hotel149postcode")
   Semi > bye() [1.000000]
   User > bye()
   Turn 23
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -23, suc = 0, turn = 23
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > affirm(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 3
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 17, suc = 1, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="2") [1.000000]
   User > confirm(stars="2")
   Turn 3
   Usr > [('confirm(stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="2",kind="hotel") [1.000000]
   User > negate(stars="2",kind="hotel")
   Turn 4
   Usr > [('negate(stars="2",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 6
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse40",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel64",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel69",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel112",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel152",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel156",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel160",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel168",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 16
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse214",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="none",name!="lovell lodge",name!="ashley hotel",name!="guesthouse40",name!="hotel64",name!="hotel69",name!="hotel112",name!="hotel152",name!="hotel156",name!="hotel160",name!="hotel168",name!="guesthouse214",kind="hotel",pricerange="moderate",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 18
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 2, suc = 1, turn = 18
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse99",phone="1223360099")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse99",stars="3")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > reqmore()
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse99",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse99",kind="guesthouse")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse99",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 9
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse99",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 10
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse99",hasinternet="0")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 14
   Usr > [(u'request(phone)', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse99",phone="1223360099")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 16
   Usr > [('request(stars)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 17
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="the lensfield hotel",phone="01223355017")
   Semi > bye() [1.000000]
   User > bye()
   Turn 18
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 2, suc = 1, turn = 18
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 3
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(name="guesthouse129",addr="guesthouse129addr")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 5
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse129",addr="guesthouse129addr")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 6
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4",area="north")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 8
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 9
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 10
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 11
   Usr > [('request(addr)', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -3, suc = 0, turn = 3
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 3
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 4
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="hotel82",hasinternet="1")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 5
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel82",stars="4")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 7
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > reqmore()
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 8
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="hotel82",pricerange="moderate",postcode="hotel82postcode")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 2
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(name="guesthouse229",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse229",phone="12233600229")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse229",price="guesthouse229price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse229",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse229",postcode="guesthouse229postcode")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse229",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse229",price="guesthouse229price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse229",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse229",postcode="guesthouse229postcode")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse229",phone="12233600229")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse229",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse229",postcode="guesthouse229postcode")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse229",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse229",area="east")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",kind="hotel")
   Turn 17
   Usr > [('inform(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 18
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 19
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse229",phone="12233600229")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 20
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse229",area="east")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 21
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse229",hasinternet="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 22
   Usr > [('reqalts()', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 23
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 24
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="guesthouse229",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 25
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse229",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 2
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse77",pricerange="expensive")
   Semi > deny(pricerange="expensive",pricerange="cheap") [1.000000]
   User > deny(pricerange="expensive",pricerange="cheap")
   Turn 3
   Usr > [('deny(pricerange="expensive",pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse77",addr="guesthouse77addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 5
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",type="placetostay") [1.000000]
   User > inform(kind="hotel",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="hotel",type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="el shaddai",price="a single room ranges from 40 pounds and to 50 pounds and a cheapest double room is 60 pounds and a family room ranges from 62 pounds and to 300 pounds")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 4
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="the cambridge belfry",stars="4")
   Semi > confirm(name="el shaddai") [1.000000]
   User > confirm(name="el shaddai")
   Turn 5
   Usr > [('confirm(name="el shaddai")', 1.0)]
   Sys > inform(name="the cambridge belfry")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 3
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="hobsons house",pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 4
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="hobsons house",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="hobsons house",area="west")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 7
   Usr > [(u'request(price)', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",type="placetostay",kind="hotel") [1.000000]
   User > inform(="dontcare",type="placetostay",kind="hotel")
   Turn 8
   Usr > [(u'inform(="dontcare",type="placetostay",kind="hotel")', 1.0)]
   Sys > inform(name="hobsons house",price="a cheapest single room is 59 pounds and a double room ranges from 75 pounds and to 80 pounds and a cheapest family room is 110 pounds")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",type="placetostay") [1.000000]
   User > negate(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > inform(name="el shaddai",stars="0")
   Semi > deny(stars="0",stars="4") [1.000000]
   User > deny(stars="0",stars="4")
   Turn 3
   Usr > [('deny(stars="0",stars="4")', 1.0)]
   Sys > inform(name="el shaddai",postcode="cb1 1eg")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(name="el shaddai",pricerange="cheap")
   Semi > deny(pricerange="cheap",pricerange="expensive") [1.000000]
   User > deny(pricerange="cheap",pricerange="expensive")
   Turn 5
   Usr > [('deny(pricerange="cheap",pricerange="expensive")', 1.0)]
   Sys > inform(name="el shaddai",area="centre")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="el shaddai",price="a single room ranges from 40 pounds and to 50 pounds and a cheapest double room is 60 pounds and a family room ranges from 62 pounds and to 300 pounds")
   Semi > inform(stars="4",kind="guesthouse") [1.000000]
   User > inform(stars="4",kind="guesthouse")
   Turn 7
   Usr > [('inform(stars="4",kind="guesthouse")', 1.0)]
   Sys > inform(name="el shaddai",postcode="cb1 1eg")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 8
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="el shaddai",pricerange="cheap")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 9
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="el shaddai",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 10
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="el shaddai",phone="01223327978")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 11
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="el shaddai",price="a single room ranges from 40 pounds and to 50 pounds and a cheapest double room is 60 pounds and a family room ranges from 62 pounds and to 300 pounds")
   Semi > ack() [1.000000]
   User > ack()
   Turn 12
   Usr > [('ack()', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 13
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 14
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="el shaddai",postcode="cb1 1eg")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 15
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="el shaddai",area="centre")
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Saving deepq-network...
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -16, suc = 0, turn = 16
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 19:35:13: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 19:35:13: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -0.48 +- 2.22
RESULTS:: 19:35:13: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -0.48 +- 2.22
Average success = 13.00 +- 6.67
RESULTS:: 19:35:13: root                               EvaluationManager.py <_prstr>207 :  Average success = 13.00 +- 6.67
Average turns   = 9.88 +- 1.13
RESULTS:: 19:35:13: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 9.88 +- 1.13
*** Evaluating env11-dqn-CH-MLN-00.39: error-rate=0 num-dialogs=100 ***
RESULTS:: 19:35:13: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.39: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.39.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.39
loaded replay size:  6758
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse204",price="guesthouse204price")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse204",addr="guesthouse204addr")
   Semi > inform(stars="3",kind="hotel",pricerange="cheap") [1.000000]
   User > inform(stars="3",kind="hotel",pricerange="cheap")
   Turn 4
   Usr > [('inform(stars="3",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel50",stars="3")
   Semi > confirm(name="guesthouse204") [1.000000]
   User > confirm(name="guesthouse204")
   Turn 5
   Usr > [('confirm(name="guesthouse204")', 1.0)]
   Sys > inform(name="hotel50")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 6
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="hotel50",hasinternet="1")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 7
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="hotel50",addr="hotel50addr")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="2",type="placetostay",kind="hotel") [1.000000]
   User > inform(stars="2",type="placetostay",kind="hotel")
   Turn 3
   Usr > [(u'inform(stars="2",type="placetostay",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse40",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel64",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > inform(type="placetostay",stars="0",kind="guesthouse")
   Turn 4
   Usr > [(u'inform(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="hotel") [1.000000]
   User > inform(="dontcare",kind="hotel")
   Turn 2
   Usr > [('inform(="dontcare",kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > reqalts(hasparking="0") [1.000000]
   User > reqalts(hasparking="0")
   Turn 3
   Usr > [(u'reqalts(hasparking="0")', 1.0)]
   Sys > inform(name="the lensfield hotel",phone="01223355017")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 4
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="the lensfield hotel",addr="53-57 lensfield road")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="the lensfield hotel",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="guesthouse",pricerange="moderate") [1.000000]
   User > inform(="dontcare",kind="guesthouse",pricerange="moderate")
   Turn 2
   Usr > [('inform(="dontcare",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel181",phone="12233600181")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="hotel181",addr="hotel181addr")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(stars="2") [1.000000]
   User > affirm(stars="2")
   Turn 5
   Usr > [('affirm(stars="2")', 1.0)]
   Sys > inform(name="hotel181",stars="0")
   Semi > deny(stars="0",stars="2") [1.000000]
   User > deny(stars="0",stars="2")
   Turn 6
   Usr > [('deny(stars="0",stars="2")', 1.0)]
   Sys > inform(name="hotel181",area="centre")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 7
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="hotel181",price="hotel181price")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 8
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel181",postcode="hotel181postcode")
   Semi > ack() [1.000000]
   User > ack()
   Turn 9
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel181",stars="0")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 10
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(name="hotel181",stars="0")
   Semi > deny(stars="0",stars="2") [1.000000]
   User > deny(stars="0",stars="2")
   Turn 11
   Usr > [('deny(stars="0",stars="2")', 1.0)]
   Sys > inform(name="hotel181",pricerange="expensive")
   Semi > deny(pricerange="expensive",pricerange="cheap") [1.000000]
   User > deny(pricerange="expensive",pricerange="cheap")
   Turn 12
   Usr > [('deny(pricerange="expensive",pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel181",stars="0")
   Semi > deny(stars="0",stars="2") [1.000000]
   User > deny(stars="0",stars="2")
   Turn 13
   Usr > [('deny(stars="0",stars="2")', 1.0)]
   Sys > inform(name="hotel181",hasparking="1")
   Semi > ack() [1.000000]
   User > ack()
   Turn 14
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel181",area="centre")
   Semi > confirm(stars="2") [1.000000]
   User > confirm(stars="2")
   Turn 15
   Usr > [('confirm(stars="2")', 1.0)]
   Sys > inform(name="hotel181",stars="0")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 16
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(name="hotel181",pricerange="expensive")
   Semi > deny(pricerange="expensive",pricerange="cheap") [1.000000]
   User > deny(pricerange="expensive",pricerange="cheap")
   Turn 17
   Usr > [('deny(pricerange="expensive",pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel181",stars="0")
   Semi > deny(stars="0",stars="2") [1.000000]
   User > deny(stars="0",stars="2")
   Turn 18
   Usr > [('deny(stars="0",stars="2")', 1.0)]
   Sys > inform(name="hotel181",price="hotel181price")
   Semi > request(area) [1.000000]
   User > request(area)
   Turn 19
   Usr > [('request(area)', 1.0)]
   Sys > inform(name="hotel181",area="centre")
   Semi > bye() [1.000000]
   User > bye()
   Turn 20
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -20, suc = 0, turn = 20
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 2
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="hotel110",stars="3")
   Semi > deny(stars="3",stars="4") [1.000000]
   User > deny(stars="3",stars="4")
   Turn 3
   Usr > [('deny(stars="3",stars="4")', 1.0)]
   Sys > inform(name="hotel110",price="hotel110price")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="hotel110",addr="hotel110addr")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel110",stars="3")
   Semi > deny(stars="3",stars="4") [1.000000]
   User > deny(stars="3",stars="4")
   Turn 6
   Usr > [('deny(stars="3",stars="4")', 1.0)]
   Sys > inform(name="hotel110",hasinternet="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 3
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(type="placetostay",kind="guesthouse") [1.000000]
   User > inform(type="placetostay",kind="guesthouse")
   Turn 4
   Usr > [(u'inform(type="placetostay",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse203",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 3
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse203",pricerange="cheap")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",hasinternet="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",postcode="guesthouse203postcode")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",pricerange="cheap")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",price="guesthouse203price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",hasinternet="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",phone="12233600203")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",addr="guesthouse203addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",addr="guesthouse203addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",hasparking="1")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 15
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse203",pricerange="cheap")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 19
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",addr="guesthouse203addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 20
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",area="east")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 21
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 22
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 23
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 24
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 25
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel248",hasinternet="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="hotel248",postcode="hotel248postcode")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="hotel248",addr="hotel248addr")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="hotel248",hasparking="1")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 6
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(name="hotel248",phone="12233600248")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel248",phone="12233600248")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="hotel248",hasinternet="0")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 9
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="hotel248",stars="2")
   Semi > negate(stars="4") [1.000000]
   User > negate(stars="4")
   Turn 10
   Usr > [('negate(stars="4")', 1.0)]
   Sys > inform(name="hotel248",postcode="hotel248postcode")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 11
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="hotel248",stars="2")
   Semi > deny(stars="2",stars="4") [1.000000]
   User > deny(stars="2",stars="4")
   Turn 12
   Usr > [('deny(stars="2",stars="4")', 1.0)]
   Sys > inform(name="hotel248",price="hotel248price")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 13
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="hotel248",kind="hotel")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 14
   Usr > [('request(postcode)', 1.0)]
   Sys > inform(name="hotel248",postcode="hotel248postcode")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 15
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel248",pricerange="cheap")
   Semi > deny(pricerange="cheap",pricerange="expensive") [1.000000]
   User > deny(pricerange="cheap",pricerange="expensive")
   Turn 16
   Usr > [('deny(pricerange="cheap",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel248",pricerange="cheap")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 17
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel248",addr="hotel248addr")
   Semi > ack() [1.000000]
   User > ack()
   Turn 18
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel248",kind="hotel")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 19
   Usr > [('request(postcode)', 1.0)]
   Sys > inform(name="hotel248",postcode="hotel248postcode")
   Semi > bye() [1.000000]
   User > bye()
   Turn 20
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -20, suc = 0, turn = 20
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > inform(name="hotel160",pricerange="moderate")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 2
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="hotel160",hasparking="1")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 3
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel160",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 5
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="guesthouse42",pricerange="moderate")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="guesthouse42",price="guesthouse42price")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel50",stars="3")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel50",kind="hotel")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 5
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(name="hotel50",stars="3")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 6
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="hotel50",hasinternet="1")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 7
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="hotel50",addr="hotel50addr")
   Semi > ack() [1.000000]
   User > ack()
   Turn 8
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel50",area="south")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse222",addr="guesthouse222addr")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 3
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="guesthouse222",hasinternet="0")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse222",phone="12233600222")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 5
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="guesthouse222",postcode="guesthouse222postcode")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse222",hasinternet="0")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 7
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse222",area="centre")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0",kind="guesthouse") [1.000000]
   User > negate(stars="0",kind="guesthouse")
   Turn 3
   Usr > [('negate(stars="0",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 4
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse42",price="guesthouse42price")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 7
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="guesthouse42",addr="guesthouse42addr")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 8
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 9
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="guesthouse42",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 10, suc = 1, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse67",price="guesthouse67price")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse67",hasparking="0")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse67",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse67",price="guesthouse67price")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",stars="3",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",stars="3",kind="guesthouse")
   Turn 4
   Usr > [('inform(pricerange="moderate",stars="3",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 5
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 2
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel163",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel163",addr="hotel163addr")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="hotel163",pricerange="moderate")
   Semi > negate(pricerange="cheap",stars="4") [1.000000]
   User > negate(pricerange="cheap",stars="4")
   Turn 5
   Usr > [('negate(pricerange="cheap",stars="4")', 1.0)]
   Sys > inform(name="hotel163",postcode="hotel163postcode")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel163",hasparking="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="hotel163",kind="hotel")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 8
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel163",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 9
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel163",area="west")
   Semi > request(kind) [1.000000]
   User > request(kind)
   Turn 10
   Usr > [('request(kind)', 1.0)]
   Sys > inform(name="hotel163",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="3",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",stars="3",kind="hotel")
   Turn 2
   Usr > [('inform(pricerange="expensive",stars="3",kind="hotel")', 1.0)]
   Sys > inform(name="hotel200",addr="hotel200addr")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 3
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="hotel200",hasinternet="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 3
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="cityroomz",kind="hotel")
   Semi > negate(kind="guesthouse") [1.000000]
   User > negate(kind="guesthouse")
   Turn 5
   Usr > [('negate(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 6
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="guesthouse42",pricerange="moderate")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 7
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="guesthouse42",addr="guesthouse42addr")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 8
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="guesthouse42",postcode="guesthouse42postcode")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse223",phone="12233600223")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 3
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="guesthouse223",addr="guesthouse223addr")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 4
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse223",pricerange="moderate")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="guesthouse223",kind="guesthouse")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse223",area="west")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="guesthouse223",hasparking="0")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 8
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse223",phone="12233600223")
   Semi > confirm(stars="2") [1.000000]
   User > confirm(stars="2")
   Turn 9
   Usr > [('confirm(stars="2")', 1.0)]
   Sys > inform(name="guesthouse223",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 10
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="guesthouse223",kind="guesthouse")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 11
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="guesthouse223",area="west")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 12
   Usr > [('request(phone)', 1.0)]
   Sys > inform(name="guesthouse223",phone="12233600223")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 13
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="guesthouse223",addr="guesthouse223addr")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 14
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse223",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 15
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse223",price="guesthouse223price")
   Semi > ack() [1.000000]
   User > ack()
   Turn 16
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse223",area="west")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 17
   Usr > [('request(phone)', 1.0)]
   Sys > inform(name="guesthouse223",phone="12233600223")
   Semi > confirm(stars="2") [1.000000]
   User > confirm(stars="2")
   Turn 18
   Usr > [('confirm(stars="2")', 1.0)]
   Sys > inform(name="guesthouse223",stars="0")
   Semi > deny(stars="0",stars="2") [1.000000]
   User > deny(stars="0",stars="2")
   Turn 19
   Usr > [('deny(stars="0",stars="2")', 1.0)]
   Sys > inform(name="guesthouse223",addr="guesthouse223addr")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 20
   Usr > [('request(phone)', 1.0)]
   Sys > inform(name="guesthouse223",phone="12233600223")
   Semi > bye() [1.000000]
   User > bye()
   Turn 21
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -21, suc = 0, turn = 21
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse201",addr="guesthouse201addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 4
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(stars="4",kind="hotel") [1.000000]
   User > affirm(stars="4",kind="hotel")
   Turn 5
   Usr > [('affirm(stars="4",kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse201",area="centre")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse201",area="centre")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse201",phone="12233600201")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse201",phone="12233600201")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="2",type="placetostay") [1.000000]
   User > inform(stars="2",type="placetostay")
   Turn 4
   Usr > [(u'inform(stars="2",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 5
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="lovell lodge",price="a cheapest single room is 50 pounds and a cheapest double room is 65 pounds and a cheapest family room is 70 pounds")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 6
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="lovell lodge",addr="365 milton road")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="lovell lodge",kind="hotel")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 8
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="lovell lodge",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse146",hasinternet="1")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse146",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 4
   Usr > [('negate(stars="3")', 1.0)]
   Sys > inform(name="guesthouse146",hasinternet="1")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 5
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse146",pricerange="cheap")
   Semi > deny(pricerange="cheap",pricerange="expensive") [1.000000]
   User > deny(pricerange="cheap",pricerange="expensive")
   Turn 6
   Usr > [('deny(pricerange="cheap",pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse146",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 7
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse146",pricerange="cheap")
   Semi > deny(pricerange="cheap",pricerange="expensive") [1.000000]
   User > deny(pricerange="cheap",pricerange="expensive")
   Turn 8
   Usr > [('deny(pricerange="cheap",pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse146",area="south")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 9
   Usr > [('request(hasinternet)', 1.0)]
   Sys > inform(name="guesthouse146",hasinternet="1")
   Semi > ack() [1.000000]
   User > ack()
   Turn 10
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse146",hasparking="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="cheap",type="placetostay") [1.000000]
   User > inform(pricerange="cheap",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > inform(name="hotel105",hasparking="1")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 3
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="hotel105",phone="12233600105")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel105",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 10, suc = 1, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel168",kind="hotel")
   Semi > reqalts(kind="dontcare") [1.000000]
   User > reqalts(kind="dontcare")
   Turn 3
   Usr > [('reqalts(kind="dontcare")', 1.0)]
   Sys > inform(name="hotel168",phone="12233600168")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="hotel168",pricerange="moderate")
   Semi > negate(pricerange="expensive",stars="0") [1.000000]
   User > negate(pricerange="expensive",stars="0")
   Turn 5
   Usr > [('negate(pricerange="expensive",stars="0")', 1.0)]
   Sys > inform(name="hotel168",area="centre")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel168",postcode="hotel168postcode")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 7
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="hotel168",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(price,postcode) [1.000000]
   User > request(price,postcode)
   Turn 4
   Usr > [(u'request(price,postcode)', 1.0)]
   Sys > inform(name="cityroomz",price="a single room ranges from 47 pounds 50 and to 50 pounds and a cheapest double room is 67 pounds 50 and a cheapest family room is 77 pounds 50",postcode="cb1 2tz")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 6
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="cityroomz",kind="hotel")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 9
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 10
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 11
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="cityroomz",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 8, suc = 1, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel230",postcode="hotel230postcode")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 3
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(name="hotel230",phone="12233600230")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 4
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(name="hotel230",stars="2")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 5
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(name="hotel230",stars="2")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 6
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(name="hotel230",stars="2")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 7
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(name="hotel230",area="north")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="hotel230",price="hotel230price")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 9
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(name="hotel230",stars="2")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 10
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(name="hotel230",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 11
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel230",area="north")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 12
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="hotel230",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 13
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="hotel230",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="4") [1.000000]
   User > inform(pricerange="expensive",stars="4")
   Turn 2
   Usr > [('inform(pricerange="expensive",stars="4")', 1.0)]
   Sys > inform(name="autumn house",hasparking="1")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 3
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(name="autumn house",hasinternet="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel45",postcode="hotel45postcode")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="hotel45",price="hotel45price")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 4
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(name="hotel45",stars="2")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 5
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(name="hotel45",stars="2")
   Semi > deny(stars="2",stars="3") [1.000000]
   User > deny(stars="2",stars="3")
   Turn 6
   Usr > [('deny(stars="2",stars="3")', 1.0)]
   Sys > inform(name="hotel45",stars="2")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 7
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(name="hotel45",price="hotel45price")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="hotel45",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 9
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="hotel45",area="north")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 10
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel45",pricerange="cheap")
   Semi > deny(pricerange="cheap",pricerange="expensive") [1.000000]
   User > deny(pricerange="cheap",pricerange="expensive")
   Turn 11
   Usr > [('deny(pricerange="cheap",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel45",addr="hotel45addr")
   Semi > request(area) [1.000000]
   User > request(area)
   Turn 12
   Usr > [('request(area)', 1.0)]
   Sys > inform(name="hotel45",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel50",hasparking="0")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="hotel50",pricerange="cheap")
   Semi > deny(pricerange="cheap",pricerange="expensive") [1.000000]
   User > deny(pricerange="cheap",pricerange="expensive")
   Turn 4
   Usr > [('deny(pricerange="cheap",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel50",phone="1223360050")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 5
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(name="hotel50",area="south")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 7
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="the lensfield hotel",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 8
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse63",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 9
   Usr > [('thankyou()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 10
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="guesthouse63",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="cheap",type="placetostay") [1.000000]
   User > inform(pricerange="cheap",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > inform(name="allenbell",phone="01223210353")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(stars="0",kind="guesthouse") [1.000000]
   User > affirm(stars="0",kind="guesthouse")
   Turn 4
   Usr > [('affirm(stars="0",kind="guesthouse")', 1.0)]
   Sys > inform(name="allenbell",pricerange="cheap")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="allenbell",phone="01223210353")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="allenbell",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="allenbell",postcode="cb1 3js")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="allenbell",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="allenbell",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 16
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="allenbell",price="a single room ranges from 35 pounds and to 50 pounds and a double room ranges from 60 pounds and to 75 pounds and a family room ranges from 90 pounds and to 100 pounds")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 18
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="allenbell",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 19
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 20
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="allenbell",addr="517a coldham lane")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 21
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 22
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="allenbell",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 23
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 24
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="allenbell",pricerange="cheap")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 25
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > inform(type="placetostay",stars="4",kind="hotel")
   Turn 3
   Usr > [(u'inform(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > request(phone,addr) [1.000000]
   User > request(phone,addr)
   Turn 4
   Usr > [(u'request(phone,addr)', 1.0)]
   Sys > inform(name="hotel82",phone="1223360082",addr="hotel82addr")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="guesthouse89",phone="1223360089")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 7
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 8
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="guesthouse89",addr="guesthouse89addr")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0",kind="guesthouse") [1.000000]
   User > negate(stars="0",kind="guesthouse")
   Turn 3
   Usr > [('negate(stars="0",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 5
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="guesthouse42",price="guesthouse42price")
   Semi > request(hasinternet,name="guesthouse42") [1.000000]
   User > request(hasinternet,name="guesthouse42")
   Turn 6
   Usr > [(u'request(hasinternet,name="guesthouse42")', 1.0)]
   Sys > inform(name="guesthouse42",hasinternet="1")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse42",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 2
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel133",kind="guesthouse")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 3
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="hotel133",price="hotel133price")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 4
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="hotel133",postcode="hotel133postcode")
   Semi > inform(type="placetostay",stars="4",pricerange="cheap") [1.000000]
   User > inform(type="placetostay",stars="4",pricerange="cheap")
   Turn 5
   Usr > [(u'inform(type="placetostay",stars="4",pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel133",postcode="hotel133postcode")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 6
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel133",pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 7
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel133",price="hotel133price")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="hotel133",kind="guesthouse")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 9
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="hotel133",postcode="hotel133postcode")
   Semi > ack() [1.000000]
   User > ack()
   Turn 10
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel133",phone="12233600133")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse49",price="guesthouse49price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 4
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 5
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > inform(name="guesthouse49",hasinternet="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse93",addr="guesthouse93addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse93",phone="1223360093")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 4
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="guesthouse93",price="guesthouse93price")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 5
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse93",pricerange="expensive")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse93",hasparking="0")
   Semi > request(kind) [1.000000]
   User > request(kind)
   Turn 7
   Usr > [('request(kind)', 1.0)]
   Sys > inform(name="guesthouse93",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 8
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse93",area="centre")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 9
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse93",pricerange="expensive")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 10
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="guesthouse93",price="guesthouse93price")
   Semi > request(kind) [1.000000]
   User > request(kind)
   Turn 11
   Usr > [('request(kind)', 1.0)]
   Sys > inform(name="guesthouse93",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 12
   Usr > [(u'negate(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse93",pricerange="expensive")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 13
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="guesthouse93",price="guesthouse93price")
   Semi > ack() [1.000000]
   User > ack()
   Turn 14
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse93",phone="1223360093")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 15
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse93",addr="guesthouse93addr")
   Semi > confirm(stars="2") [1.000000]
   User > confirm(stars="2")
   Turn 16
   Usr > [('confirm(stars="2")', 1.0)]
   Sys > inform(name="guesthouse93",stars="0")
   Semi > negate(stars="2") [1.000000]
   User > negate(stars="2")
   Turn 17
   Usr > [('negate(stars="2")', 1.0)]
   Sys > inform(name="guesthouse93",phone="1223360093")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 18
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="guesthouse93",price="guesthouse93price")
   Semi > request(kind) [1.000000]
   User > request(kind)
   Turn 19
   Usr > [('request(kind)', 1.0)]
   Sys > inform(name="guesthouse93",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 20
   Usr > [(u'negate(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse93",pricerange="expensive")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 21
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="guesthouse93",price="guesthouse93price")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 22
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse93",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 23
   Usr > [(u'deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse93",stars="0")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 24
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(name="guesthouse93",price="guesthouse93price")
   Semi > confirm(stars="2") [1.000000]
   User > confirm(stars="2")
   Turn 25
   Usr > [('confirm(stars="2")', 1.0)]
   Sys > inform(name="guesthouse93",stars="0")
   Semi > deny(stars="0",stars="2") [1.000000]
   User > deny(stars="0",stars="2")
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="the cambridge belfry",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="the cambridge belfry",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="the cambridge belfry",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="the cambridge belfry",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="the cambridge belfry",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="the cambridge belfry",phone="01954714600")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="the cambridge belfry",phone="01954714600")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="the cambridge belfry",postcode="cb23 6bw")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="the cambridge belfry",hasinternet="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel133",stars="2")
   Semi > deny(stars="2",stars="3") [1.000000]
   User > deny(stars="2",stars="3")
   Turn 3
   Usr > [('deny(stars="2",stars="3")', 1.0)]
   Sys > inform(name="hotel133",postcode="hotel133postcode")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="hotel133",area="centre")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 5
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(name="hotel133",pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 6
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel133",price="hotel133price")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 9
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 10
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="the lensfield hotel",kind="hotel")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 11
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="the lensfield hotel",pricerange="expensive")
   Semi > ack() [1.000000]
   User > ack()
   Turn 12
   Usr > [('ack()', 1.0)]
   Sys > inform(name="the lensfield hotel",price="a single room ranges from 65 pounds and to 85 pounds and a double room ranges from 90 pounds and to 120 pounds and a family room ranges from 125 pounds and to 135 pounds")
   Semi > ack() [1.000000]
   User > ack()
   Turn 13
   Usr > [('ack()', 1.0)]
   Sys > inform(name="the lensfield hotel",addr="53-57 lensfield road")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="aylesbray lodge guest house",phone="01223240089")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="aylesbray lodge guest house",hasparking="1")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 4
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="aylesbray lodge guest house",phone="01223240089")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="aylesbray lodge guest house",addr="5 mowbray road")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 6
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="aylesbray lodge guest house",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 7
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="aylesbray lodge guest house",postcode="cb1 7sr")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="aylesbray lodge guest house",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 9
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="aylesbray lodge guest house",hasinternet="1")
   Semi > request(postcode,addr) [1.000000]
   User > request(postcode,addr)
   Turn 10
   Usr > [('request(postcode,addr)', 1.0)]
   Sys > inform(name="aylesbray lodge guest house",postcode="cb1 7sr",addr="5 mowbray road")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 7
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 8
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 9
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 10
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="hotel82",phone="1223360082")
   Semi > ack() [1.000000]
   User > ack()
   Turn 11
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel82",hasparking="1")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 12
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 13
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 14
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="guesthouse89",phone="1223360089")
   Semi > request(hasparking,postcode) [1.000000]
   User > request(hasparking,postcode)
   Turn 15
   Usr > [(u'request(hasparking,postcode)', 1.0)]
   Sys > inform(name="guesthouse89",hasparking="1",postcode="guesthouse89postcode")
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 4, suc = 1, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse41",stars="0")
   Semi > deny(stars="0",stars="4") [1.000000]
   User > deny(stars="0",stars="4")
   Turn 3
   Usr > [('deny(stars="0",stars="4")', 1.0)]
   Sys > inform(name="guesthouse41",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="hobsons house",area="west")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hobsons house",area="west")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hobsons house",hasparking="1")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 5
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(name="hobsons house",postcode="cb3 9lh")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hobsons house",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 7
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(name="hobsons house",area="west")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 8
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="hobsons house",stars="3")
   Semi > deny(stars="3",stars="4") [1.000000]
   User > deny(stars="3",stars="4")
   Turn 9
   Usr > [('deny(stars="3",stars="4")', 1.0)]
   Sys > inform(name="hobsons house",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 10
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="hobsons house",hasinternet="1")
   Semi > ack() [1.000000]
   User > ack()
   Turn 11
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hobsons house",phone="01223304906")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel122",hasinternet="0")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="hotel122",hasinternet="0")
   Semi > inform(stars="0",kind="hotel",pricerange="expensive") [1.000000]
   User > inform(stars="0",kind="hotel",pricerange="expensive")
   Turn 4
   Usr > [('inform(stars="0",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel122",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",area="west")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",kind="hotel")
   Semi > negate(kind="guesthouse") [1.000000]
   User > negate(kind="guesthouse")
   Turn 4
   Usr > [('negate(kind="guesthouse")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",phone="01480446000")
   Semi > inform(type="placetostay",stars="4") [1.000000]
   User > inform(type="placetostay",stars="4")
   Turn 5
   Usr > [(u'inform(type="placetostay",stars="4")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",price="a cheapest single room is 125 pounds and a cheapest double room is 145 pounds and a cheapest family room is 145 pounds")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 7
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel133",addr="hotel133addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel133",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel133",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel133",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel133",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel133",phone="12233600133")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel133",phone="12233600133")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel133",addr="hotel133addr")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="cheap",stars="4",kind="guesthouse") [1.000000]
   User > inform(pricerange="cheap",stars="4",kind="guesthouse")
   Turn 2
   Usr > [('inform(pricerange="cheap",stars="4",kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse84",postcode="guesthouse84postcode")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse84",hasinternet="0")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 4
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="guesthouse84",stars="2")
   Semi > deny(stars="2",stars="4") [1.000000]
   User > deny(stars="2",stars="4")
   Turn 5
   Usr > [('deny(stars="2",stars="4")', 1.0)]
   Sys > inform(name="guesthouse84",stars="2")
   Semi > negate(stars="4",kind="hotel") [1.000000]
   User > negate(stars="4",kind="hotel")
   Turn 6
   Usr > [('negate(stars="4",kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse84",area="centre")
   Semi > request(hasinternet,postcode) [1.000000]
   User > request(hasinternet,postcode)
   Turn 7
   Usr > [(u'request(hasinternet,postcode)', 1.0)]
   Sys > inform(name="guesthouse84",hasinternet="0",postcode="guesthouse84postcode")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel168",addr="hotel168addr")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="hotel168",postcode="hotel168postcode")
   Semi > inform(stars="2",kind="hotel") [1.000000]
   User > inform(stars="2",kind="hotel")
   Turn 4
   Usr > [('inform(stars="2",kind="hotel")', 1.0)]
   Sys > inform(name="hotel168",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(kind="hotel",pricerange="moderate") [1.000000]
   User > affirm(kind="hotel",pricerange="moderate")
   Turn 4
   Usr > [('affirm(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3",type="placetostay") [1.000000]
   User > negate(stars="3",type="placetostay")
   Turn 3
   Usr > [(u'negate(stars="3",type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",kind="guesthouse")
   Turn 4
   Usr > [('inform(pricerange="moderate",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse241",price="guesthouse241price")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 3
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="guesthouse241",addr="guesthouse241addr")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 4
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse241",stars="2")
   Semi > confirm(stars="2") [1.000000]
   User > confirm(stars="2")
   Turn 5
   Usr > [('confirm(stars="2")', 1.0)]
   Sys > inform(name="guesthouse241",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="guesthouse241",area="south")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 7
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="guesthouse241",kind="guesthouse")
   Semi > ack() [1.000000]
   User > ack()
   Turn 8
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse241",stars="2")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 9
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse241",pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 10
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse241",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 11
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse241",hasinternet="0")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 12
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="guesthouse241",addr="guesthouse241addr")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 13
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="guesthouse241",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 14
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse241",price="guesthouse241price")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 15
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse241",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -16, suc = 0, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="0",type="placetostay") [1.000000]
   User > inform(stars="0",type="placetostay")
   Turn 3
   Usr > [(u'inform(stars="0",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse41",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse41",stars="0")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="guesthouse41",phone="1223360041")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="guesthouse41",phone="1223360041")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 8
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="guesthouse41",pricerange="moderate")
   Semi > ack() [1.000000]
   User > ack()
   Turn 9
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse41",phone="1223360041")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 10, suc = 1, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse43",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse43",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse43",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse47",stars="3")
   Semi > request(phone,hasinternet) [1.000000]
   User > request(phone,hasinternet)
   Turn 7
   Usr > [(u'request(phone,hasinternet)', 1.0)]
   Sys > inform(name="guesthouse47",hasinternet="1",phone="1223360047")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel133",stars="2")
   Semi > deny(stars="2",stars="0") [1.000000]
   User > deny(stars="2",stars="0")
   Turn 3
   Usr > [('deny(stars="2",stars="0")', 1.0)]
   Sys > inform(name="hotel133",postcode="hotel133postcode")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel133",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel133",kind="guesthouse")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 6
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(name="hotel133",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel133",postcode="hotel133postcode")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel133",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel133",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel133",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel133",postcode="hotel133postcode")
   Semi > confirm(name="hotel133") [1.000000]
   User > confirm(name="hotel133")
   Turn 12
   Usr > [('confirm(name="hotel133")', 1.0)]
   Sys > inform(name="hotel133")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel133")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel133")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel133")
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -16, suc = 0, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="3") [1.000000]
   User > inform(="dontcare",stars="3")
   Turn 4
   Usr > [('inform(="dontcare",stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",kind="guesthouse")
   Turn 6
   Usr > [('inform(pricerange="moderate",kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel62",pricerange="cheap")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(stars="4",kind="hotel") [1.000000]
   User > affirm(stars="4",kind="hotel")
   Turn 4
   Usr > [('affirm(stars="4",kind="hotel")', 1.0)]
   Sys > inform(name="hotel62",price="hotel62price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel62",phone="1223360062")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel62",hasinternet="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel62",postcode="hotel62postcode")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel62",price="hotel62price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel62",postcode="hotel62postcode")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel62",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel62",addr="hotel62addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel62",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel62",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel62",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel62",pricerange="cheap")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel62",addr="hotel62addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel62",price="hotel62price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel62",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 19
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel62",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 20
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel62",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 21
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel62",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 22
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel62",hasinternet="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 23
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel62",phone="1223360062")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 24
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel62",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 25
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel62",phone="1223360062")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse232",price="guesthouse232price")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 3
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse232",area="west")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 4
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(name="guesthouse232",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse232",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 6
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse232",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 7
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse232",pricerange="expensive")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 8
   Usr > [('request(stars)', 1.0)]
   Sys > inform(name="guesthouse232",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(hasinternet,name="limehouse") [1.000000]
   User > request(hasinternet,name="limehouse")
   Turn 3
   Usr > [(u'request(hasinternet,name="limehouse")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 5
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 6
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 9
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="2") [1.000000]
   User > negate(stars="2")
   Turn 3
   Usr > [('negate(stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 5
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="ashley hotel",stars="2")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse40",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel64",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel69",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel112",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel152",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel156",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel160",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel168",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse214",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="none",name!="lovell lodge",name!="ashley hotel",name!="guesthouse40",name!="hotel64",name!="hotel69",name!="hotel112",name!="hotel152",name!="hotel156",name!="hotel160",name!="hotel168",name!="guesthouse214",kind="hotel",pricerange="moderate",stars="2")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 16
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 17
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 3, suc = 1, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse203",price="guesthouse203price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",area="east")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",phone="12233600203")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",addr="guesthouse203addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",phone="12233600203")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",pricerange="cheap")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",price="guesthouse203price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",postcode="guesthouse203postcode")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",postcode="guesthouse203postcode")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse203",pricerange="cheap")
   Semi > bye() [1.000000]
   User > bye()
   Turn 17
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -17, suc = 0, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0",kind="guesthouse") [1.000000]
   User > negate(stars="0",kind="guesthouse")
   Turn 3
   Usr > [('negate(stars="0",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 5
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="guesthouse42",price="guesthouse42price")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 6
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="guesthouse42",addr="guesthouse42addr")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",kind="guesthouse")
   Turn 2
   Usr > [('inform(pricerange="moderate",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",stars="3") [1.000000]
   User > inform(pricerange="moderate",stars="3")
   Turn 4
   Usr > [('inform(pricerange="moderate",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",kind="guesthouse")
   Turn 5
   Usr > [('inform(pricerange="moderate",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > inform(name="hotel167",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel167",price="hotel167price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel167",area="south")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel167",area="south")
   Semi > confirm(name="hotel167") [1.000000]
   User > confirm(name="hotel167")
   Turn 6
   Usr > [('confirm(name="hotel167")', 1.0)]
   Sys > inform(name="hotel167")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel167")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 3
   Usr > [('negate(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 5
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",kind="hotel") [1.000000]
   User > inform(pricerange="moderate",kind="hotel")
   Turn 7
   Usr > [('inform(pricerange="moderate",kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 8
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 9
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 10
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel163",area="west")
   Semi > reqalts(area="dontcare") [1.000000]
   User > reqalts(area="dontcare")
   Turn 3
   Usr > [('reqalts(area="dontcare")', 1.0)]
   Sys > inform(name="hotel163",postcode="hotel163postcode")
   Semi > inform(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > inform(type="placetostay",stars="4",kind="hotel")
   Turn 4
   Usr > [(u'inform(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > inform(name="hotel163",phone="12233600163")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel163",hasinternet="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel92",area="south")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="hotel92",kind="hotel")
   Semi > reqalts(kind="dontcare") [1.000000]
   User > reqalts(kind="dontcare")
   Turn 4
   Usr > [('reqalts(kind="dontcare")', 1.0)]
   Sys > inform(name="hotel92",price="hotel92price")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 5
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(name="hotel92",stars="4")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 6
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="hotel92",stars="4")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 7
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel92",pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 8
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel92",phone="1223360092")
   Semi > request(price,name="hotel92") [1.000000]
   User > request(price,name="hotel92")
   Turn 9
   Usr > [(u'request(price,name="hotel92")', 1.0)]
   Sys > inform(name="hotel92",price="hotel92price")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 10
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="hotel92",stars="4")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 11
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel92",pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 12
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel92",price="hotel92price")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 13
   Usr > [('request(stars)', 1.0)]
   Sys > inform(name="hotel92",stars="4")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 14
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel92",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 15
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel92",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 16
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel92",postcode="hotel92postcode")
   Semi > request(price,stars) [1.000000]
   User > request(price,stars)
   Turn 17
   Usr > [(u'request(price,stars)', 1.0)]
   Sys > inform(name="hotel92",price="hotel92price",stars="4")
   Semi > request(area) [1.000000]
   User > request(area)
   Turn 18
   Usr > [('request(area)', 1.0)]
   Sys > inform(name="hotel92",area="south")
   Semi > ack() [1.000000]
   User > ack()
   Turn 19
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel92",hasinternet="0")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 20
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel92",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 21
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -21, suc = 0, turn = 21
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > inform(name="hotel230",postcode="hotel230postcode")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 3
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="cityroomz",hasinternet="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 16, suc = 1, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 7
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="home from home",addr="78-80 milton road")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 9
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="home from home",kind="guesthouse")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 10
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="home from home",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel152",postcode="hotel152postcode")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 3
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="hotel152",price="hotel152price")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 4
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel152",pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 5
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel152",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="hotel152",price="hotel152price")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 7
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="hotel152",postcode="hotel152postcode")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 8
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(name="hotel152",hasinternet="1")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 9
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="hotel152",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",stars="3") [1.000000]
   User > inform(pricerange="moderate",stars="3")
   Turn 5
   Usr > [('inform(pricerange="moderate",stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",kind="guesthouse") [1.000000]
   User > inform(pricerange="moderate",kind="guesthouse")
   Turn 7
   Usr > [('inform(pricerange="moderate",kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel235",price="hotel235price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel235",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel235",addr="hotel235addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel235",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel235",area="centre")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel235",area="centre")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel235",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel235",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel235",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="2",type="placetostay",kind="hotel") [1.000000]
   User > negate(stars="2",type="placetostay",kind="hotel")
   Turn 3
   Usr > [(u'negate(stars="2",type="placetostay",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse40",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel64",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel69",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel112",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel152",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel156",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel160",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel168",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse214",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="none",name!="lovell lodge",name!="ashley hotel",name!="guesthouse40",name!="hotel64",name!="hotel69",name!="hotel112",name!="hotel152",name!="hotel156",name!="hotel160",name!="hotel168",name!="guesthouse214",kind="hotel",pricerange="moderate",stars="2")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 15
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(name="ashley hotel") [1.000000]
   User > confirm(name="ashley hotel")
   Turn 16
   Usr > [('confirm(name="ashley hotel")', 1.0)]
   Sys > inform(name="lovell lodge")
   Semi > bye() [1.000000]
   User > bye()
   Turn 17
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 3, suc = 1, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 5
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(name="hotel82")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel82")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="arbury lodge guesthouse",hasinternet="1")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 3
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(name="arbury lodge guesthouse",price="a cheapest single room is 50 pounds and a cheapest double room is 75 pounds and a cheapest family room is 100 pounds")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 4
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="arbury lodge guesthouse",phone="01223364319")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 5
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="arbury lodge guesthouse",addr="82 arbury road")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 6
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="arbury lodge guesthouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="arbury lodge guesthouse",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 8
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="arbury lodge guesthouse",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 9
   Usr > [('ack()', 1.0)]
   Sys > inform(name="arbury lodge guesthouse",area="north")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 10
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="arbury lodge guesthouse",phone="01223364319")
   Semi > request(addr,name="arbury lodge guesthouse") [1.000000]
   User > request(addr,name="arbury lodge guesthouse")
   Turn 11
   Usr > [(u'request(addr,name="arbury lodge guesthouse")', 1.0)]
   Sys > inform(name="arbury lodge guesthouse",addr="82 arbury road")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse48",price="guesthouse48price")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="guesthouse48",hasinternet="1")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse48",pricerange="cheap")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 5
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse48",phone="1223360048")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse219",pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 3
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse219",postcode="guesthouse219postcode")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 4
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse219",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse219",area="east")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 6
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(name="guesthouse219",stars="2")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 7
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(name="guesthouse219",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 8
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse219",price="guesthouse219price")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 9
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="guesthouse219",phone="12233600219")
   Semi > request(area) [1.000000]
   User > request(area)
   Turn 10
   Usr > [('request(area)', 1.0)]
   Sys > inform(name="guesthouse219",area="east")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="0",kind="hotel") [1.000000]
   User > affirm(stars="0",kind="hotel")
   Turn 2
   Usr > [('affirm(stars="0",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse41",stars="0")
   Semi > confirm(name="cityroomz") [1.000000]
   User > confirm(name="cityroomz")
   Turn 4
   Usr > [('confirm(name="cityroomz")', 1.0)]
   Sys > inform(name="guesthouse41")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 5
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="guesthouse41",addr="guesthouse41addr")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > inform(type="placetostay",stars="0",kind="guesthouse")
   Turn 4
   Usr > [(u'inform(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 7
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="guesthouse42",price="guesthouse42price")
   Semi > ack() [1.000000]
   User > ack()
   Turn 8
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel82",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(name="hotel82",hasparking="1")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 4
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="hotel82",price="hotel82price")
   Semi > inform(type="placetostay",stars="0",kind="guesthouse",pricerange="expensive") [1.000000]
   User > inform(type="placetostay",stars="0",kind="guesthouse",pricerange="expensive")
   Turn 5
   Usr > [(u'inform(type="placetostay",stars="0",kind="guesthouse",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel82",price="hotel82price")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel82",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 7
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(name="hotel82",kind="hotel")
   Semi > negate(kind="guesthouse") [1.000000]
   User > negate(kind="guesthouse")
   Turn 8
   Usr > [('negate(kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel82",pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 9
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel82",hasinternet="1")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 10
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel82",kind="hotel")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 11
   Usr > [('deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel82",hasparking="1")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 12
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="hotel82",price="hotel82price")
   Semi > ack() [1.000000]
   User > ack()
   Turn 13
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel82",area="north")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 14
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="hotel82",hasinternet="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 15
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="3",kind="hotel") [1.000000]
   User > affirm(stars="3",kind="hotel")
   Turn 2
   Usr > [('affirm(stars="3",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse43",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse43",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse43",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 5
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 2
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 4
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse89",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse89",pricerange="moderate")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 8
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse89",price="guesthouse89price")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 10
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse89",kind="hotel")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 11
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="guesthouse89",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse89",phone="1223360089")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse89",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse89",price="guesthouse89price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse89",phone="1223360089")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse89",addr="guesthouse89addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse89",kind="hotel")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 18
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="guesthouse89",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 19
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse89",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 20
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse89",kind="hotel")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 21
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="guesthouse89",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 22
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse89",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 23
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse89",price="guesthouse89price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 24
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse89",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 25
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse89",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel152",addr="hotel152addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel152",addr="hotel152addr")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 4
   Usr > [('request(stars)', 1.0)]
   Sys > inform(name="hotel152",stars="2")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 5
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(name="hotel152",addr="hotel152addr")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 6
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(name="hotel152",postcode="hotel152postcode")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 7
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel152",kind="hotel")
   Semi > negate(kind="guesthouse") [1.000000]
   User > negate(kind="guesthouse")
   Turn 8
   Usr > [('negate(kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel152",price="hotel152price")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 9
   Usr > [('request(stars)', 1.0)]
   Sys > inform(name="hotel152",stars="2")
   Semi > deny(stars="2",stars="4") [1.000000]
   User > deny(stars="2",stars="4")
   Turn 10
   Usr > [(u'deny(stars="2",stars="4")', 1.0)]
   Sys > inform(name="hotel152",price="hotel152price")
   Semi > request(stars,addr) [1.000000]
   User > request(stars,addr)
   Turn 11
   Usr > [(u'request(stars,addr)', 1.0)]
   Sys > inform(name="hotel152",stars="2",addr="hotel152addr")
   Semi > negate(stars="4") [1.000000]
   User > negate(stars="4")
   Turn 12
   Usr > [(u'negate(stars="4")', 1.0)]
   Sys > inform(name="hotel152",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 13
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel152",area="centre")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 14
   Usr > [('request(stars)', 1.0)]
   Sys > inform(name="hotel152",stars="2")
   Semi > deny(stars="2",stars="4") [1.000000]
   User > deny(stars="2",stars="4")
   Turn 15
   Usr > [(u'deny(stars="2",stars="4")', 1.0)]
   Sys > inform(name="hotel152",stars="2")
   Semi > negate(stars="4") [1.000000]
   User > negate(stars="4")
   Turn 16
   Usr > [(u'negate(stars="4")', 1.0)]
   Sys > inform(name="hotel152",area="centre")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 17
   Usr > [('request(stars)', 1.0)]
   Sys > inform(name="hotel152",stars="2")
   Semi > negate(stars="4") [1.000000]
   User > negate(stars="4")
   Turn 18
   Usr > [(u'negate(stars="4")', 1.0)]
   Sys > inform(name="hotel152",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 19
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -19, suc = 0, turn = 19
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="2") [1.000000]
   User > affirm(type="placetostay",stars="2")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 3
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="lovell lodge",addr="365 milton road")
   Semi > confirm(stars="2") [1.000000]
   User > confirm(stars="2")
   Turn 4
   Usr > [('confirm(stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="ashley hotel",stars="2")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse40",stars="2")
   Semi > confirm(name="ashley hotel") [1.000000]
   User > confirm(name="ashley hotel")
   Turn 7
   Usr > [('confirm(name="ashley hotel")', 1.0)]
   Sys > inform(name="guesthouse40",kind="hotel")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse40",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 9
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse40",kind="hotel")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 10
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="guesthouse40",addr="guesthouse40addr")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse171",addr="guesthouse171addr")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="guesthouse171",price="guesthouse171price")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse171",postcode="guesthouse171postcode")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse171",addr="guesthouse171addr")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="guesthouse171",pricerange="cheap")
   Semi > deny(pricerange="cheap",pricerange="expensive") [1.000000]
   User > deny(pricerange="cheap",pricerange="expensive")
   Turn 7
   Usr > [('deny(pricerange="cheap",pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse171",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel188",phone="12233600188")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel188",postcode="hotel188postcode")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel188",phone="12233600188")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel188",hasinternet="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel188",pricerange="cheap")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 7
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel188",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel188",postcode="hotel188postcode")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel188",postcode="hotel188postcode")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel188",addr="hotel188addr")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="4") [1.000000]
   User > inform(pricerange="expensive",stars="4")
   Turn 2
   Usr > [('inform(pricerange="expensive",stars="4")', 1.0)]
   Sys > inform(name="guesthouse37",hasinternet="0")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse37",stars="2")
   Semi > deny(stars="2",stars="4") [1.000000]
   User > deny(stars="2",stars="4")
   Turn 4
   Usr > [('deny(stars="2",stars="4")', 1.0)]
   Sys > inform(name="guesthouse37",postcode="guesthouse37postcode")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="2",kind="hotel") [1.000000]
   User > negate(stars="2",kind="hotel")
   Turn 3
   Usr > [('negate(stars="2",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(addr,postcode) [1.000000]
   User > request(addr,postcode)
   Turn 4
   Usr > [(u'request(addr,postcode)', 1.0)]
   Sys > inform(name="lovell lodge",postcode="cb4 1sr",addr="365 milton road")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > confirm(name="lovell lodge") [1.000000]
   User > confirm(name="lovell lodge")
   Turn 6
   Usr > [('confirm(name="lovell lodge")', 1.0)]
   Sys > inform(name="ashley hotel")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 7
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="ashley hotel",addr="74 chesterton road")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 8
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="ashley hotel",postcode="cb4 1er")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel62",postcode="hotel62postcode")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="hotel62",hasparking="1")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel62",hasparking="1")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 5
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel62",pricerange="cheap")
   Semi > deny(pricerange="cheap",pricerange="expensive") [1.000000]
   User > deny(pricerange="cheap",pricerange="expensive")
   Turn 6
   Usr > [('deny(pricerange="cheap",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel62",addr="hotel62addr")
   Semi > request(hasparking) [1.000000]
   User > request(hasparking)
   Turn 7
   Usr > [('request(hasparking)', 1.0)]
   Sys > inform(name="hotel62",hasparking="1")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="hotel62",postcode="hotel62postcode")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 9
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(name="hotel62",price="hotel62price")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 10
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="hotel62",addr="hotel62addr")
   Semi > ack() [1.000000]
   User > ack()
   Turn 11
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel62",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="4",pricerange="moderate") [1.000000]
   User > affirm(type="placetostay",stars="4",pricerange="moderate")
   Turn 4
   Usr > [(u'affirm(type="placetostay",stars="4",pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse76",addr="guesthouse76addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse76",stars="2")
   Semi > confirm(name="guesthouse76") [1.000000]
   User > confirm(name="guesthouse76")
   Turn 5
   Usr > [('confirm(name="guesthouse76")', 1.0)]
   Sys > inform(name="guesthouse76")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 7
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(stars="4",kind="hotel") [1.000000]
   User > affirm(stars="4",kind="hotel")
   Turn 8
   Usr > [('affirm(stars="4",kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse76")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse76")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse76")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 6
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="home from home",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 8
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 9
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="hotel82",pricerange="moderate")
   Semi > request(hasinternet,postcode) [1.000000]
   User > request(hasinternet,postcode)
   Turn 10
   Usr > [(u'request(hasinternet,postcode)', 1.0)]
   Sys > inform(name="hotel82",hasinternet="1",postcode="hotel82postcode")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",kind="hotel")
   Turn 2
   Usr > [('inform(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > inform(name="hotel117",hasinternet="1")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="hotel117",kind="hotel")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 4
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel117",pricerange="moderate")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 5
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel117",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 6
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel117",hasinternet="1")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 7
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel117",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 8
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel117",hasparking="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 9
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="hotel117",kind="hotel")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 10
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="hotel117",addr="hotel117addr")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 11
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="hotel117",stars="3")
   Semi > negate(stars="4") [1.000000]
   User > negate(stars="4")
   Turn 12
   Usr > [('negate(stars="4")', 1.0)]
   Sys > inform(name="hotel117",hasparking="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 13
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel117",price="hotel117price")
   Semi > ack() [1.000000]
   User > ack()
   Turn 14
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel117",kind="hotel")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 15
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="hotel117",stars="3")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 16
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="hotel117",price="hotel117price")
   Semi > request(hasparking) [1.000000]
   User > request(hasparking)
   Turn 17
   Usr > [('request(hasparking)', 1.0)]
   Sys > inform(name="hotel117",hasparking="0")
   Semi > request(hasinternet,kind,phone) [1.000000]
   User > request(hasinternet,kind,phone)
   Turn 18
   Usr > [(u'request(hasinternet,kind,phone)', 1.0)]
   Sys > inform(name="hotel117",kind="hotel",hasinternet="1",phone="12233600117")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 19
   Usr > [('request(addr)', 1.0)]
   Sys > inform(name="hotel117",addr="hotel117addr")
   Semi > bye() [1.000000]
   User > bye()
   Turn 20
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -20, suc = 0, turn = 20
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="cheap",stars="0",kind="hotel") [1.000000]
   User > inform(pricerange="cheap",stars="0",kind="hotel")
   Turn 2
   Usr > [('inform(pricerange="cheap",stars="0",kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse222",stars="3")
   Semi > deny(stars="3",stars="0") [1.000000]
   User > deny(stars="3",stars="0")
   Turn 3
   Usr > [('deny(stars="3",stars="0")', 1.0)]
   Sys > inform(name="guesthouse222",price="guesthouse222price")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse243",hasinternet="1")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse243",hasinternet="1")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 4
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="guesthouse243",postcode="guesthouse243postcode")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 5
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="guesthouse243",kind="hotel")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse243",postcode="guesthouse243postcode")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="guesthouse243",stars="4")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 8
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse243",price="guesthouse243price")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse142",phone="12233600142")
   Semi > inform(stars="3",kind="hotel") [1.000000]
   User > inform(stars="3",kind="hotel")
   Turn 3
   Usr > [('inform(stars="3",kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse142",area="south")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 4
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse142",pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 5
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse142",kind="hotel")
   Semi > request(area) [1.000000]
   User > request(area)
   Turn 6
   Usr > [('request(area)', 1.0)]
   Sys > inform(name="guesthouse142",area="south")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel210",addr="hotel210addr")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 3
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel210",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 19:43:15: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 19:43:15: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -4.46 +- 2.27
RESULTS:: 19:43:15: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -4.46 +- 2.27
Average success = 8.00 +- 5.38
RESULTS:: 19:43:15: root                               EvaluationManager.py <_prstr>207 :  Average success = 8.00 +- 5.38
Average turns   = 10.66 +- 1.02
RESULTS:: 19:43:15: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 10.66 +- 1.02
RESULTS:: 19:43:15: root                                   pydial.py <train_command>851 :  List of domains: CamHotels
*** Training Iteration env11-dqn-CH-MLN-00.39->env11-dqn-CH-MLN-00.40: iter=39, error-rate=0, num-dialogs=100 ***
RESULTS:: 19:43:15: root                                      pydial.py <trainBatch>429 :  *** Training Iteration env11-dqn-CH-MLN-00.39->env11-dqn-CH-MLN-00.40: iter=39, error-rate=0, num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.39.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.39
loaded replay size:  6758
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 4
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(name="guesthouse101",stars="0")
   Semi > negate(stars="3",type="placetostay") [1.000000]
   User > negate(stars="3",type="placetostay")
   Turn 5
   Usr > [(u'negate(stars="3",type="placetostay")', 1.0)]
   Sys > inform(hasparking="0",pricerange="cheap",name="hotel34",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",stars="2") [1.000000]
   User > inform(kind="hotel",stars="2")
   Turn 3
   Usr > [('inform(kind="hotel",stars="2")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 4
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="lovell lodge",price="a cheapest single room is 50 pounds and a cheapest double room is 65 pounds and a cheapest family room is 70 pounds")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > confirm(name="lovell lodge") [1.000000]
   User > confirm(name="lovell lodge")
   Turn 6
   Usr > [('confirm(name="lovell lodge")', 1.0)]
   Sys > inform(name="ashley hotel")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 8
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse40",stars="2")
   Semi > confirm(name="ashley hotel") [1.000000]
   User > confirm(name="ashley hotel")
   Turn 9
   Usr > [('confirm(name="ashley hotel")', 1.0)]
   Sys > request(area)
   Semi > request(name="guesthouse40",price) [1.000000]
   User > request(name="guesthouse40",price)
   Turn 10
   Usr > [(u'request(name="guesthouse40",price)', 1.0)]
   Sys > inform(name="guesthouse40",price="guesthouse40price")
   Semi > deny(name="guesthouse40",name="ashley hotel") [1.000000]
   User > deny(name="guesthouse40",name="ashley hotel")
   Turn 11
   Usr > [('deny(name="guesthouse40",name="ashley hotel")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 12
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel64",stars="2")
   Semi > confirm(name="ashley hotel") [1.000000]
   User > confirm(name="ashley hotel")
   Turn 13
   Usr > [('confirm(name="ashley hotel")', 1.0)]
   Sys > inform(name="ashley hotel")
   Semi > request(kind,name="ashley hotel") [1.000000]
   User > request(kind,name="ashley hotel")
   Turn 14
   Usr > [('request(kind,name="ashley hotel")', 1.0)]
   Sys > inform(name="ashley hotel",kind="hotel")
   Semi > request(price,pricerange) [1.000000]
   User > request(price,pricerange)
   Turn 15
   Usr > [(u'request(price,pricerange)', 1.0)]
   Sys > inform(name="ashley hotel",price="a cheapest double room is 75 pounds and a cheapest family room is 85 pounds",pricerange="moderate")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 16
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="ashley hotel",postcode="cb4 1er")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 17
   Usr > [('request(stars)', 1.0)]
   Sys > inform(name="ashley hotel",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 18
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 2, suc = 1, turn = 18
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 4
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > inform(kind="guesthouse",pricerange="moderate") [1.000000]
   User > inform(kind="guesthouse",pricerange="moderate")
   Turn 5
   Usr > [('inform(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel240",hasinternet="1")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 4
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="hotel240",price="hotel240price")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 6
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(name="hotel240",pricerange="expensive")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 7
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(name="hotel240",stars="0")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 8
   Usr > [('negate(stars="3")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 9
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > inform(name="hotel240",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 10
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="hotel240",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 11
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="hotel240",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 12
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 13
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(name="hotel240",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 14
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(name="hotel240",pricerange="expensive")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 15
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="hotel240",price="hotel240price")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 16
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="hotel240",hasinternet="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 17
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -17, suc = 0, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",type="placetostay",stars="3") [1.000000]
   User > inform(pricerange="moderate",type="placetostay",stars="3")
   Turn 4
   Usr > [(u'inform(pricerange="moderate",type="placetostay",stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="guesthouse") [1.000000]
   User > inform(="dontcare",kind="guesthouse")
   Turn 6
   Usr > [('inform(="dontcare",kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap",stars="2") [1.000000]
   User > negate(pricerange="cheap",stars="2")
   Turn 2
   Usr > [('negate(pricerange="cheap",stars="2")', 1.0)]
   Sys > inform(name="hotel173",hasparking="0")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 3
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="hotel173",hasinternet="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="hotel173",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 5
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="hotel173",phone="12233600173")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 6
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="hotel173",hasinternet="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse57",phone="1223360057")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 5
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(name="guesthouse57",area="north")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 6
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="guesthouse57",postcode="guesthouse57postcode")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 7
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 8
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse57",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 9
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 10
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(name="guesthouse57",stars="2")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 11
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse57",pricerange="expensive")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 12
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="guesthouse57",stars="2")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 13
   Usr > [('inform(stars="4")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 14
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 3
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 5
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 6
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="cityroomz",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 9
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0",area="centre")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 10
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > inform(name="guesthouse42",pricerange="moderate")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 12
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="guesthouse42",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 7, suc = 1, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(stars="4",kind="hotel",pricerange="cheap") [1.000000]
   User > affirm(stars="4",kind="hotel",pricerange="cheap")
   Turn 2
   Usr > [('affirm(stars="4",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > inform(name="city centre north b and b",phone="01223312843")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="city centre north b and b",area="north")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 4
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 6
   Usr > [('inform(stars="4")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(hasparking="1")', 1.0)]
   Sys > inform(name="city centre north b and b",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="city centre north b and b",area="north")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="city centre north b and b",phone="01223312843")
   Semi > confirm(name="city centre north b and b") [1.000000]
   User > confirm(name="city centre north b and b")
   Turn 10
   Usr > [('confirm(name="city centre north b and b")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="city centre north b and b")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="city centre north b and b")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="the cambridge belfry",area="west",kind="hotel",pricerange="cheap",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 14
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="dontcare") [1.000000]
   User > inform(kind="dontcare")
   Turn 15
   Usr > [('inform(kind="dontcare")', 1.0)]
   Sys > inform(name="the cambridge belfry",hasinternet="1")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 16
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 17
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(name="the cambridge belfry",pricerange="cheap")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 18
   Usr > [(u'request(addr)', 1.0)]
   Sys > request(area)
   Semi > request(name="the cambridge belfry",addr) [1.000000]
   User > request(name="the cambridge belfry",addr)
   Turn 19
   Usr > [(u'request(name="the cambridge belfry",addr)', 1.0)]
   Sys > inform(name="the cambridge belfry",addr="back lane, cambourne")
   Semi > bye() [1.000000]
   User > bye()
   Turn 20
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 0, suc = 1, turn = 20
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4",type="placetostay",kind="hotel",pricerange="expensive") [1.000000]
   User > inform(stars="4",type="placetostay",kind="hotel",pricerange="expensive")
   Turn 2
   Usr > [(u'inform(stars="4",type="placetostay",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel134",postcode="hotel134postcode")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="hotel134",addr="hotel134addr")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel134",addr="hotel134addr")
   Semi > request(price,pricerange) [1.000000]
   User > request(price,pricerange)
   Turn 6
   Usr > [(u'request(price,pricerange)', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 7
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="expensive",name="huntingdon marriott hotel",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="0",kind="guesthouse") [1.000000]
   User > affirm(stars="0",kind="guesthouse")
   Turn 2
   Usr > [('affirm(stars="0",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 5
   Usr > [(u'request(postcode)', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 7
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="guesthouse42",postcode="guesthouse42postcode")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="cheap",stars="3") [1.000000]
   User > inform(pricerange="cheap",stars="3")
   Turn 2
   Usr > [('inform(pricerange="cheap",stars="3")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel50",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 16, suc = 1, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel238",hasparking="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel238",area="east")
   Semi > inform(type="placetostay",stars="4") [1.000000]
   User > inform(type="placetostay",stars="4")
   Turn 4
   Usr > [(u'inform(type="placetostay",stars="4")', 1.0)]
   Sys > inform(name="hotel238",price="hotel238price")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 6
   Usr > [('inform(stars="4")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="0") [1.000000]
   User > affirm(stars="0")
   Turn 2
   Usr > [('affirm(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 3
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="cityroomz",addr="sleeperz hotel, station road")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > confirm(name="cityroomz") [1.000000]
   User > confirm(name="cityroomz")
   Turn 5
   Usr > [('confirm(name="cityroomz")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > confirm(name="cityroomz") [1.000000]
   User > confirm(name="cityroomz")
   Turn 6
   Usr > [('confirm(name="cityroomz")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > confirm(name="cityroomz") [1.000000]
   User > confirm(name="cityroomz")
   Turn 7
   Usr > [('confirm(name="cityroomz")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 8
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="guesthouse42",pricerange="moderate")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 9
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="guesthouse42",addr="guesthouse42addr")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 10, suc = 1, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > negate(kind="hotel",type="placetostay",stars="4") [1.000000]
   User > negate(kind="hotel",type="placetostay",stars="4")
   Turn 4
   Usr > [(u'negate(kind="hotel",type="placetostay",stars="4")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 5
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 6
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 7
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 8
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 9
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > ack() [1.000000]
   User > ack()
   Turn 10
   Usr > [('ack()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > select(pricerange="cheap",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 12
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 4
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 5
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 8
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 11
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 12
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 13
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 14
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 15
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 16
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 17
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -17, suc = 0, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="cheap",stars="4") [1.000000]
   User > inform(pricerange="cheap",stars="4")
   Turn 2
   Usr > [('inform(pricerange="cheap",stars="4")', 1.0)]
   Sys > inform(name="guesthouse118",addr="guesthouse118addr")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",kind="hotel") [1.000000]
   User > negate(area="dontcare",kind="hotel")
   Turn 4
   Usr > [('negate(area="dontcare",kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse118",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 5
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="guesthouse118",price="guesthouse118price")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse48",addr="guesthouse48addr")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 4
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="the lensfield hotel",phone="01223355017")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="the lensfield hotel",hasparking="1")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 7
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="the lensfield hotel",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 3
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 4
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",kind="guesthouse") [1.000000]
   User > negate(area="dontcare",kind="guesthouse")
   Turn 6
   Usr > [('negate(area="dontcare",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0",area="centre")
   Semi > confirm(name="cityroomz") [1.000000]
   User > confirm(name="cityroomz")
   Turn 7
   Usr > [('confirm(name="cityroomz")', 1.0)]
   Sys > select(stars="0",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 8
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0",area="centre")
   Semi > ack() [1.000000]
   User > ack()
   Turn 9
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0",area="centre")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 10
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="guesthouse42",pricerange="moderate")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 11
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0",area="centre")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 12
   Usr > [('thankyou()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 13
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0",area="centre")
   Semi > ack() [1.000000]
   User > ack()
   Turn 14
   Usr > [('ack()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 15
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(area="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 16
   Usr > [(u'inform(area="dontcare")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0",area="centre")
   Semi > bye() [1.000000]
   User > bye()
   Turn 17
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 3, suc = 1, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > request(area)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel246",hasparking="0")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 3
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(name="hotel246",hasinternet="1")
   Semi > confirm(stars="2") [1.000000]
   User > confirm(stars="2")
   Turn 4
   Usr > [('confirm(stars="2")', 1.0)]
   Sys > inform(name="hotel246",stars="0")
   Semi > deny(stars="0",stars="2") [1.000000]
   User > deny(stars="0",stars="2")
   Turn 5
   Usr > [('deny(stars="0",stars="2")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 3
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(name="hotel50",hasparking="0")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 4
   Usr > [(u'request(addr)', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="hotel50",addr) [1.000000]
   User > request(name="hotel50",addr)
   Turn 5
   Usr > [(u'request(name="hotel50",addr)', 1.0)]
   Sys > inform(name="hotel50",addr="hotel50addr")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 6
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="hotel50",stars="3")
   Semi > negate(stars="4") [1.000000]
   User > negate(stars="4")
   Turn 7
   Usr > [('negate(stars="4")', 1.0)]
   Sys > select(stars="4",stars="0")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 8
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(name="hotel50") [1.000000]
   User > confirm(name="hotel50")
   Turn 9
   Usr > [('confirm(name="hotel50")', 1.0)]
   Sys > inform(name="hotel50")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 10
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="hotel50",kind="hotel")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 11
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > request(area)
   Semi > request(name="hotel50",pricerange) [1.000000]
   User > request(name="hotel50",pricerange)
   Turn 12
   Usr > [('request(name="hotel50",pricerange)', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(name="hotel50",pricerange="cheap")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 14
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="hotel50",kind="hotel")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 15
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="hotel50",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 16
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 17
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="hotel50",kind="hotel")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 18
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 19
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 20
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="hotel50",pricerange="cheap")
   Semi > ack() [1.000000]
   User > ack()
   Turn 21
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel50")
   Semi > request(stars,name="hotel50") [1.000000]
   User > request(stars,name="hotel50")
   Turn 22
   Usr > [('request(stars,name="hotel50")', 1.0)]
   Sys > inform(name="hotel50",stars="3")
   Semi > negate(stars="4") [1.000000]
   User > negate(stars="4")
   Turn 23
   Usr > [('negate(stars="4")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 24
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel50")
   Semi > request(kind) [1.000000]
   User > request(kind)
   Turn 25
   Usr > [('request(kind)', 1.0)]
   Sys > reqmore()
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",pricerange="moderate") [1.000000]
   User > inform(kind="hotel",pricerange="moderate")
   Turn 6
   Usr > [('inform(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 7
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 8
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 9
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 10, suc = 1, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 2
   Usr > [('negate(stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap",type="placetostay") [1.000000]
   User > negate(pricerange="cheap",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="cheap",type="placetostay")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(stars="3",kind="hotel") [1.000000]
   User > affirm(stars="3",kind="hotel")
   Turn 3
   Usr > [('affirm(stars="3",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel50",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 16, suc = 1, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse196",hasparking="1")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="guesthouse196",postcode) [1.000000]
   User > request(name="guesthouse196",postcode)
   Turn 3
   Usr > [(u'request(name="guesthouse196",postcode)', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="hotel120",stars="0")
   Semi > request(hasparking,postcode) [1.000000]
   User > request(hasparking,postcode)
   Turn 4
   Usr > [(u'request(hasparking,postcode)', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse196",hasparking="1",postcode="guesthouse196postcode")
   Semi > inform(name="hotel120") [1.000000]
   User > inform(name="hotel120")
   Turn 6
   Usr > [('inform(name="hotel120")', 1.0)]
   Sys > inform(name="hotel120",postcode="hotel120postcode")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 7
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > select(stars="0",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 8
   Usr > [('inform(stars="0")', 1.0)]
   Sys > request(area)
   Semi > request(name="hotel120",hasparking) [1.000000]
   User > request(name="hotel120",hasparking)
   Turn 9
   Usr > [('request(name="hotel120",hasparking)', 1.0)]
   Sys > inform(name="hotel120",hasparking="1",pricerange="expensive")
   Semi > request(addr,name="hotel120") [1.000000]
   User > request(addr,name="hotel120")
   Turn 10
   Usr > [(u'request(addr,name="hotel120")', 1.0)]
   Sys > inform(name="hotel120",addr="hotel120addr")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="0",kind="hotel") [1.000000]
   User > affirm(stars="0",kind="hotel")
   Turn 3
   Usr > [('affirm(stars="0",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="cityroomz",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse41",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse41",stars="0")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse46",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > request(area)
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 8
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel68",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse80",stars="0",area="north")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse80",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(hasparking="1")', 1.0)]
   Sys > inform(hasparking="1",name="hotel81",area="east",kind="hotel",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="hotel81",area="east",kind="hotel",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse186",area="south",kind="hotel",pricerange="moderate",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -16, suc = 0, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(name="hotel209",pricerange="moderate")
   Semi > inform(pricerange="cheap",type="placetostay",stars="0") [1.000000]
   User > inform(pricerange="cheap",type="placetostay",stars="0")
   Turn 3
   Usr > [(u'inform(pricerange="cheap",type="placetostay",stars="0")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel55",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel55",area="east")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel55",addr="hotel55addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 8
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="hotel55",pricerange="cheap")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel55",pricerange="cheap")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel55",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel55",phone="1223360055")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel55",pricerange="cheap")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel55",area="east")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > select(stars="0",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 15
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(name="hotel55",price="hotel55price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel55",addr="hotel55addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel55",phone="1223360055")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel55",price="hotel55price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 19
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="hotel55",phone="1223360055")
   Semi > bye() [1.000000]
   User > bye()
   Turn 20
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -20, suc = 0, turn = 20
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 3
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(name="guesthouse74",addr="guesthouse74addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse74",hasinternet="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse74",hasinternet="0")
   Semi > confirm(name="guesthouse74") [1.000000]
   User > confirm(name="guesthouse74")
   Turn 6
   Usr > [('confirm(name="guesthouse74")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4",area="west")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 7
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > negate(kind="guesthouse") [1.000000]
   User > negate(kind="guesthouse")
   Turn 9
   Usr > [('negate(kind="guesthouse")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 10
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 2
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(name="el shaddai",stars="0")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 3
   Usr > [('negate(stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > negate(pricerange="expensive",kind="hotel") [1.000000]
   User > negate(pricerange="expensive",kind="hotel")
   Turn 4
   Usr > [('negate(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > inform(name="hobsons house",price="a cheapest single room is 59 pounds and a double room ranges from 75 pounds and to 80 pounds and a cheapest family room is 110 pounds")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 7
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 8
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 9
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="hobsons house",area="west")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 10
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="hobsons house",price="a cheapest single room is 59 pounds and a double room ranges from 75 pounds and to 80 pounds and a cheapest family room is 110 pounds")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 11
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="hobsons house",stars) [1.000000]
   User > request(name="hobsons house",stars)
   Turn 12
   Usr > [('request(name="hobsons house",stars)', 1.0)]
   Sys > inform(name="hobsons house",stars="3")
   Semi > negate(stars="4") [1.000000]
   User > negate(stars="4")
   Turn 13
   Usr > [(u'negate(stars="4")', 1.0)]
   Sys > inform(name="hobsons house",area="west")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 14
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 15
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(name="hobsons house",hasparking="1")
   Semi > request(price,stars) [1.000000]
   User > request(price,stars)
   Turn 16
   Usr > [(u'request(price,stars)', 1.0)]
   Sys > inform(name="hobsons house",price="a cheapest single room is 59 pounds and a double room ranges from 75 pounds and to 80 pounds and a cheapest family room is 110 pounds",stars="3")
   Semi > negate(stars="4") [1.000000]
   User > negate(stars="4")
   Turn 17
   Usr > [(u'negate(stars="4")', 1.0)]
   Sys > inform(name="hobsons house",phone="01223304906")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 18
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="hobsons house",pricerange="moderate")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 19
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 20
   Usr > [('affirm()', 1.0)]
   Sys > inform(name="hobsons house",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 21
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(name="hobsons house",area="west")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 22
   Usr > [('request(phone)', 1.0)]
   Sys > inform(name="hobsons house",phone="01223304906")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 23
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="hobsons house",price="a cheapest single room is 59 pounds and a double room ranges from 75 pounds and to 80 pounds and a cheapest family room is 110 pounds")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 24
   Usr > [('request(stars)', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 25
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(name="hobsons house",stars="3")
   Semi > deny(stars="3",stars="4") [1.000000]
   User > deny(stars="3",stars="4")
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel139",phone="12233600139")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="hotel139",addr="hotel139addr")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse63",stars="3")
   Semi > confirm(name="the lensfield hotel") [1.000000]
   User > confirm(name="the lensfield hotel")
   Turn 7
   Usr > [('confirm(name="the lensfield hotel")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse63",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse63")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 10
   Usr > [('thankyou()', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse63",price) [1.000000]
   User > request(name="guesthouse63",price)
   Turn 11
   Usr > [(u'request(name="guesthouse63",price)', 1.0)]
   Sys > inform(name="guesthouse63",price="guesthouse63price")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 12
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse63",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 7, suc = 1, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 3
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel51",kind="hotel")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 5
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(stars="0",pricerange="cheap") [1.000000]
   User > affirm(stars="0",pricerange="cheap")
   Turn 6
   Usr > [('affirm(stars="0",pricerange="cheap")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 7
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > confirm(stars="0")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > inform(name="hotel51",kind="hotel")
   Semi > negate(kind="guesthouse") [1.000000]
   User > negate(kind="guesthouse")
   Turn 9
   Usr > [('negate(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > request(phone,name="city centre north b and b") [1.000000]
   User > request(phone,name="city centre north b and b")
   Turn 10
   Usr > [(u'request(phone,name="city centre north b and b")', 1.0)]
   Sys > inform(name="city centre north b and b",phone="01223312843")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 4
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",stars="3") [1.000000]
   User > affirm(type="placetostay",stars="3")
   Turn 2
   Usr > [(u'affirm(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="guesthouse",pricerange="moderate") [1.000000]
   User > inform(kind="guesthouse",pricerange="moderate")
   Turn 5
   Usr > [('inform(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 3
   Usr > [('deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 6
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",stars="0") [1.000000]
   User > inform(pricerange="moderate",stars="0")
   Turn 7
   Usr > [('inform(pricerange="moderate",stars="0")', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse42",area="centre",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse74",area="centre",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 9
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="0",name="hotel78",area="north",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse94",area="north",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse108",area="east",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 13
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse116",area="east",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse121",area="west",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",name="guesthouse143",area="south",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse153",area="south",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse223",area="west",kind="guesthouse",pricerange="moderate",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="none",name!="guesthouse42",name!="guesthouse74",name!="hotel78",name!="guesthouse94",name!="guesthouse108",name!="guesthouse116",name!="guesthouse121",name!="guesthouse143",name!="guesthouse153",name!="guesthouse223",hasparking="dontcare",pricerange="moderate",kind="guesthouse",stars="0",area="dontcare")
   Semi > bye() [1.000000]
   User > bye()
   Turn 19
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 1, suc = 1, turn = 19
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 3
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4",kind="guesthouse") [1.000000]
   User > inform(stars="4",kind="guesthouse")
   Turn 4
   Usr > [('inform(stars="4",kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(pricerange="cheap") [1.000000]
   User > affirm(pricerange="cheap")
   Turn 5
   Usr > [('affirm(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > select(kind="guesthouse",kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 10
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 3
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm(stars="4",kind="guesthouse") [1.000000]
   User > affirm(stars="4",kind="guesthouse")
   Turn 4
   Usr > [('affirm(stars="4",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="leverton house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="leverton house",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="rosa's bed and breakfast",stars="4",area="south")
   Semi > request(phone,price) [1.000000]
   User > request(phone,price)
   Turn 11
   Usr > [(u'request(phone,price)', 1.0)]
   Sys > inform(name="rosa's bed and breakfast",price="a single room ranges from 25 pounds and to 30 pounds",phone="01223512596")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 8, suc = 1, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 2
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 3
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 4
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 5
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 7
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 8
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 9
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 10
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 11
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 12
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 2
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel72",pricerange="expensive")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 6
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse179",addr="guesthouse179addr")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 3
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="guesthouse179",hasinternet="1")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 4
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(name="guesthouse179",stars="2")
   Semi > deny(stars="2",stars="3") [1.000000]
   User > deny(stars="2",stars="3")
   Turn 5
   Usr > [('deny(stars="2",stars="3")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse179",area="east")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 7
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="guesthouse179",kind="hotel")
   Semi > negate(kind="guesthouse") [1.000000]
   User > negate(kind="guesthouse")
   Turn 8
   Usr > [('negate(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse63",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 9
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 10
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(name="guesthouse63",phone="1223360063")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 11
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 12
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(name="guesthouse63",hasinternet="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 7, suc = 1, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(name="guesthouse39",phone="1223360039")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 2
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse39",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse39",hasparking="0")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 5
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse39",stars="3")
   Semi > deny(stars="3",stars="4") [1.000000]
   User > deny(stars="3",stars="4")
   Turn 7
   Usr > [('deny(stars="3",stars="4")', 1.0)]
   Sys > inform(name="guesthouse39",postcode="guesthouse39postcode")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 8
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse39",pricerange="cheap")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 9
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 10
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse39",postcode="guesthouse39postcode")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 11
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse39",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 12
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse39",hasparking="0")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 13
   Usr > [('request(postcode)', 1.0)]
   Sys > request(kind)
   Semi > request(name="guesthouse39",postcode) [1.000000]
   User > request(name="guesthouse39",postcode)
   Turn 14
   Usr > [('request(name="guesthouse39",postcode)', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 15
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 16
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse39",postcode) [1.000000]
   User > request(name="guesthouse39",postcode)
   Turn 17
   Usr > [('request(name="guesthouse39",postcode)', 1.0)]
   Sys > inform(name="guesthouse39",postcode="guesthouse39postcode")
   Semi > bye() [1.000000]
   User > bye()
   Turn 18
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -18, suc = 0, turn = 18
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse219",postcode="guesthouse219postcode")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 3
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 16, suc = 1, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 2
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse190",pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 3
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse190",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 4
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse190",price="guesthouse190price")
   Semi > inform(type="placetostay",stars="4") [1.000000]
   User > inform(type="placetostay",stars="4")
   Turn 5
   Usr > [(u'inform(type="placetostay",stars="4")', 1.0)]
   Sys > inform(name="guesthouse190",price="guesthouse190price")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(pricerange="cheap")', 1.0)]
   Sys > confirm(pricerange="cheap")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 2
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel164",postcode="hotel164postcode")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="hotel164",phone="12233600164")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 5
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="hotel164",postcode="hotel164postcode")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 6
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="hotel164",price="hotel164price")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 7
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="hotel164",stars="0")
   Semi > deny(stars="0",stars="4") [1.000000]
   User > deny(stars="0",stars="4")
   Turn 8
   Usr > [('deny(stars="0",stars="4")', 1.0)]
   Sys > inform(name="hotel164",hasparking="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 9
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="hotel164",price="hotel164price")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="guesthouse") [1.000000]
   User > hello(type="placetostay",stars="4",kind="guesthouse")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="guesthouse")', 1.0)]
   Sys > bye()
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(name="guesthouse247",hasinternet="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",kind="hotel") [1.000000]
   User > negate(pricerange="expensive",kind="hotel")
   Turn 4
   Usr > [('negate(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 5
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse247",pricerange="cheap")
   Semi > deny(pricerange="cheap",pricerange="expensive") [1.000000]
   User > deny(pricerange="cheap",pricerange="expensive")
   Turn 7
   Usr > [('deny(pricerange="cheap",pricerange="expensive")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 8
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > reqmore()
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="guesthouse70",postcode="guesthouse70postcode")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > request(area)
   Semi > request(name="guesthouse70",addr) [1.000000]
   User > request(name="guesthouse70",addr)
   Turn 5
   Usr > [(u'request(name="guesthouse70",addr)', 1.0)]
   Sys > request(area)
   Semi > request(name="guesthouse70",addr) [1.000000]
   User > request(name="guesthouse70",addr)
   Turn 6
   Usr > [(u'request(name="guesthouse70",addr)', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare",kind="guesthouse") [1.000000]
   User > negate(hasparking="dontcare",kind="guesthouse")
   Turn 7
   Usr > [('negate(hasparking="dontcare",kind="guesthouse")', 1.0)]
   Sys > inform(name="guesthouse70",addr="guesthouse70addr")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 8
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse70",pricerange="expensive")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 9
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="leverton house",kind="guesthouse")
   Semi > confirm(name="guesthouse70") [1.000000]
   User > confirm(name="guesthouse70")
   Turn 11
   Usr > [('confirm(name="guesthouse70")', 1.0)]
   Sys > inform(name="guesthouse70")
   Semi > request(kind) [1.000000]
   User > request(kind)
   Turn 12
   Usr > [('request(kind)', 1.0)]
   Sys > inform(name="guesthouse70",kind="guesthouse")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 13
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(name="guesthouse70",pricerange="expensive")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 14
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="cheap",name="leverton house",kind="guesthouse")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 15
   Usr > [(u'request(addr)', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 16
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(name="guesthouse70",addr="guesthouse70addr")
   Semi > bye() [1.000000]
   User > bye()
   Turn 17
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -17, suc = 0, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",stars="4") [1.000000]
   User > inform(kind="hotel",stars="4")
   Turn 2
   Usr > [('inform(kind="hotel",stars="4")', 1.0)]
   Sys > inform(name="guesthouse49",pricerange="expensive")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 3
   Usr > [(u'request(addr)', 1.0)]
   Sys > request(kind)
   Semi > request(name="guesthouse49",addr) [1.000000]
   User > request(name="guesthouse49",addr)
   Turn 4
   Usr > [(u'request(name="guesthouse49",addr)', 1.0)]
   Sys > inform(name="guesthouse49",addr="guesthouse49addr")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse49",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 6
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse49",postcode="guesthouse49postcode")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="guesthouse49",pricerange="expensive")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 8
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse49",stars="2")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 10
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="guesthouse49",stars="2")
   Semi > negate(stars="4") [1.000000]
   User > negate(stars="4")
   Turn 11
   Usr > [('negate(stars="4")', 1.0)]
   Sys > inform(name="guesthouse49",pricerange="expensive")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 12
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse49",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 13
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse49",hasparking="1")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 14
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse49",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 15
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse49",phone="1223360049")
   Semi > request(hasparking,pricerange) [1.000000]
   User > request(hasparking,pricerange)
   Turn 16
   Usr > [('request(hasparking,pricerange)', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 17
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(name="guesthouse49",hasparking="1",pricerange="expensive")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 18
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse49",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 19
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse49",hasinternet="1")
   Semi > ack() [1.000000]
   User > ack()
   Turn 20
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse49",postcode="guesthouse49postcode")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 21
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="guesthouse49",phone="1223360049")
   Semi > request(hasparking) [1.000000]
   User > request(hasparking)
   Turn 22
   Usr > [('request(hasparking)', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 23
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse49",hasparking="1")
   Semi > request(pricerange) [1.000000]
   User > request(pricerange)
   Turn 24
   Usr > [('request(pricerange)', 1.0)]
   Sys > inform(name="guesthouse49",pricerange="expensive")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 25
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="guesthouse49",addr="guesthouse49addr")
   Semi > ack() [1.000000]
   User > ack()
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel151",hasparking="1")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 3
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="hotel151",price="hotel151price")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 7
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="hotel151",hasparking="1")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 8
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse60",stars="2")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 9
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="guesthouse60",price="guesthouse60price")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 10, suc = 1, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel",stars="4") [1.000000]
   User > inform(kind="hotel",stars="4")
   Turn 7
   Usr > [('inform(kind="hotel",stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > reqmore()
   Semi > negate() [1.000000]
   User > negate()
   Turn 9
   Usr > [('negate()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel92",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel92",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse97",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse142",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 3
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 4
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="limehouse",kind="guesthouse")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 5
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 6
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 7
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 9
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2") [1.000000]
   User > hello(type="placetostay",stars="2")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive",kind="guesthouse") [1.000000]
   User > negate(pricerange="expensive",kind="guesthouse")
   Turn 2
   Usr > [('negate(pricerange="expensive",kind="guesthouse")', 1.0)]
   Sys > inform(name="guesthouse108",phone="12233600108")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 3
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="guesthouse108",hasinternet="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > request(kind)
   Semi > request(name="cityroomz",phone) [1.000000]
   User > request(name="cityroomz",phone)
   Turn 5
   Usr > [(u'request(name="cityroomz",phone)', 1.0)]
   Sys > inform(name="cityroomz",phone="01223304050")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 6
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="cityroomz",kind="hotel")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 8
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="cityroomz",pricerange="moderate")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 9
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="cityroomz",kind="hotel")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 10
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="cityroomz",pricerange="moderate")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 11
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(name="cityroomz",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 8, suc = 1, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse47",kind="hotel")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="hotel117",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 12
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="hotel134",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="guesthouse141",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hotel149",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hotel169",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 17
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="guesthouse190",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse205",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 19
   Usr > [('reqalts()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 20
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="guesthouse229",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 21
   Usr > [('reqalts()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 22
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 23
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="none",name!="guesthouse43",name!="guesthouse47",name!="hotel117",name!="hotel134",name!="guesthouse141",name!="hotel149",name!="hotel169",name!="guesthouse190",name!="guesthouse205",name!="guesthouse229",hasparking="dontcare",pricerange="moderate",kind="hotel",stars="3")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 24
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="guesthouse229",kind="hotel")
   Semi > confirm(name="guesthouse47") [1.000000]
   User > confirm(name="guesthouse47")
   Turn 25
   Usr > [('confirm(name="guesthouse47")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="guesthouse229",kind="hotel")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 1, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="0",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse76",phone="1223360076")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse76",hasinternet="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse76",stars="2")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 4
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(name="guesthouse76",stars="2")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 5
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="hotel120",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="guesthouse",type="placetostay") [1.000000]
   User > inform(kind="guesthouse",type="placetostay")
   Turn 2
   Usr > [(u'inform(kind="guesthouse",type="placetostay")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate",stars="3") [1.000000]
   User > inform(pricerange="moderate",stars="3")
   Turn 4
   Usr > [('inform(pricerange="moderate",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 10
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 12
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 13
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 14
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 15
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > reqmore()
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 16
   Usr > [('affirm()', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 17
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 18
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -18, suc = 0, turn = 18
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="hotel100",kind="hotel")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 4
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > request(area)
   Semi > request(name="hotel100",postcode) [1.000000]
   User > request(name="hotel100",postcode)
   Turn 5
   Usr > [(u'request(name="hotel100",postcode)', 1.0)]
   Sys > inform(name="hotel100",pricerange="expensive",postcode="hotel100postcode")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 6
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 2
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse144",pricerange="cheap")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 3
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse144",hasparking="0")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="the lensfield hotel",addr="53-57 lensfield road")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(hasinternet,addr) [1.000000]
   User > request(hasinternet,addr)
   Turn 3
   Usr > [(u'request(hasinternet,addr)', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1",addr="78-80 milton road")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 4
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="home from home",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="kirkwood house",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 7
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(name="kirkwood house",hasinternet="1")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 9
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="kirkwood house",addr="172 chesterton road")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 10
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > request(hasinternet,addr) [1.000000]
   User > request(hasinternet,addr)
   Turn 11
   Usr > [(u'request(hasinternet,addr)', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 12
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(name="hotel82",hasinternet="1",addr="hotel82addr")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 13
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="hotel82",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 6, suc = 1, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 3
   Usr > [('inform(stars="2")', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm(kind="hotel",pricerange="moderate") [1.000000]
   User > affirm(kind="hotel",pricerange="moderate")
   Turn 4
   Usr > [('affirm(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 6
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse40",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse40",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel64",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(stars="2")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="2")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel69",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel112",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel152",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse42",addr="guesthouse42addr")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 3
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse42",hasinternet="1")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 4
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > request(area)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 5
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > reqmore()
   Semi > negate() [1.000000]
   User > negate()
   Turn 7
   Usr > [('negate()', 1.0)]
   Sys > inform(name="guesthouse42",stars="0")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 8
   Usr > [('negate(stars="3")', 1.0)]
   Sys > inform(name="guesthouse42",hasinternet="1")
   Semi > ack() [1.000000]
   User > ack()
   Turn 9
   Usr > [('ack()', 1.0)]
   Sys > confirm(stars="3")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="3")', 1.0)]
   Sys > inform(name="guesthouse42",postcode="guesthouse42postcode")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 11
   Usr > [(u'request(addr)', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 12
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="guesthouse42",addr) [1.000000]
   User > request(name="guesthouse42",addr)
   Turn 13
   Usr > [(u'request(name="guesthouse42",addr)', 1.0)]
   Sys > inform(name="guesthouse42",addr="guesthouse42addr")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 2
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > inform(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > inform(type="placetostay",stars="0",kind="guesthouse")
   Turn 3
   Usr > [(u'inform(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 4
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 4
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > negate(kind="guesthouse") [1.000000]
   User > negate(kind="guesthouse")
   Turn 6
   Usr > [('negate(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm(pricerange="moderate") [1.000000]
   User > affirm(pricerange="moderate")
   Turn 7
   Usr > [('affirm(pricerange="moderate")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",stars="3",kind="guesthouse",pricerange="moderate") [1.000000]
   User > inform(="dontcare",stars="3",kind="guesthouse",pricerange="moderate")
   Turn 4
   Usr > [('inform(="dontcare",stars="3",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 5
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 6
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 9
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 11
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 12
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 13
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 14
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 15
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > select(hasparking="dontcare",hasparking="1")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 16
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -16, suc = 0, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",kind="hotel")
   Turn 2
   Usr > [('inform(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse71",phone="1223360071")
   Semi > request(postcode,addr) [1.000000]
   User > request(postcode,addr)
   Turn 3
   Usr > [(u'request(postcode,addr)', 1.0)]
   Sys > request(kind)
   Semi > request(name="guesthouse71",postcode) [1.000000]
   User > request(name="guesthouse71",postcode)
   Turn 4
   Usr > [(u'request(name="guesthouse71",postcode)', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 5
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4",area="west")
   Semi > request(postcode,addr) [1.000000]
   User > request(postcode,addr)
   Turn 6
   Usr > [(u'request(postcode,addr)', 1.0)]
   Sys > inform(name="guesthouse71",postcode="guesthouse71postcode",addr="guesthouse71addr")
   Semi > deny(name="guesthouse71",name="huntingdon marriott hotel") [1.000000]
   User > deny(name="guesthouse71",name="huntingdon marriott hotel")
   Turn 7
   Usr > [('deny(name="guesthouse71",name="huntingdon marriott hotel")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",hasparking="1")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",kind="hotel")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 9
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",postcode="pe29 6fl")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 10
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",addr="kingfisher way, hinchinbrook business park, huntingdon")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="3") [1.000000]
   User > affirm(stars="3")
   Turn 2
   Usr > [('affirm(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > reqalts(stars="dontcare") [1.000000]
   User > reqalts(stars="dontcare")
   Turn 7
   Usr > [('reqalts(stars="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 8
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse",postcode="cb4 2je")
   Semi > negate(kind="hotel",pricerange="moderate") [1.000000]
   User > negate(kind="hotel",pricerange="moderate")
   Turn 9
   Usr > [('negate(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="moderate",name="lovell lodge",kind="hotel")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 10
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > confirm(stars="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(stars="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="moderate",name="lovell lodge",kind="hotel")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 12
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(name="lovell lodge")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 13
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="1",stars="2",pricerange="moderate",name="lovell lodge",kind="hotel")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 14
   Usr > [(u'request(postcode)', 1.0)]
   Sys > reqmore()
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 15
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="lovell lodge",postcode="cb4 1sr")
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 4, suc = 1, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel90",price="hotel90price")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 3
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="hotel90",addr="hotel90addr")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 5
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(name="hotel90",area="west")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="hotel90",area="west")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 7
   Usr > [('inform(stars="4")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",kind="hotel") [1.000000]
   User > inform(="dontcare",kind="hotel")
   Turn 9
   Usr > [('inform(="dontcare",kind="hotel")', 1.0)]
   Sys > inform(name="hotel90",pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 10
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > request(kind)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 11
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="hotel90",price="hotel90price")
   Semi > request(addr,name="hotel90") [1.000000]
   User > request(addr,name="hotel90")
   Turn 12
   Usr > [(u'request(addr,name="hotel90")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 13
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > reqmore()
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 14
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="hotel90",addr="hotel90addr")
   Semi > bye() [1.000000]
   User > bye()
   Turn 15
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > inform(name="hotel159",price="hotel159price")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 2
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="hotel159",hasparking="1")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 3
   Usr > [(u'request(addr)', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare",pricerange="expensive") [1.000000]
   User > inform(="dontcare",pricerange="expensive")
   Turn 4
   Usr > [('inform(="dontcare",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel159",addr="hotel159addr")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="0",type="placetostay") [1.000000]
   User > inform(stars="0",type="placetostay")
   Turn 4
   Usr > [(u'inform(stars="0",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="guesthouse41",stars="0")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse46",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 3
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 4
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 5
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse143",postcode="guesthouse143postcode")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 3
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="guesthouse143",phone="12233600143")
   Semi > inform(type="placetostay",stars="0") [1.000000]
   User > inform(type="placetostay",stars="0")
   Turn 4
   Usr > [(u'inform(type="placetostay",stars="0")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > affirm(kind="hotel") [1.000000]
   User > affirm(kind="hotel")
   Turn 5
   Usr > [('affirm(kind="hotel")', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="guesthouse143",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 7
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 8
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse143",area="south")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 9
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="guesthouse143",phone="12233600143")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 10
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="guesthouse143",hasinternet="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 2
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > inform(kind="guesthouse",pricerange="moderate") [1.000000]
   User > inform(kind="guesthouse",pricerange="moderate")
   Turn 4
   Usr > [('inform(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > reqmore()
   Semi > negate() [1.000000]
   User > negate()
   Turn 9
   Usr > [('negate()', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel148",stars="3")
   Semi > deny(stars="3",stars="4") [1.000000]
   User > deny(stars="3",stars="4")
   Turn 2
   Usr > [('deny(stars="3",stars="4")', 1.0)]
   Sys > inform(name="hotel148",pricerange="expensive")
   Semi > reqalts(pricerange="moderate") [1.000000]
   User > reqalts(pricerange="moderate")
   Turn 3
   Usr > [(u'reqalts(pricerange="moderate")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 4
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="2",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(name="guesthouse224",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(phone,price) [1.000000]
   User > request(phone,price)
   Turn 3
   Usr > [(u'request(phone,price)', 1.0)]
   Sys > inform(name="lovell lodge",price="a cheapest single room is 50 pounds and a cheapest double room is 65 pounds and a cheapest family room is 70 pounds",phone="01223425478")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 16, suc = 1, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 2
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay",kind="guesthouse") [1.000000]
   User > affirm(type="placetostay",kind="guesthouse")
   Turn 4
   Usr > [(u'affirm(type="placetostay",kind="guesthouse")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 5
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 6
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",pricerange="moderate") [1.000000]
   User > inform(="dontcare",pricerange="moderate")
   Turn 7
   Usr > [('inform(="dontcare",pricerange="moderate")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 9
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 11
   Usr > [(u'inform(kind="guesthouse")', 1.0)]
   Sys > confirm(kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 5
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse",phone="01223300552")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 6
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 7
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 8
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel",stars="4") [1.000000]
   User > inform(kind="hotel",stars="4")
   Turn 9
   Usr > [('inform(kind="hotel",stars="4")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 10
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 12
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="guesthouse89",phone="1223360089")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 7, suc = 1, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="avalon",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="avalon",price="a single room ranges from 45 pounds and to 55 pounds and a double room ranges from 65 pounds and to 75 pounds")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 4
   Usr > [('inform(stars="4")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="expensive",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",kind="hotel")
   Turn 5
   Usr > [('inform(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > inform(name="avalon",area="north")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="avalon",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > negate(kind="hotel",stars="4") [1.000000]
   User > negate(kind="hotel",stars="4")
   Turn 4
   Usr > [('negate(kind="hotel",stars="4")', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 9
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4",pricerange="expensive") [1.000000]
   User > inform(stars="4",pricerange="expensive")
   Turn 12
   Usr > [('inform(stars="4",pricerange="expensive")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 13
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 15
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -16, suc = 0, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive",type="placetostay",stars="3") [1.000000]
   User > inform(pricerange="expensive",type="placetostay",stars="3")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay",stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="the lensfield hotel",stars="3")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 4
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="the lensfield hotel",price="a single room ranges from 65 pounds and to 85 pounds and a double room ranges from 90 pounds and to 120 pounds and a family room ranges from 125 pounds and to 135 pounds")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate",type="placetostay") [1.000000]
   User > inform(pricerange="moderate",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="moderate",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 3
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(addr,name="cityroomz") [1.000000]
   User > request(addr,name="cityroomz")
   Turn 4
   Usr > [(u'request(addr,name="cityroomz")', 1.0)]
   Sys > inform(name="cityroomz",addr="sleeperz hotel, station road")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > select(kind="hotel",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 6
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse41",stars="0")
   Semi > confirm(name="cityroomz") [1.000000]
   User > confirm(name="cityroomz")
   Turn 7
   Usr > [('confirm(name="cityroomz")', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(name="cityroomz")
   Semi > request(kind) [1.000000]
   User > request(kind)
   Turn 9
   Usr > [('request(kind)', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 10
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse46",stars="0")
   Semi > confirm(name="cityroomz") [1.000000]
   User > confirm(name="cityroomz")
   Turn 11
   Usr > [('confirm(name="cityroomz")', 1.0)]
   Sys > inform(name="cityroomz")
   Semi > request(kind) [1.000000]
   User > request(kind)
   Turn 12
   Usr > [('request(kind)', 1.0)]
   Sys > inform(name="cityroomz",kind="hotel")
   Semi > request(pricerange) [1.000000]
   User > request(pricerange)
   Turn 13
   Usr > [('request(pricerange)', 1.0)]
   Sys > inform(name="cityroomz",pricerange="moderate")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 14
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(name="cityroomz",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 15
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="cityroomz")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 16
   Usr > [(u'request(addr)', 1.0)]
   Sys > request(stars)
   Semi > request(name="cityroomz",addr) [1.000000]
   User > request(name="cityroomz",addr)
   Turn 17
   Usr > [(u'request(name="cityroomz",addr)', 1.0)]
   Sys > inform(name="cityroomz",addr="sleeperz hotel, station road")
   Semi > bye() [1.000000]
   User > bye()
   Turn 18
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 2, suc = 1, turn = 18
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 2
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 3
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",stars="4",pricerange="moderate",name="limehouse",kind="guesthouse")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 6
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="hotel174",pricerange="cheap")
   Semi > deny(pricerange="cheap",pricerange="expensive") [1.000000]
   User > deny(pricerange="cheap",pricerange="expensive")
   Turn 4
   Usr > [('deny(pricerange="cheap",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel174",kind="guesthouse")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 5
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(name="hotel174",hasinternet="1")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="hotel174",hasinternet="1")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 7
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel174",pricerange="cheap")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 8
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel174",hasinternet="1")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 9
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(name="hotel174",stars="2")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 10
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(name="hotel174",area="centre")
   Semi > ack() [1.000000]
   User > ack()
   Turn 11
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel174",addr="hotel174addr")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 12
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(name="hotel174",stars="2")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 13
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(name="hotel174",price="hotel174price")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 14
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel174",kind="guesthouse")
   Semi > request(hasinternet,addr) [1.000000]
   User > request(hasinternet,addr)
   Turn 15
   Usr > [('request(hasinternet,addr)', 1.0)]
   Sys > inform(name="hotel174",hasinternet="1",addr="hotel174addr")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 16
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel174",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 17
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -17, suc = 0, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > reqmore()
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 4
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 5
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3",area="west")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="hobsons house",kind="guesthouse")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="hobsons house",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 8
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="hobsons house",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 9
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > select(pricerange="expensive",pricerange="moderate")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 10
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse43",area="south",kind="hotel",pricerange="moderate",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="0",name="guesthouse43",area="south",kind="hotel",pricerange="moderate",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > select(stars="4",stars="3")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="guesthouse129",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 3
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse129",addr="guesthouse129addr")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 4
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse129",stars="3")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 5
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 6
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="guesthouse129",stars="3")
   Semi > negate(stars="4") [1.000000]
   User > negate(stars="4")
   Turn 7
   Usr > [('negate(stars="4")', 1.0)]
   Sys > inform(name="guesthouse129",phone="12233600129")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4",kind="hotel") [1.000000]
   User > hello(type="placetostay",stars="4",kind="hotel")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4",kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse41",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse41",phone="1223360041")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse41",addr="guesthouse41addr")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse41",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse41",hasinternet="1")
   Semi > confirm(name="guesthouse41") [1.000000]
   User > confirm(name="guesthouse41")
   Turn 6
   Usr > [('confirm(name="guesthouse41")', 1.0)]
   Sys > inform(name="guesthouse41")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="guesthouse41")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="expensive",type="placetostay") [1.000000]
   User > inform(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'inform(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > inform(name="hotel155",pricerange="expensive")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(name="hotel155") [1.000000]
   User > confirm(name="hotel155")
   Turn 4
   Usr > [('confirm(name="hotel155")', 1.0)]
   Sys > select(stars="3",stars="0")
   Semi > inform(stars="3",kind="guesthouse") [1.000000]
   User > inform(stars="3",kind="guesthouse")
   Turn 5
   Usr > [('inform(stars="3",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse63",stars="3")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse63",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(type="placetostay") [1.000000]
   User > affirm(type="placetostay")
   Turn 2
   Usr > [(u'affirm(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="2",kind="hotel",pricerange="moderate") [1.000000]
   User > negate(stars="2",kind="hotel",pricerange="moderate")
   Turn 3
   Usr > [('negate(stars="2",kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="ashley hotel",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse40",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel206",stars="2")
   Semi > negate(stars="4",type="placetostay") [1.000000]
   User > negate(stars="4",type="placetostay")
   Turn 3
   Usr > [(u'negate(stars="4",type="placetostay")', 1.0)]
   Sys > inform(name="hotel206",phone="12233600206")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",kind="hotel") [1.000000]
   User > negate(area="dontcare",kind="hotel")
   Turn 5
   Usr > [('negate(area="dontcare",kind="hotel")', 1.0)]
   Sys > inform(name="hotel206",price="hotel206price")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 7
   Usr > [(u'inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel206",pricerange="cheap")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare",pricerange="expensive") [1.000000]
   User > inform(="dontcare",pricerange="expensive")
   Turn 9
   Usr > [('inform(="dontcare",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel206",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="huntingdon marriott hotel",stars="4",area="west")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 11
   Usr > [(u'request(price)', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 12
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(area="dontcare") [1.000000]
   User > inform(area="dontcare")
   Turn 13
   Usr > [('inform(area="dontcare")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",price="a cheapest single room is 125 pounds and a cheapest double room is 145 pounds and a cheapest family room is 145 pounds")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 14
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",price="a cheapest single room is 125 pounds and a cheapest double room is 145 pounds and a cheapest family room is 145 pounds")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 15
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",addr="kingfisher way, hinchinbrook business park, huntingdon")
   Semi > bye() [1.000000]
   User > bye()
   Turn 16
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 4, suc = 1, turn = 16
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > request(area)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(name="hotel198",stars="0")
   Semi > negate(stars="4",type="placetostay") [1.000000]
   User > negate(stars="4",type="placetostay")
   Turn 3
   Usr > [(u'negate(stars="4",type="placetostay")', 1.0)]
   Sys > inform(name="hotel198",phone="12233600198")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel198",kind="hotel")
   Semi > negate(kind="guesthouse") [1.000000]
   User > negate(kind="guesthouse")
   Turn 5
   Usr > [('negate(kind="guesthouse")', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel198",pricerange="cheap")
   Semi > deny(pricerange="cheap",pricerange="expensive") [1.000000]
   User > deny(pricerange="cheap",pricerange="expensive")
   Turn 7
   Usr > [('deny(pricerange="cheap",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel198",stars="0")
   Semi > negate(stars="4") [1.000000]
   User > negate(stars="4")
   Turn 8
   Usr > [('negate(stars="4")', 1.0)]
   Sys > inform(name="hotel198",pricerange="cheap")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 9
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > confirm(stars="4")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 10
   Usr > [(u'inform(stars="4")', 1.0)]
   Sys > inform(name="hotel198",hasinternet="0")
   Semi > request(price,addr) [1.000000]
   User > request(price,addr)
   Turn 11
   Usr > [(u'request(price,addr)', 1.0)]
   Sys > inform(name="hotel198",price="hotel198price",addr="hotel198addr")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse135",area="south")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse135",pricerange="expensive")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 4
   Usr > [('inform(stars="4")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",kind="hotel") [1.000000]
   User > negate(area="dontcare",kind="hotel")
   Turn 5
   Usr > [('negate(area="dontcare",kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse135",postcode="guesthouse135postcode")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse135",price="guesthouse135price")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 2
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 3
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="lovell lodge",kind="hotel")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 5
   Usr > [(u'request(phone)', 1.0)]
   Sys > select(area="north",area="centre")
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 6
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > request(pricerange)
   Semi > request(name="lovell lodge",phone) [1.000000]
   User > request(name="lovell lodge",phone)
   Turn 7
   Usr > [(u'request(name="lovell lodge",phone)', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(area)
   Semi > request(name="lovell lodge",phone) [1.000000]
   User > request(name="lovell lodge",phone)
   Turn 9
   Usr > [(u'request(name="lovell lodge",phone)', 1.0)]
   Sys > inform(name="lovell lodge",phone="01223425478")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 10
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="lovell lodge",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > select(pricerange="moderate",pricerange="expensive")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel75",kind="hotel")
   Semi > request(phone,postcode) [1.000000]
   User > request(phone,postcode)
   Turn 3
   Usr > [(u'request(phone,postcode)', 1.0)]
   Sys > inform(name="hotel75",phone="1223360075",postcode="hotel75postcode")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel75",addr="hotel75addr")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 5
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(name="hotel75",hasparking="0")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 6
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(name="hotel75",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 7
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="the lensfield hotel",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 9
   Usr > [('ack()', 1.0)]
   Sys > inform(name="the lensfield hotel",phone="01223355017")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 10
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="the lensfield hotel",postcode="cb2 1en")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm(stars="4") [1.000000]
   User > affirm(stars="4")
   Turn 2
   Usr > [('affirm(stars="4")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 3
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4",area="north")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4",area="north")
   Semi > inform(stars="0",kind="hotel") [1.000000]
   User > inform(stars="0",kind="hotel")
   Turn 5
   Usr > [(u'inform(stars="0",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > request(hasinternet,stars,postcode) [1.000000]
   User > request(hasinternet,stars,postcode)
   Turn 6
   Usr > [(u'request(hasinternet,stars,postcode)', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1",postcode="cb4 2je",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 7
   Usr > [(u'negate(stars="0")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 9
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > negate(kind="hotel",pricerange="moderate") [1.000000]
   User > negate(kind="hotel",pricerange="moderate")
   Turn 10
   Usr > [('negate(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 11
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 12
   Usr > [(u'inform(pricerange="moderate")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 13
   Usr > [('request(stars)', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 14
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 15
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="cityroomz",stars="0",area="centre")
   Semi > request(hasinternet,postcode) [1.000000]
   User > request(hasinternet,postcode)
   Turn 16
   Usr > [(u'request(hasinternet,postcode)', 1.0)]
   Sys > inform(name="cityroomz",hasinternet="1",postcode="cb1 2tz")
   Semi > bye() [1.000000]
   User > bye()
   Turn 17
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 3, suc = 1, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > confirm(pricerange="moderate")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(stars="4",kind="hotel") [1.000000]
   User > inform(stars="4",kind="hotel")
   Turn 3
   Usr > [('inform(stars="4",kind="hotel")', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare") [1.000000]
   User > negate(area="dontcare")
   Turn 4
   Usr > [('negate(area="dontcare")', 1.0)]
   Sys > inform(name="leverton house",hasparking="1")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > select(area="dontcare",area="north")
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 6
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > confirm(hasparking="1")
   Semi > negate(hasparking="dontcare") [1.000000]
   User > negate(hasparking="dontcare")
   Turn 7
   Usr > [('negate(hasparking="dontcare")', 1.0)]
   Sys > confirm(hasparking="dontcare")
   Semi > affirm() [1.000000]
   User > affirm()
   Turn 8
   Usr > [(u'inform(hasparking="dontcare")', 1.0)]
   Sys > inform(name="leverton house",area="east")
   Semi > ack() [1.000000]
   User > ack()
   Turn 9
   Usr > [('ack()', 1.0)]
   Sys > inform(name="leverton house",price="a single room ranges from 40 pounds and to 60 pounds and a double room ranges from 60 pounds and to 75 pounds and a family room ranges from 90 pounds and to 130 pounds")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 10
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="leverton house",pricerange="cheap")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > confirm(area="north")
   Semi > negate(area="dontcare",type="placetostay",stars="4") [1.000000]
   User > negate(area="dontcare",type="placetostay",stars="4")
   Turn 3
   Usr > [(u'negate(area="dontcare",type="placetostay",stars="4")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 4
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 6
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > request(pricerange) [1.000000]
   User > request(pricerange)
   Turn 7
   Usr > [('request(pricerange)', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 8
   Usr > [(u'deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="expensive",name="huntingdon marriott hotel",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",addr="kingfisher way, hinchinbrook business park, huntingdon")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",area="west")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",phone="01480446000")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 7
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",pricerange="expensive")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",hasparking="1")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 9
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="huntingdon marriott hotel",price="a cheapest single room is 125 pounds and a cheapest double room is 145 pounds and a cheapest family room is 145 pounds")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 10, suc = 1, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > inform(name="hotel81",postcode="hotel81postcode")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 2
   Usr > [('thankyou()', 1.0)]
   Sys > request(pricerange)
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 3
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel81",hasparking="1")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="hotel81",kind="hotel")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel81",addr="hotel81addr")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 6
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(name="hotel81",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="hotel81",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 3
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="leverton house",postcode="cb5 8rs")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(name="leverton house",price="a single room ranges from 40 pounds and to 60 pounds and a double room ranges from 60 pounds and to 75 pounds and a family room ranges from 90 pounds and to 130 pounds")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 5
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="leverton house",price="a single room ranges from 40 pounds and to 60 pounds and a double room ranges from 60 pounds and to 75 pounds and a family room ranges from 90 pounds and to 130 pounds")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(name="leverton house",hasparking="1")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 4
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 6
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 7
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > request(stars)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 9
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 10
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > request(area) [1.000000]
   User > request(area)
   Turn 11
   Usr > [('request(area)', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > confirm(kind="hotel")
   Semi > negate(kind="guesthouse") [1.000000]
   User > negate(kind="guesthouse")
   Turn 3
   Usr > [('negate(kind="guesthouse")', 1.0)]
   Sys > confirm(pricerange="expensive")
   Semi > affirm(pricerange="expensive") [1.000000]
   User > affirm(pricerange="expensive")
   Turn 4
   Usr > [('affirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > select(hasparking="1",hasparking="0")
   Semi > inform(hasparking="dontcare") [1.000000]
   User > inform(hasparking="dontcare")
   Turn 6
   Usr > [('inform(hasparking="dontcare")', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > request(phone,name="limehouse") [1.000000]
   User > request(phone,name="limehouse")
   Turn 7
   Usr > [(u'request(phone,name="limehouse")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Saving deepq-network...
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 19:52:26: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 19:52:26: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -2.58 +- 2.28
RESULTS:: 19:52:26: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -2.58 +- 2.28
Average success = 6.00 +- 4.71
RESULTS:: 19:52:26: root                               EvaluationManager.py <_prstr>207 :  Average success = 6.00 +- 4.71
Average turns   = 11.18 +- 1.03
RESULTS:: 19:52:26: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 11.18 +- 1.03
*** Evaluating env11-dqn-CH-MLN-00.40: error-rate=0 num-dialogs=100 ***
RESULTS:: 19:52:26: root                                   pydial.py <setEvalConfig>490 :  *** Evaluating env11-dqn-CH-MLN-00.40: error-rate=0 num-dialogs=100 ***
Successfully loaded: _benchmarkpolicies/env11-dqn-CH-MLN-00.40.dqn.ckpt
load from:  _benchmarkpolicies/env11-dqn-CH-MLN-00.40
loaded replay size:  7776
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="cheap",stars="3",kind="hotel") [1.000000]
   User > inform(pricerange="cheap",stars="3",kind="hotel")
   Turn 2
   Usr > [('inform(pricerange="cheap",stars="3",kind="hotel")', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel50",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel50",stars="3")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 4
   Usr > [(u'negate(stars="0")', 1.0)]
   Sys > inform(name="hotel50",postcode="hotel50postcode")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel50",hasparking="0")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 6
   Usr > [('request(stars)', 1.0)]
   Sys > inform(name="hotel50",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 7
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > inform(name="hotel50",area="south")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 8
   Usr > [('request(stars)', 1.0)]
   Sys > inform(name="hotel50",stars="3")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 9
   Usr > [(u'negate(stars="0")', 1.0)]
   Sys > inform(name="hotel50",pricerange="cheap")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 10
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="hotel50",kind="hotel")
   Semi > request(stars,name="hotel50") [1.000000]
   User > request(stars,name="hotel50")
   Turn 11
   Usr > [('request(stars,name="hotel50")', 1.0)]
   Sys > inform(name="hotel50",stars="3")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 12
   Usr > [(u'negate(stars="0")', 1.0)]
   Sys > inform(name="hotel50",kind="hotel")
   Semi > request(pricerange,name="hotel50") [1.000000]
   User > request(pricerange,name="hotel50")
   Turn 13
   Usr > [('request(pricerange,name="hotel50")', 1.0)]
   Sys > inform(name="hotel50",pricerange="cheap")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 14
   Usr > [('request(stars)', 1.0)]
   Sys > inform(name="hotel50",stars="3")
   Semi > deny(stars="3",stars="0") [1.000000]
   User > deny(stars="3",stars="0")
   Turn 15
   Usr > [(u'deny(stars="3",stars="0")', 1.0)]
   Sys > inform(name="hotel50",phone="1223360050")
   Semi > request(pricerange) [1.000000]
   User > request(pricerange)
   Turn 16
   Usr > [('request(pricerange)', 1.0)]
   Sys > inform(name="hotel50",pricerange="cheap")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 17
   Usr > [('request(stars)', 1.0)]
   Sys > inform(name="hotel50",stars="3")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 18
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > inform(name="hotel50",phone="1223360050")
   Semi > ack() [1.000000]
   User > ack()
   Turn 19
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel50",price="hotel50price")
   Semi > request(pricerange,stars) [1.000000]
   User > request(pricerange,stars)
   Turn 20
   Usr > [('request(pricerange,stars)', 1.0)]
   Sys > inform(name="hotel50",pricerange="cheap",stars="3")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 21
   Usr > [(u'negate(stars="0")', 1.0)]
   Sys > inform(name="hotel50",kind="hotel")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 22
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(name="hotel50",pricerange="cheap")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 23
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(name="hotel50",stars="3")
   Semi > deny(stars="3",stars="0") [1.000000]
   User > deny(stars="3",stars="0")
   Turn 24
   Usr > [(u'deny(stars="3",stars="0")', 1.0)]
   Sys > inform(name="hotel50",kind="hotel")
   Semi > request(pricerange) [1.000000]
   User > request(pricerange)
   Turn 25
   Usr > [('request(pricerange)', 1.0)]
   Sys > inform(name="hotel50",pricerange="cheap")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="2") [1.000000]
   User > negate(stars="2")
   Turn 2
   Usr > [('negate(stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="lovell lodge",kind="hotel")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="lovell lodge",addr="365 milton road")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 5
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="lovell lodge",price="a cheapest single room is 50 pounds and a cheapest double room is 65 pounds and a cheapest family room is 70 pounds")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(pricerange="moderate",name="ashley hotel",stars="2")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 7
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="ashley hotel",price="a cheapest double room is 75 pounds and a cheapest family room is 85 pounds")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > inform(kind="guesthouse",pricerange="moderate") [1.000000]
   User > inform(kind="guesthouse",pricerange="moderate")
   Turn 4
   Usr > [('inform(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 5
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 6
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 7
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 8
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 9
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(kind="hotel",pricerange="expensive") [1.000000]
   User > inform(kind="hotel",pricerange="expensive")
   Turn 2
   Usr > [('inform(kind="hotel",pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse203",stars="0")
   Semi > deny(stars="0",stars="3") [1.000000]
   User > deny(stars="0",stars="3")
   Turn 3
   Usr > [('deny(stars="0",stars="3")', 1.0)]
   Sys > inform(name="guesthouse203",price="guesthouse203price")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse203",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 5
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse203",hasinternet="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse203",hasinternet="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 2
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > reqalts(stars="dontcare") [1.000000]
   User > reqalts(stars="dontcare")
   Turn 5
   Usr > [('reqalts(stars="dontcare")', 1.0)]
   Sys > inform(name="hobsons house",kind="guesthouse")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 6
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 7
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="hobsons house",kind="guesthouse")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 8
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="hobsons house",addr="96 barton road")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 9
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="hobsons house",pricerange="moderate")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 10
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="hobsons house",pricerange="moderate")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 11
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="hobsons house",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 8, suc = 1, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 3
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > inform(pricerange="cheap",name="guesthouse37",stars="2")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 4
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="guesthouse37",phone="1223360037")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="cheap",name="guesthouse37",stars="2")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 6
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(pricerange="cheap",name="guesthouse37",stars="2")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 7
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="guesthouse37",price="guesthouse37price")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse37",kind="guesthouse")
   Semi > confirm(stars="2") [1.000000]
   User > confirm(stars="2")
   Turn 9
   Usr > [('confirm(stars="2")', 1.0)]
   Sys > inform(pricerange="cheap",name="guesthouse37",stars="2")
   Semi > request(phone,price) [1.000000]
   User > request(phone,price)
   Turn 10
   Usr > [(u'request(phone,price)', 1.0)]
   Sys > inform(name="guesthouse37",price="guesthouse37price",phone="1223360037")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="leverton house",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 4
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(name="leverton house",area="east")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(name="leverton house",addr="732-734 newmarket road")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="leverton house",phone="01223292094")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 7
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="leverton house",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 8
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="leverton house",hasinternet="1")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 9
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(name="leverton house",pricerange="cheap")
   Semi > ack() [1.000000]
   User > ack()
   Turn 10
   Usr > [('ack()', 1.0)]
   Sys > inform(name="leverton house",area="east")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 11
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="leverton house",addr="732-734 newmarket road")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 12
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(name="leverton house",pricerange="cheap")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 13
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="leverton house",phone="01223292094")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 14
   Usr > [('request(stars)', 1.0)]
   Sys > inform(name="leverton house",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 15
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0",type="placetostay") [1.000000]
   User > negate(stars="0",type="placetostay")
   Turn 2
   Usr > [(u'negate(stars="0",type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > reqalts(kind="guesthouse") [1.000000]
   User > reqalts(kind="guesthouse")
   Turn 3
   Usr > [(u'reqalts(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="leverton house",stars="4")
   Semi > request(price,hasinternet) [1.000000]
   User > request(price,hasinternet)
   Turn 4
   Usr > [(u'request(price,hasinternet)', 1.0)]
   Sys > inform(name="leverton house",price="a single room ranges from 40 pounds and to 60 pounds and a double room ranges from 60 pounds and to 75 pounds and a family room ranges from 90 pounds and to 130 pounds",hasinternet="1")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="leverton house",pricerange="cheap")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 4
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 5
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 6
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 7
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 8
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 9
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 2
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 3
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 4
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 5
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 6
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 7
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > request(kind) [1.000000]
   User > request(kind)
   Turn 8
   Usr > [('request(kind)', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 9
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 10
   Usr > [('request(hasinternet)', 1.0)]
   Sys > inform(name="guesthouse42",hasinternet="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3") [1.000000]
   User > hello(type="placetostay",stars="3")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 3
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(hasparking="0",pricerange="cheap",name="hotel34",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="0",pricerange="cheap",name="hotel34",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="0",pricerange="cheap",name="hotel34",stars="3")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(hasparking="0",pricerange="cheap",name="hotel34",stars="3")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 7
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="hotel34",kind="guesthouse",hasinternet="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="4") [1.000000]
   User > inform(pricerange="expensive",stars="4")
   Turn 5
   Usr > [('inform(pricerange="expensive",stars="4")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 7
   Usr > [(u'deny(stars="4",stars="0")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 8
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > ack() [1.000000]
   User > ack()
   Turn 9
   Usr > [('ack()', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 10
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 11
   Usr > [('request(stars)', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 12
   Usr > [(u'inform(stars="0")', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 13
   Usr > [('request(stars)', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 14
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 15
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > ack() [1.000000]
   User > ack()
   Turn 16
   Usr > [('ack()', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 17
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > request(stars,name="limehouse") [1.000000]
   User > request(stars,name="limehouse")
   Turn 18
   Usr > [('request(stars,name="limehouse")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 19
   Usr > [(u'deny(stars="4",stars="0")', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 20
   Usr > [('request(stars)', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 21
   Usr > [(u'deny(stars="4",stars="0")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 22
   Usr > [('request(stars)', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 23
   Usr > [(u'deny(stars="4",stars="0")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 24
   Usr > [('request(stars)', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 25
   Usr > [(u'negate(stars="0")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > request(stars) [1.000000]
   User > request(stars)
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 3
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > inform(type="placetostay",kind="guesthouse",pricerange="moderate") [1.000000]
   User > inform(type="placetostay",kind="guesthouse",pricerange="moderate")
   Turn 4
   Usr > [(u'inform(type="placetostay",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 5
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 6
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 7
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="guesthouse42",hasinternet="1")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 8
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="guesthouse42",postcode="guesthouse42postcode")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 9
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 10, suc = 1, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="leverton house",postcode="cb5 8rs")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 4
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="leverton house",phone="01223292094")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="leverton house",pricerange="cheap")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 6
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="leverton house",stars="4")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 7
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="leverton house",phone="01223292094")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 2
   Usr > [('negate(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hobsons house",kind="guesthouse")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hobsons house",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 3
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 4
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 5
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 12
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 19
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 20
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 21
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 22
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 23
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 24
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 25
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 2
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > negate(stars="0",type="placetostay") [1.000000]
   User > negate(stars="0",type="placetostay")
   Turn 3
   Usr > [(u'negate(stars="0",type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(name="cityroomz",kind="hotel")
   Semi > negate(kind="guesthouse",pricerange="moderate") [1.000000]
   User > negate(kind="guesthouse",pricerange="moderate")
   Turn 7
   Usr > [('negate(kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 8
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="guesthouse42",hasinternet="1")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 9
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 10
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="guesthouse42",postcode="guesthouse42postcode")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > request(price,hasinternet) [1.000000]
   User > request(price,hasinternet)
   Turn 3
   Usr > [(u'request(price,hasinternet)', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds",hasinternet="1")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 4
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > confirm(stars="2") [1.000000]
   User > confirm(stars="2")
   Turn 5
   Usr > [('confirm(stars="2")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > negate(stars="2") [1.000000]
   User > negate(stars="2")
   Turn 6
   Usr > [('negate(stars="2")', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 7
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse49",stars="2")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 8
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(name="guesthouse49")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 9
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="guesthouse49",price="guesthouse49price")
   Semi > request(hasinternet,name="guesthouse49") [1.000000]
   User > request(hasinternet,name="guesthouse49")
   Turn 10
   Usr > [(u'request(hasinternet,name="guesthouse49")', 1.0)]
   Sys > inform(name="guesthouse49",hasinternet="1")
   Semi > confirm(stars="2") [1.000000]
   User > confirm(stars="2")
   Turn 11
   Usr > [('confirm(stars="2")', 1.0)]
   Sys > inform(name="guesthouse49",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 12
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="guesthouse49")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 13
   Usr > [('request(postcode)', 1.0)]
   Sys > inform(name="guesthouse49",postcode="guesthouse49postcode")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 6, suc = 1, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="leverton house",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 4
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(name="leverton house",hasinternet="1")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 5
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="leverton house",stars="4")
   Semi > request(pricerange) [1.000000]
   User > request(pricerange)
   Turn 6
   Usr > [('request(pricerange)', 1.0)]
   Sys > inform(name="leverton house",pricerange="cheap")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 2
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 5
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > inform(stars="4",kind="hotel") [1.000000]
   User > inform(stars="4",kind="hotel")
   Turn 6
   Usr > [('inform(stars="4",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",type="placetostay") [1.000000]
   User > negate(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > inform(stars="3",kind="hotel") [1.000000]
   User > inform(stars="3",kind="hotel")
   Turn 3
   Usr > [('inform(stars="3",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 4
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 3
   Usr > [('negate(stars="3")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(pricerange="cheap",name="hotel34",stars="3")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 8
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="hotel34",kind="guesthouse",price="hotel34price")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 3
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 4
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 5
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 6
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 7
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 8
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 9
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 10
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 2
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > inform(stars="0",type="placetostay") [1.000000]
   User > inform(stars="0",type="placetostay")
   Turn 3
   Usr > [(u'inform(stars="0",type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 7
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(name="limehouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(name="leverton house",hasinternet="1")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 4
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(name="leverton house",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 5
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(name="leverton house",hasparking="1")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="leverton house",area="east")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 7
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="leverton house",price="a single room ranges from 40 pounds and to 60 pounds and a double room ranges from 60 pounds and to 75 pounds and a family room ranges from 90 pounds and to 130 pounds")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel55",stars="0")
   Semi > confirm(name="leverton house") [1.000000]
   User > confirm(name="leverton house")
   Turn 9
   Usr > [('confirm(name="leverton house")', 1.0)]
   Sys > inform(name="hotel55")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 10, suc = 1, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > inform(stars="4",kind="guesthouse") [1.000000]
   User > inform(stars="4",kind="guesthouse")
   Turn 3
   Usr > [('inform(stars="4",kind="guesthouse")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 4
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > inform(type="placetostay",stars="3",pricerange="expensive") [1.000000]
   User > inform(type="placetostay",stars="3",pricerange="expensive")
   Turn 4
   Usr > [(u'inform(type="placetostay",stars="3",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 5
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 7
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 8
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 9
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > request(area,name="limehouse") [1.000000]
   User > request(area,name="limehouse")
   Turn 10
   Usr > [('request(area,name="limehouse")', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="the lensfield hotel",kind="hotel")
   Semi > negate(kind="guesthouse") [1.000000]
   User > negate(kind="guesthouse")
   Turn 6
   Usr > [('negate(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse63",stars="3")
   Semi > confirm(name="the lensfield hotel") [1.000000]
   User > confirm(name="the lensfield hotel")
   Turn 7
   Usr > [('confirm(name="the lensfield hotel")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse63",stars="3")
   Semi > confirm(name="the lensfield hotel") [1.000000]
   User > confirm(name="the lensfield hotel")
   Turn 8
   Usr > [('confirm(name="the lensfield hotel")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse63",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > negate(stars="0",type="placetostay",kind="guesthouse") [1.000000]
   User > negate(stars="0",type="placetostay",kind="guesthouse")
   Turn 3
   Usr > [(u'negate(stars="0",type="placetostay",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > confirm(name="city centre north b and b") [1.000000]
   User > confirm(name="city centre north b and b")
   Turn 6
   Usr > [('confirm(name="city centre north b and b")', 1.0)]
   Sys > inform(name="city centre north b and b")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 2
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 4
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 7
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 8
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 9
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > ack() [1.000000]
   User > ack()
   Turn 10
   Usr > [('ack()', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > request(addr,name="limehouse") [1.000000]
   User > request(addr,name="limehouse")
   Turn 11
   Usr > [(u'request(addr,name="limehouse")', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -12, suc = 0, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 2
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > request(hasparking)
   Semi > inform(name="hobsons house") [1.000000]
   User > inform(name="hobsons house")
   Turn 5
   Usr > [('inform(name="hobsons house")', 1.0)]
   Sys > inform(name="hobsons house",stars="3")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate") [1.000000]
   User > hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0",kind="guesthouse",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 2
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > reqalts(hasparking="dontcare") [1.000000]
   User > reqalts(hasparking="dontcare")
   Turn 3
   Usr > [('reqalts(hasparking="dontcare")', 1.0)]
   Sys > inform(hasparking="0",stars="0",pricerange="moderate",name="guesthouse42",kind="guesthouse")
   Semi > request(phone,hasinternet) [1.000000]
   User > request(phone,hasinternet)
   Turn 4
   Usr > [(u'request(phone,hasinternet)', 1.0)]
   Sys > inform(name="guesthouse42",hasinternet="1",phone="1223360042")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 2
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 3
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="leverton house",phone="01223292094")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(name="leverton house",pricerange="cheap")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="leverton house",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(name="leverton house",addr="732-734 newmarket road")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 7
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="leverton house",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 8
   Usr > [('ack()', 1.0)]
   Sys > inform(name="leverton house",addr="732-734 newmarket road")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 9
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="leverton house",kind="guesthouse")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 10
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="leverton house",hasinternet="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > reqalts(pricerange="dontcare") [1.000000]
   User > reqalts(pricerange="dontcare")
   Turn 3
   Usr > [('reqalts(pricerange="dontcare")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > confirm(stars="2") [1.000000]
   User > confirm(stars="2")
   Turn 6
   Usr > [('confirm(stars="2")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 9
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 17
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 19
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 20
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 21
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(name="limehouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 22
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -22, suc = 0, turn = 22
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 3
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 4
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 6
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 7
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 8
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 9
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",stars="3",kind="guesthouse") [1.000000]
   User > negate(pricerange="expensive",stars="3",kind="guesthouse")
   Turn 2
   Usr > [('negate(pricerange="expensive",stars="3",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse63",stars="3")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 3
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="guesthouse63",hasinternet="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 16, suc = 1, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",kind="hotel")
   Turn 2
   Usr > [('inform(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 3
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 2
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > inform(kind="hotel",pricerange="moderate") [1.000000]
   User > inform(kind="hotel",pricerange="moderate")
   Turn 6
   Usr > [('inform(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="guesthouse89",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 8
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="guesthouse89",hasinternet="1")
   Semi > ack() [1.000000]
   User > ack()
   Turn 9
   Usr > [('ack()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel92",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 10
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="hotel92",hasinternet="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 3
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > inform(stars="4",kind="hotel") [1.000000]
   User > inform(stars="4",kind="hotel")
   Turn 5
   Usr > [('inform(stars="4",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 2
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",kind="hotel") [1.000000]
   User > negate(pricerange="expensive",kind="hotel")
   Turn 3
   Usr > [('negate(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -4, suc = 0, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > reqalts(pricerange="dontcare") [1.000000]
   User > reqalts(pricerange="dontcare")
   Turn 3
   Usr > [('reqalts(pricerange="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 6
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive",type="placetostay") [1.000000]
   User > negate(pricerange="expensive",type="placetostay")
   Turn 2
   Usr > [(u'negate(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > reqalts(area="dontcare") [1.000000]
   User > reqalts(area="dontcare")
   Turn 3
   Usr > [('reqalts(area="dontcare")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 4
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > inform(pricerange="expensive",stars="4",kind="hotel") [1.000000]
   User > inform(pricerange="expensive",stars="4",kind="hotel")
   Turn 5
   Usr > [('inform(pricerange="expensive",stars="4",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 7
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 8
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > request(area) [1.000000]
   User > request(area)
   Turn 9
   Usr > [('request(area)', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 3
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="leverton house",kind="guesthouse")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 4
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(name="leverton house",hasparking="1")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > request(hasinternet,name="leverton house") [1.000000]
   User > request(hasinternet,name="leverton house")
   Turn 6
   Usr > [(u'request(hasinternet,name="leverton house")', 1.0)]
   Sys > inform(name="leverton house",hasinternet="1")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 7
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="leverton house",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 8
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="leverton house",kind="guesthouse")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 9
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(name="leverton house",pricerange="cheap")
   Semi > ack() [1.000000]
   User > ack()
   Turn 10
   Usr > [('ack()', 1.0)]
   Sys > inform(name="leverton house",addr="732-734 newmarket road")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 3
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > reqalts(stars="dontcare") [1.000000]
   User > reqalts(stars="dontcare")
   Turn 4
   Usr > [('reqalts(stars="dontcare")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 5
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > inform(stars="4",kind="hotel") [1.000000]
   User > inform(stars="4",kind="hotel")
   Turn 7
   Usr > [('inform(stars="4",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 2
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > negate(stars="2",type="placetostay",kind="hotel") [1.000000]
   User > negate(stars="2",type="placetostay",kind="hotel")
   Turn 3
   Usr > [(u'negate(stars="2",type="placetostay",kind="hotel")', 1.0)]
   Sys > inform(name="leverton house",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse60",stars="2")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="guesthouse60",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse60",postcode="guesthouse60postcode")
   Semi > confirm(stars="2") [1.000000]
   User > confirm(stars="2")
   Turn 7
   Usr > [('confirm(stars="2")', 1.0)]
   Sys > inform(name="guesthouse60",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 8
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse60",postcode="guesthouse60postcode")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 2
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > inform(kind="hotel",pricerange="moderate") [1.000000]
   User > inform(kind="hotel",pricerange="moderate")
   Turn 3
   Usr > [('inform(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 4
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(name="hotel82")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 5
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="hotel82",hasinternet="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 14, suc = 1, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(hasparking="dontcare",type="placetostay") [1.000000]
   User > inform(hasparking="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'inform(hasparking="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 6
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 7
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 12, suc = 1, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > reqalts(kind="hotel") [1.000000]
   User > reqalts(kind="hotel")
   Turn 3
   Usr > [(u'reqalts(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 4
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 5
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > confirm(stars="2") [1.000000]
   User > confirm(stars="2")
   Turn 8
   Usr > [('confirm(stars="2")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 9
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 10
   Usr > [(u'inform(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > negate(stars="2") [1.000000]
   User > negate(stars="2")
   Turn 11
   Usr > [('negate(stars="2")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 12
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 13
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 2
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 3
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 6
   Usr > [(u'request(phone)', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 7
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3",type="placetostay") [1.000000]
   User > negate(stars="3",type="placetostay")
   Turn 2
   Usr > [(u'negate(stars="3",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="0") [1.000000]
   User > hello(type="placetostay",stars="0")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="0")', 1.0)]
   Sys > inform(name="hotel127",phone="12233600127")
   Semi > ack() [1.000000]
   User > ack()
   Turn 2
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel127",price="hotel127price")
   Semi > inform(kind="hotel",pricerange="expensive") [1.000000]
   User > inform(kind="hotel",pricerange="expensive")
   Turn 3
   Usr > [('inform(kind="hotel",pricerange="expensive")', 1.0)]
   Sys > inform(name="hotel127",hasinternet="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 4
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 16, suc = 1, turn = 4
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 2
   Usr > [('inform(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",type="placetostay") [1.000000]
   User > inform(="dontcare",type="placetostay")
   Turn 3
   Usr > [(u'inform(="dontcare",type="placetostay")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 4
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hobsons house",kind="guesthouse")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 5
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hobsons house",kind="guesthouse")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hobsons house",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 13, suc = 1, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(stars="4",kind="hotel",pricerange="cheap") [1.000000]
   User > inform(stars="4",kind="hotel",pricerange="cheap")
   Turn 3
   Usr > [('inform(stars="4",kind="hotel",pricerange="cheap")', 1.0)]
   Sys > inform(name="leverton house",postcode="cb5 8rs")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="leverton house",kind="guesthouse")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 5
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="leverton house",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(name="leverton house",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > inform(name="leverton house",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 8
   Usr > [('request(postcode)', 1.0)]
   Sys > inform(name="leverton house",postcode="cb5 8rs")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 9
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(name="leverton house",pricerange="cheap")
   Semi > ack() [1.000000]
   User > ack()
   Turn 10
   Usr > [('ack()', 1.0)]
   Sys > inform(name="leverton house",area="east")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 4
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > reqalts(hasparking="dontcare") [1.000000]
   User > reqalts(hasparking="dontcare")
   Turn 5
   Usr > [('reqalts(hasparking="dontcare")', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 6
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 7
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 8
   Usr > [('negate(stars="3")', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 9
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 10
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="the lensfield hotel",hasinternet="1")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 11
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="the lensfield hotel",stars="3")
   Semi > ack() [1.000000]
   User > ack()
   Turn 12
   Usr > [('ack()', 1.0)]
   Sys > inform(name="the lensfield hotel",area="south")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 7, suc = 1, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 4
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(name="limehouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="2",type="placetostay") [1.000000]
   User > inform(stars="2",type="placetostay")
   Turn 2
   Usr > [(u'inform(stars="2",type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="lovell lodge",kind="hotel")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 3
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 4
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 5
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 6
   Usr > [('negate(stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 7
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="the lensfield hotel",addr="53-57 lensfield road")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="the lensfield hotel",kind="hotel")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 9
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="the lensfield hotel",pricerange="expensive")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 10, suc = 1, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 2
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 3
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 4
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 5
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 6
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(name="guesthouse42")
   Semi > ack() [1.000000]
   User > ack()
   Turn 7
   Usr > [('ack()', 1.0)]
   Sys > inform(name="guesthouse42")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 8
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 9
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="guesthouse42",addr="guesthouse42addr")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 10, suc = 1, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3",type="placetostay") [1.000000]
   User > negate(stars="3",type="placetostay")
   Turn 2
   Usr > [(u'negate(stars="3",type="placetostay")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare",kind="guesthouse") [1.000000]
   User > inform(="dontcare",kind="guesthouse")
   Turn 3
   Usr > [('inform(="dontcare",kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hobsons house",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hobsons house",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hobsons house",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="moderate",name="hobsons house",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 2
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="4") [1.000000]
   User > hello(type="placetostay",stars="4")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 7
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 2
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 4
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="hobsons house",kind="guesthouse",price="a cheapest single room is 59 pounds and a double room ranges from 75 pounds and to 80 pounds and a cheapest family room is 110 pounds")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 7
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="hobsons house",kind="guesthouse",price="a cheapest single room is 59 pounds and a double room ranges from 75 pounds and to 80 pounds and a cheapest family room is 110 pounds")
   Semi > negate(kind="hotel",stars="3") [1.000000]
   User > negate(kind="hotel",stars="3")
   Turn 8
   Usr > [('negate(kind="hotel",stars="3")', 1.0)]
   Sys > inform(hasparking="1",stars="3",pricerange="expensive",name="the lensfield hotel",kind="hotel")
   Semi > negate(pricerange="moderate") [1.000000]
   User > negate(pricerange="moderate")
   Turn 9
   Usr > [('negate(pricerange="moderate")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > confirm(name="hobsons house") [1.000000]
   User > confirm(name="hobsons house")
   Turn 10
   Usr > [('confirm(name="hobsons house")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > confirm(name="hobsons house") [1.000000]
   User > confirm(name="hobsons house")
   Turn 11
   Usr > [('confirm(name="hobsons house")', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 12
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(hasparking="0",stars="3",pricerange="moderate",name="guesthouse43",kind="hotel")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 3
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 4
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 6
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 7
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 8
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 9
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 10
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 11
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 12
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > request(area,name="limehouse") [1.000000]
   User > request(area,name="limehouse")
   Turn 13
   Usr > [('request(area,name="limehouse")', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 14
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 15
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 16
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > bye() [1.000000]
   User > bye()
   Turn 17
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -17, suc = 0, turn = 17
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > request(price,name="limehouse") [1.000000]
   User > request(price,name="limehouse")
   Turn 4
   Usr > [(u'request(price,name="limehouse")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > ack() [1.000000]
   User > ack()
   Turn 5
   Usr > [('ack()', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > inform(kind="hotel",pricerange="expensive") [1.000000]
   User > inform(kind="hotel",pricerange="expensive")
   Turn 6
   Usr > [('inform(kind="hotel",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 7
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -7, suc = 0, turn = 7
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 2
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 4
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > inform(stars="0") [1.000000]
   User > inform(stars="0")
   Turn 6
   Usr > [('inform(stars="0")', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 7
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 3
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 5
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 7
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 10
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 11
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(name="limehouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > ack() [1.000000]
   User > ack()
   Turn 13
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel82")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 14
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > request(area,addr) [1.000000]
   User > request(area,addr)
   Turn 15
   Usr > [(u'request(area,addr)', 1.0)]
   Sys > inform(name="hotel82",area="north",addr="hotel82addr")
   Semi > ack() [1.000000]
   User > ack()
   Turn 16
   Usr > [('ack()', 1.0)]
   Sys > inform(name="hotel82")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 17
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="hotel82")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 18
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="hotel82",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 19
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 1, suc = 1, turn = 19
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 3
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > negate(stars="0",pricerange="expensive") [1.000000]
   User > negate(stars="0",pricerange="expensive")
   Turn 4
   Usr > [('negate(stars="0",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 7
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="3") [1.000000]
   User > negate(stars="3")
   Turn 2
   Usr > [('negate(stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 4
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > inform(type="placetostay",pricerange="moderate") [1.000000]
   User > inform(type="placetostay",pricerange="moderate")
   Turn 5
   Usr > [(u'inform(type="placetostay",pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > request(name="hobsons house",phone) [1.000000]
   User > request(name="hobsons house",phone)
   Turn 6
   Usr > [(u'request(name="hobsons house",phone)', 1.0)]
   Sys > inform(name="hobsons house",kind="guesthouse",phone="01223304906")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 7
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="hobsons house",pricerange="moderate")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 8
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 9
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="hobsons house",kind="guesthouse",price="a cheapest single room is 59 pounds and a double room ranges from 75 pounds and to 80 pounds and a cheapest family room is 110 pounds")
   Semi > confirm(stars="3") [1.000000]
   User > confirm(stars="3")
   Turn 10
   Usr > [('confirm(stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 2
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 3
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 5
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 7
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 9
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 10
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 11
   Usr > [('request(phone)', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 12
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 13
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > request(area) [1.000000]
   User > request(area)
   Turn 14
   Usr > [('request(area)', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 15
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 16
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 17
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 18
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > request(hasparking,area,price) [1.000000]
   User > request(hasparking,area,price)
   Turn 19
   Usr > [(u'request(hasparking,area,price)', 1.0)]
   Sys > inform(name="limehouse",area="north",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds",hasparking="1")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 20
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 21
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > request(hasparking) [1.000000]
   User > request(hasparking)
   Turn 22
   Usr > [('request(hasparking)', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > request(price,name="limehouse") [1.000000]
   User > request(price,name="limehouse")
   Turn 23
   Usr > [(u'request(price,name="limehouse")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > request(phone) [1.000000]
   User > request(phone)
   Turn 24
   Usr > [('request(phone)', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 25
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 26
   Prompt > The dialogue has finshed due to too many turns
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -25, suc = 0, turn = 25
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 3
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 4
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 5
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > inform(stars="2") [1.000000]
   User > inform(stars="2")
   Turn 6
   Usr > [('inform(stars="2")', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 7
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 2
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 3
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 4
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 5
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(pricerange="moderate",name="hobsons house",stars="3")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 7
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 8
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 9
   Usr > [('thankyou()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 10, suc = 1, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts(pricerange="dontcare") [1.000000]
   User > reqalts(pricerange="dontcare")
   Turn 2
   Usr > [('reqalts(pricerange="dontcare")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 4
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > request(pricerange,stars) [1.000000]
   User > request(pricerange,stars)
   Turn 5
   Usr > [('request(pricerange,stars)', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate",stars="4")
   Semi > inform(type="placetostay",stars="4") [1.000000]
   User > inform(type="placetostay",stars="4")
   Turn 6
   Usr > [(u'inform(type="placetostay",stars="4")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 7
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 8
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > inform(kind="hotel",stars="4") [1.000000]
   User > inform(kind="hotel",stars="4")
   Turn 3
   Usr > [('inform(kind="hotel",stars="4")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 4
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 10
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > confirm(name="limehouse") [1.000000]
   User > confirm(name="limehouse")
   Turn 12
   Usr > [('confirm(name="limehouse")', 1.0)]
   Sys > inform(name="limehouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 14
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -14, suc = 0, turn = 14
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 3
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 4
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 5
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 6
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 8
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > bye() [1.000000]
   User > bye()
   Turn 13
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -13, suc = 0, turn = 13
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 2
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > request(kind) [1.000000]
   User > request(kind)
   Turn 5
   Usr > [('request(kind)', 1.0)]
   Sys > inform(name="cityroomz",kind="hotel")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 6
   Usr > [(u'deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="guesthouse42",kind="guesthouse")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 8
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(name="guesthouse42",phone="1223360042")
   Semi > confirm(stars="0") [1.000000]
   User > confirm(stars="0")
   Turn 9
   Usr > [('confirm(stars="0")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 10
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="guesthouse42",hasinternet="1")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 11
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="guesthouse42",pricerange="moderate")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 8, suc = 1, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="0") [1.000000]
   User > negate(stars="0")
   Turn 2
   Usr > [('negate(stars="0")', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="moderate",name="cityroomz",stars="0")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(name="cityroomz",pricerange="moderate")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 5
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="cityroomz",price="a single room ranges from 47 pounds 50 and to 50 pounds and a cheapest double room is 67 pounds 50 and a cheapest family room is 77 pounds 50")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="cityroomz",kind="hotel")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 7
   Usr > [('deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 8
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 9
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="guesthouse42",price="guesthouse42price")
   Semi > inform(kind="guesthouse") [1.000000]
   User > inform(kind="guesthouse")
   Turn 10
   Usr > [('inform(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 11
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="moderate",name="guesthouse42",stars="0")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 8, suc = 1, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 3
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > inform(type="placetostay",stars="0",kind="guesthouse") [1.000000]
   User > inform(type="placetostay",stars="0",kind="guesthouse")
   Turn 4
   Usr > [(u'inform(type="placetostay",stars="0",kind="guesthouse")', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > bye() [1.000000]
   User > bye()
   Turn 6
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -6, suc = 0, turn = 6
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 2
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > request(hasparking)
   Semi > inform(="dontcare") [1.000000]
   User > inform(="dontcare")
   Turn 3
   Usr > [('inform(="dontcare")', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(hasparking="1",pricerange="moderate",name="hobsons house",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 2
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > ack() [1.000000]
   User > ack()
   Turn 4
   Usr > [('ack()', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 5
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > inform(pricerange="moderate") [1.000000]
   User > inform(pricerange="moderate")
   Turn 6
   Usr > [('inform(pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 7
   Usr > [(u'request(price)', 1.0)]
   Sys > inform(name="hotel82",price="hotel82price")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 8
   Usr > [(u'request(hasinternet)', 1.0)]
   Sys > inform(name="hotel82",hasinternet="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 11, suc = 1, turn = 9
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 3
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 5
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 7
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 8
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 9
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 10
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 11
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 12
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 13
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 14
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 15
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 16
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 17
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 18
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 19
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 20
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > bye() [1.000000]
   User > bye()
   Turn 21
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -21, suc = 0, turn = 21
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 4
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 5
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 6
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > inform(stars="3",type="placetostay") [1.000000]
   User > inform(stars="3",type="placetostay")
   Turn 7
   Usr > [(u'inform(stars="3",type="placetostay")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > request(kind) [1.000000]
   User > request(kind)
   Turn 8
   Usr > [('request(kind)', 1.0)]
   Sys > inform(name="the lensfield hotel",kind="hotel")
   Semi > negate(kind="guesthouse") [1.000000]
   User > negate(kind="guesthouse")
   Turn 9
   Usr > [('negate(kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse63",stars="3")
   Semi > confirm(name="the lensfield hotel") [1.000000]
   User > confirm(name="the lensfield hotel")
   Turn 10
   Usr > [('confirm(name="the lensfield hotel")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse63",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 11
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse63",stars="3")
   Semi > bye() [1.000000]
   User > bye()
   Turn 12
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 8, suc = 1, turn = 12
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(stars="4",stars="2") [1.000000]
   User > deny(stars="4",stars="2")
   Turn 2
   Usr > [('deny(stars="4",stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > negate(pricerange="expensive",type="placetostay") [1.000000]
   User > negate(pricerange="expensive",type="placetostay")
   Turn 3
   Usr > [(u'negate(pricerange="expensive",type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 4
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 5
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > negate(pricerange="expensive",kind="hotel") [1.000000]
   User > negate(pricerange="expensive",kind="hotel")
   Turn 6
   Usr > [('negate(pricerange="expensive",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > request(price) [1.000000]
   User > request(price)
   Turn 7
   Usr > [('request(price)', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 8
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 9
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 2
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 3
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 5
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 6
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 7
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 8
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 9
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 10
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 11
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > ack() [1.000000]
   User > ack()
   Turn 12
   Usr > [('ack()', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 13
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 14
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 15
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > request(hasparking) [1.000000]
   User > request(hasparking)
   Turn 16
   Usr > [('request(hasparking)', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 17
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > ack() [1.000000]
   User > ack()
   Turn 18
   Usr > [('ack()', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > bye() [1.000000]
   User > bye()
   Turn 19
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -19, suc = 0, turn = 19
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="limehouse",addr="78-80 milton road")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 4
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 5
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > ack() [1.000000]
   User > ack()
   Turn 6
   Usr > [('ack()', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 7
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 8
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 9
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > inform(stars="4",pricerange="expensive") [1.000000]
   User > inform(stars="4",pricerange="expensive")
   Turn 10
   Usr > [('inform(stars="4",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -11, suc = 0, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > negate(stars="2") [1.000000]
   User > negate(stars="2")
   Turn 2
   Usr > [('negate(stars="2")', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > ack() [1.000000]
   User > ack()
   Turn 3
   Usr > [('ack()', 1.0)]
   Sys > inform(pricerange="moderate",name="lovell lodge",stars="2")
   Semi > request(price,name="lovell lodge") [1.000000]
   User > request(price,name="lovell lodge")
   Turn 4
   Usr > [(u'request(price,name="lovell lodge")', 1.0)]
   Sys > inform(name="lovell lodge",price="a cheapest single room is 50 pounds and a cheapest double room is 65 pounds and a cheapest family room is 70 pounds")
   Semi > confirm(type="placetostay") [1.000000]
   User > confirm(type="placetostay")
   Turn 5
   Usr > [(u'confirm(type="placetostay")', 1.0)]
   Sys > inform(name="lovell lodge",price="a cheapest single room is 50 pounds and a cheapest double room is 65 pounds and a cheapest family room is 70 pounds")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 6
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="lovell lodge",postcode="cb4 1sr")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="lovell lodge",hasparking="1")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 8
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="lovell lodge",kind="hotel")
   Semi > confirm(pricerange="moderate") [1.000000]
   User > confirm(pricerange="moderate")
   Turn 9
   Usr > [('confirm(pricerange="moderate")', 1.0)]
   Sys > inform(name="lovell lodge",pricerange="moderate")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 10
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="lovell lodge",hasinternet="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 11
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 9, suc = 1, turn = 11
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive") [1.000000]
   User > hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")
   Turn 1
   Usr > [(u'hello(type="placetostay",stars="3",kind="hotel",pricerange="expensive")', 1.0)]
   Sys > inform(name="guesthouse138",price="guesthouse138price")
   Semi > reqalts(kind="dontcare") [1.000000]
   User > reqalts(kind="dontcare")
   Turn 2
   Usr > [('reqalts(kind="dontcare")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse138",stars="3")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 3
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="expensive",name="guesthouse138",stars="3")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 4
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="guesthouse138",postcode="guesthouse138postcode")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 2
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 3
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 4
   Usr > [('reqalts()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -5, suc = 0, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 2
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 3
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 4
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > negate(pricerange="cheap") [1.000000]
   User > negate(pricerange="cheap")
   Turn 6
   Usr > [('negate(pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 7
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="leverton house",postcode="cb5 8rs")
   Semi > bye() [1.000000]
   User > bye()
   Turn 8
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -8, suc = 0, turn = 8
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 2
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 3
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(kind="hotel",pricerange="moderate") [1.000000]
   User > inform(kind="hotel",pricerange="moderate")
   Turn 4
   Usr > [('inform(kind="hotel",pricerange="moderate")', 1.0)]
   Sys > inform(kind="hotel",pricerange="moderate",name="hotel82",stars="4")
   Semi > bye() [1.000000]
   User > bye()
   Turn 5
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 15, suc = 1, turn = 5
   Turn 0
   Sys > hello()
   Semi > hello(type="placetostay") [1.000000]
   User > hello(type="placetostay")
   Turn 1
   Usr > [(u'hello(type="placetostay")', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > inform(pricerange="expensive") [1.000000]
   User > inform(pricerange="expensive")
   Turn 2
   Usr > [('inform(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > confirm(stars="4") [1.000000]
   User > confirm(stars="4")
   Turn 3
   Usr > [('confirm(stars="4")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="limehouse",area="north")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 5
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 6
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > negate(kind="hotel") [1.000000]
   User > negate(kind="hotel")
   Turn 7
   Usr > [('negate(kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 8
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 9
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > deny(kind="guesthouse",kind="hotel") [1.000000]
   User > deny(kind="guesthouse",kind="hotel")
   Turn 10
   Usr > [('deny(kind="guesthouse",kind="hotel")', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > ack() [1.000000]
   User > ack()
   Turn 11
   Usr > [('ack()', 1.0)]
   Sys > inform(name="limehouse",hasparking="1")
   Semi > request(phone,name="limehouse") [1.000000]
   User > request(phone,name="limehouse")
   Turn 12
   Usr > [('request(phone,name="limehouse")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 13
   Usr > [('thankyou()', 1.0)]
   Sys > inform(name="limehouse",price="a cheapest single room is 40 pounds and a cheapest double room is 75 pounds")
   Semi > request(hasinternet) [1.000000]
   User > request(hasinternet)
   Turn 14
   Usr > [('request(hasinternet)', 1.0)]
   Sys > inform(name="limehouse",hasinternet="1")
   Semi > bye() [1.000000]
   User > bye()
   Turn 15
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -15, suc = 0, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 3
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(name="leverton house",stars="4")
   Semi > negate(stars="0",type="placetostay",kind="hotel") [1.000000]
   User > negate(stars="0",type="placetostay",kind="hotel")
   Turn 4
   Usr > [(u'negate(stars="0",type="placetostay",kind="hotel")', 1.0)]
   Sys > inform(name="leverton house",stars="4")
   Semi > deny(stars="4",stars="0") [1.000000]
   User > deny(stars="4",stars="0")
   Turn 5
   Usr > [('deny(stars="4",stars="0")', 1.0)]
   Sys > inform(name="leverton house",addr="732-734 newmarket road")
   Semi > reqalts() [1.000000]
   User > reqalts()
   Turn 6
   Usr > [('reqalts()', 1.0)]
   Sys > inform(name="leverton house",hasparking="1")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 7
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="hotel",pricerange="cheap",name="hotel55",stars="0")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 8
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="hotel55",kind="hotel")
   Semi > deny(kind="hotel",kind="guesthouse") [1.000000]
   User > deny(kind="hotel",kind="guesthouse")
   Turn 9
   Usr > [(u'deny(kind="hotel",kind="guesthouse")', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 10
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="city centre north b and b",postcode="cb4 3ht")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 11
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 12
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 13
   Usr > [('thankyou()', 1.0)]
   Sys > inform(kind="guesthouse",pricerange="cheap",name="city centre north b and b",stars="0")
   Semi > confirm(pricerange="cheap") [1.000000]
   User > confirm(pricerange="cheap")
   Turn 14
   Usr > [('confirm(pricerange="cheap")', 1.0)]
   Sys > inform(name="city centre north b and b",pricerange="cheap")
   Semi > bye() [1.000000]
   User > bye()
   Turn 15
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 5, suc = 1, turn = 15
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="cheap") [1.000000]
   User > deny(pricerange="moderate",pricerange="cheap")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="cheap")', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 3
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="leverton house",addr="732-734 newmarket road")
   Semi > thankyou() [1.000000]
   User > thankyou()
   Turn 4
   Usr > [('thankyou()', 1.0)]
   Sys > inform(pricerange="cheap",name="leverton house",stars="4")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="leverton house",price="a single room ranges from 40 pounds and to 60 pounds and a double room ranges from 60 pounds and to 75 pounds and a family room ranges from 90 pounds and to 130 pounds")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 6
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="leverton house",kind="guesthouse")
   Semi > inform(kind="hotel") [1.000000]
   User > inform(kind="hotel")
   Turn 7
   Usr > [('inform(kind="hotel")', 1.0)]
   Sys > inform(name="leverton house",stars="4")
   Semi > inform(pricerange="cheap") [1.000000]
   User > inform(pricerange="cheap")
   Turn 8
   Usr > [('inform(pricerange="cheap")', 1.0)]
   Sys > inform(name="leverton house",phone="01223292094")
   Semi > request(addr) [1.000000]
   User > request(addr)
   Turn 9
   Usr > [(u'request(addr)', 1.0)]
   Sys > inform(name="leverton house",addr="732-734 newmarket road")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -10, suc = 0, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > deny(pricerange="moderate",pricerange="expensive") [1.000000]
   User > deny(pricerange="moderate",pricerange="expensive")
   Turn 2
   Usr > [('deny(pricerange="moderate",pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > deny(stars="4",stars="3") [1.000000]
   User > deny(stars="4",stars="3")
   Turn 3
   Usr > [('deny(stars="4",stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 4
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="the lensfield hotel",kind="hotel")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 5
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="the lensfield hotel",kind="hotel")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 6
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="the lensfield hotel",pricerange="expensive")
   Semi > confirm(kind="hotel") [1.000000]
   User > confirm(kind="hotel")
   Turn 7
   Usr > [('confirm(kind="hotel")', 1.0)]
   Sys > inform(name="the lensfield hotel",kind="hotel")
   Semi > inform(stars="3") [1.000000]
   User > inform(stars="3")
   Turn 8
   Usr > [('inform(stars="3")', 1.0)]
   Sys > inform(pricerange="expensive",name="the lensfield hotel",stars="3")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 9
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="the lensfield hotel",postcode="cb2 1en")
   Semi > bye() [1.000000]
   User > bye()
   Turn 10
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = 10, suc = 1, turn = 10
   Turn 0
   Sys > hello()
   Semi > hello() [1.000000]
   User > hello()
   Turn 1
   Usr > [('hello()', 1.0)]
   Sys > inform(pricerange="moderate",name="limehouse",stars="4")
   Semi > confirm(kind="guesthouse") [1.000000]
   User > confirm(kind="guesthouse")
   Turn 2
   Usr > [('confirm(kind="guesthouse")', 1.0)]
   Sys > inform(name="limehouse",kind="guesthouse")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 3
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > confirm(pricerange="expensive") [1.000000]
   User > confirm(pricerange="expensive")
   Turn 4
   Usr > [('confirm(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",pricerange="moderate")
   Semi > negate(pricerange="expensive") [1.000000]
   User > negate(pricerange="expensive")
   Turn 5
   Usr > [('negate(pricerange="expensive")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > inform(type="placetostay") [1.000000]
   User > inform(type="placetostay")
   Turn 6
   Usr > [(u'inform(type="placetostay")', 1.0)]
   Sys > inform(name="limehouse",phone="01223300552")
   Semi > inform(stars="4") [1.000000]
   User > inform(stars="4")
   Turn 7
   Usr > [('inform(stars="4")', 1.0)]
   Sys > inform(name="limehouse",stars="4")
   Semi > request(postcode) [1.000000]
   User > request(postcode)
   Turn 8
   Usr > [(u'request(postcode)', 1.0)]
   Sys > inform(name="limehouse",postcode="cb4 2je")
   Semi > bye() [1.000000]
   User > bye()
   Turn 9
   Usr > [('bye()', 1.0)]
   Sys > bye()
Evaluation of domain: CamHotels --evaluated by: objective success evaluator
rew = -9, suc = 0, turn = 9
--------------------
Results for domain: CamHotels --evaluated by: objective success evaluator
RESULTS:: 20:00:31: root                               EvaluationManager.py <_prstr>207 :  Results for domain: CamHotels --evaluated by: objective success evaluator
# of dialogues  = 100
RESULTS:: 20:00:31: root                               EvaluationManager.py <_prstr>207 :  # of dialogues  = 100
Average reward  = -2.47 +- 2.23
RESULTS:: 20:00:31: root                               EvaluationManager.py <_prstr>207 :  Average reward  = -2.47 +- 2.23
Average success = 11.00 +- 6.21
RESULTS:: 20:00:31: root                               EvaluationManager.py <_prstr>207 :  Average success = 11.00 +- 6.21
Average turns   = 10.07 +- 0.94
RESULTS:: 20:00:31: root                               EvaluationManager.py <_prstr>207 :  Average turns   = 10.07 +- 0.94
RESULTS:: 20:00:31: root                                   pydial.py <train_command>867 :  *** Training complete. log: env11-dqn-CH-MLN-seed7051975-00.1-40.train.log - final policy is env11-dqn-CH-MLN-00-40
